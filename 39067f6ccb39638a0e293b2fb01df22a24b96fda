{
  "comments": [
    {
      "key": {
        "uuid": "9fae6a64_6fc48199",
        "filename": "include/openssl/ssl.h",
        "patchSetId": 2
      },
      "lineNbr": 2377,
      "author": {
        "id": 5070
      },
      "writtenOn": "2015-10-13T02:20:42Z",
      "side": 1,
      "message": "SSL_CTX_set_renegotiate_mode? Do we need to set this on the SSL*? (It\u0027s a structure that we have a lot of in servers.)",
      "revId": "39067f6ccb39638a0e293b2fb01df22a24b96fda",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dfe9c22c_e0c84286",
        "filename": "include/openssl/ssl.h",
        "patchSetId": 2
      },
      "lineNbr": 2377,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-10-13T04:38:48Z",
      "side": 1,
      "message": "Chromium needs to be able to set it after ALPN is resolved (we block it for HTTP/2 and SPDY, but not HTTP/1.1), so I\u0027ll need to be able to do it per-SSL somehow.\n\nThis is yet another different API, but maybe:\n\n  /* cb returns one to accept the renego and zero to fail the connection. */\n  void SSL_CTX_set_accept_renegotiate_callback(SSL_CTX *ctx, int (*cb)(SSL *ssl));\n\nThen I could just store a single callback on the SSL_CTX and query stuff hanging off ssl\u0027s ex_data as always. What do you think?",
      "parentUuid": "9fae6a64_6fc48199",
      "revId": "39067f6ccb39638a0e293b2fb01df22a24b96fda",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9fae6a64_7a81a1f7",
        "filename": "include/openssl/ssl.h",
        "patchSetId": 2
      },
      "lineNbr": 2377,
      "author": {
        "id": 5070
      },
      "writtenOn": "2015-10-13T13:12:55Z",
      "side": 1,
      "message": "Ah, in that case we probably want to follow the existing practice and have SSL_CTX_ and SSL_ setters, with SSL_new copying.",
      "parentUuid": "dfe9c22c_e0c84286",
      "revId": "39067f6ccb39638a0e293b2fb01df22a24b96fda",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df3d424e_e0f022c6",
        "filename": "include/openssl/ssl.h",
        "patchSetId": 2
      },
      "lineNbr": 2379,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-10-13T00:09:54Z",
      "side": 1,
      "message": "(Still needed for Chromium since we can\u0027t decide until after ALPN resolves.)",
      "range": {
        "startLine": 2378,
        "startChar": 25,
        "endLine": 2379,
        "endChar": 12
      },
      "revId": "39067f6ccb39638a0e293b2fb01df22a24b96fda",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df3d424e_40d54e17",
        "filename": "include/openssl/ssl.h",
        "patchSetId": 2
      },
      "lineNbr": 2386,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-10-13T00:09:54Z",
      "side": 1,
      "message": "\u003cbikeshed\u003erenegotiation_mode?\u003c/bikeshed\u003e",
      "range": {
        "startLine": 2386,
        "startChar": 28,
        "endLine": 2386,
        "endChar": 44
      },
      "revId": "39067f6ccb39638a0e293b2fb01df22a24b96fda",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9fae6a64_7a79a1f6",
        "filename": "include/openssl/ssl.h",
        "patchSetId": 2
      },
      "lineNbr": 2386,
      "author": {
        "id": 5645
      },
      "writtenOn": "2015-10-13T18:08:17Z",
      "side": 1,
      "message": "I find a 2:1 ratio of \"renegotiation\" : \"renegotiate\" in the code base.\n\nHowever, I cannot spell either one (I persistently write \"renegotate\") so if there is a third option I\u0027m all for it.",
      "parentUuid": "df3d424e_40d54e17",
      "range": {
        "startLine": 2386,
        "startChar": 28,
        "endLine": 2386,
        "endChar": 44
      },
      "revId": "39067f6ccb39638a0e293b2fb01df22a24b96fda",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    }
  ]
}