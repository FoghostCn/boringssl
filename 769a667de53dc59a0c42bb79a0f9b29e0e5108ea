{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "693147da_da691760",
        "filename": "crypto/x509v3/v3_utl.c",
        "patchSetId": 1
      },
      "lineNbr": 255,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-03-24T13:51:42Z",
      "side": 1,
      "message": "While a little subtle, I don\u0027t believe this is out of bounds. Were you able to repr this with ASan/MSan? I notice the CL doesn\u0027t have a test.\n\n`value` is a NUL-terminated C string, which means it is safe to access `value[i]` if you know `value[0..i-1]` are non-NUL. So the `value[0]` access is always okay and, given that\u0027s not NUL, we know the `value[1]` access is okay. Doing it this way also avoids doing two passes over the string if it\u0027s a long one.\n\nIndeed your CL relies on this property too. Under the hood, `strlen` keeps reading bytes until it finds a non-NUL byte.\n\nDoes that make sense, or was I missing something and you had a different issue was something else?",
      "revId": "769a667de53dc59a0c42bb79a0f9b29e0e5108ea",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a6e5e98_c55b665e",
        "filename": "crypto/x509v3/v3_utl.c",
        "patchSetId": 1
      },
      "lineNbr": 255,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-03-29T15:26:02Z",
      "side": 1,
      "message": "Thanks for the CL Jiale! While I know it looks a bit funny my analysis of this agrees with David\u0027s as near as I can tell. Did you find a crash or something with ASAN around here? or do you think in retrospect this is fine and we should close this? \n\nThanks.",
      "parentUuid": "693147da_da691760",
      "revId": "769a667de53dc59a0c42bb79a0f9b29e0e5108ea",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "769a667de53dc59a0c42bb79a0f9b29e0e5108ea",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "769a667de53dc59a0c42bb79a0f9b29e0e5108ea",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}