{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "dded304d_ef85e98d",
        "filename": "crypto/asn1/a_utctm.c",
        "patchSetId": 6
      },
      "lineNbr": 110,
      "author": {
        "id": 5415
      },
      "writtenOn": "2022-10-27T14:32:53Z",
      "side": 0,
      "message": "Should we just remove this function? `ASN1_UTCTIME_cmp_time_t` calls it, but passing a `time_t` to `OPENSSL_posix_to_tm` works just fine. (We can even `static_assert(sizeof(time_t) \u003c\u003d sizeof(ossl_time_t), \"time_t is larger than ossl_time_t\")` somewhere in posix_time.c for bonus points.)",
      "range": {
        "startLine": 110,
        "startChar": 7,
        "endLine": 110,
        "endChar": 21
      },
      "revId": "ca6fa61cdb1cd5c6402fd41908479bbbf1b4566b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e86506c3_4fb37ecb",
        "filename": "crypto/asn1/a_utctm.c",
        "patchSetId": 6
      },
      "lineNbr": 110,
      "author": {
        "id": 14196
      },
      "writtenOn": "2022-10-27T16:48:26Z",
      "side": 0,
      "message": "I think we should consider removing these. And also the newly added \"to_time_t\" - we literally just added this because our \"feature\" said we neeeded it - but in fact we fixed the consumers with \"to_posix\" so IMO we should just provide \"to_posix\" and people can do their own overflow detection and convert once they have an int64_t. version of time.  I know that sounds scary, but I believe people will screw that up less than they will screw up checking for an error condition in an OpenSSL style API. \n\nHowever, I was planning on doing that in a followon.",
      "parentUuid": "dded304d_ef85e98d",
      "range": {
        "startLine": 110,
        "startChar": 7,
        "endLine": 110,
        "endChar": 21
      },
      "revId": "ca6fa61cdb1cd5c6402fd41908479bbbf1b4566b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15d08a8b_65f9f632",
        "filename": "crypto/asn1/a_utctm.c",
        "patchSetId": 6
      },
      "lineNbr": 110,
      "author": {
        "id": 5415
      },
      "writtenOn": "2022-10-31T23:08:06Z",
      "side": 0,
      "message": "Sounds good! When you get to that, I suspect this can also be cleaned up.\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/boringssl/src/crypto/asn1/asn1_test.cc;drc\u003dcab31f65f1ad6e6daca62e95b25dd6cd805fce0b;l\u003d982",
      "parentUuid": "e86506c3_4fb37ecb",
      "range": {
        "startLine": 110,
        "startChar": 7,
        "endLine": 110,
        "endChar": 21
      },
      "revId": "ca6fa61cdb1cd5c6402fd41908479bbbf1b4566b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    }
  ]
}