{
  "comments": [
    {
      "key": {
        "uuid": "33f66d4a_f9db9734",
        "filename": "include/openssl/ssl.h",
        "patchSetId": 4
      },
      "lineNbr": 1142,
      "author": {
        "id": 5005
      },
      "writtenOn": "2014-08-19T19:12:53Z",
      "side": 1,
      "message": "/* SSL_enable_signed_cert_timestamps causes |ssl| (which must be the client end of a connection) to request SCTs from the server. See https://tools.ietf.org/html/rfc6962. */\n\nWe probably want to set this on an SSL_CTX for Chromium.",
      "revId": "ab791900746ad92d9d1bcea7fe28a04ea439799d",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9310f93f_ceffe374",
        "filename": "include/openssl/ssl.h",
        "patchSetId": 4
      },
      "lineNbr": 1142,
      "author": {
        "id": 5225
      },
      "writtenOn": "2014-08-19T20:37:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "33f66d4a_f9db9734",
      "revId": "ab791900746ad92d9d1bcea7fe28a04ea439799d",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "33f66d4a_b9fcef80",
        "filename": "include/openssl/ssl.h",
        "patchSetId": 4
      },
      "lineNbr": 1146,
      "author": {
        "id": 5005
      },
      "writtenOn": "2014-08-19T19:12:53Z",
      "side": 1,
      "message": "/* SSL_get0_signed_cert_timestamp_list sets |*out| and |*out_len| to point to |*out_len| bytes of SCT information from the server. This is only valid if |ssl| is a client.\n\nThe SCT information is a SignedCertificateTimestampList (including the two leading length bytes). See https://tools.ietf.org/html/rfc6962#section-3.3\n\nIf no SCT was received then |*out_len| will be zero on return. */\n\n\n(And length -\u003e out_len).",
      "revId": "ab791900746ad92d9d1bcea7fe28a04ea439799d",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9310f93f_aefcaf80",
        "filename": "include/openssl/ssl.h",
        "patchSetId": 4
      },
      "lineNbr": 1146,
      "author": {
        "id": 5225
      },
      "writtenOn": "2014-08-19T20:37:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "33f66d4a_b9fcef80",
      "revId": "ab791900746ad92d9d1bcea7fe28a04ea439799d",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "33f66d4a_99bdabc5",
        "filename": "ssl/ssl_asn1.c",
        "patchSetId": 4
      },
      "lineNbr": 594,
      "author": {
        "id": 5005
      },
      "writtenOn": "2014-08-19T19:12:53Z",
      "side": 1,
      "message": "I think that this can all be one line.",
      "revId": "ab791900746ad92d9d1bcea7fe28a04ea439799d",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "33f66d4a_39cc5f71",
        "filename": "ssl/ssl_asn1.c",
        "patchSetId": 4
      },
      "lineNbr": 595,
      "author": {
        "id": 5005
      },
      "writtenOn": "2014-08-19T19:12:53Z",
      "side": 1,
      "message": "I\u0027m not sure about this sizeof. In the original_handshake_hash case it\u0027s because there\u0027s a fixed size array that the data is copied to, but that\u0027s not the case here.",
      "range": {
        "startLine": 595,
        "startChar": 20,
        "endLine": 595,
        "endChar": 26
      },
      "revId": "ab791900746ad92d9d1bcea7fe28a04ea439799d",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9310f93f_2e11bf26",
        "filename": "ssl/ssl_asn1.c",
        "patchSetId": 4
      },
      "lineNbr": 595,
      "author": {
        "id": 5225
      },
      "writtenOn": "2014-08-19T20:37:49Z",
      "side": 1,
      "message": "Agh. Yeah, this is clearly wrong.",
      "parentUuid": "33f66d4a_39cc5f71",
      "range": {
        "startLine": 595,
        "startChar": 20,
        "endLine": 595,
        "endChar": 26
      },
      "revId": "ab791900746ad92d9d1bcea7fe28a04ea439799d",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "33f66d4a_599e035b",
        "filename": "ssl/ssl_asn1.c",
        "patchSetId": 4
      },
      "lineNbr": 597,
      "author": {
        "id": 5005
      },
      "writtenOn": "2014-08-19T19:12:53Z",
      "side": 1,
      "message": "I think you need to free ret-\u003etlsext_signed_cert_timestamp_list (if not NULL) first and the assign os.data to it. Then the OPENSSL_free(os.data) can be omitted.",
      "range": {
        "startLine": 597,
        "startChar": 9,
        "endLine": 597,
        "endChar": 47
      },
      "revId": "ab791900746ad92d9d1bcea7fe28a04ea439799d",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9310f93f_4ec7534f",
        "filename": "ssl/ssl_asn1.c",
        "patchSetId": 4
      },
      "lineNbr": 597,
      "author": {
        "id": 5225
      },
      "writtenOn": "2014-08-19T20:37:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "33f66d4a_599e035b",
      "range": {
        "startLine": 597,
        "startChar": 9,
        "endLine": 597,
        "endChar": 47
      },
      "revId": "ab791900746ad92d9d1bcea7fe28a04ea439799d",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "33f66d4a_39a33f9f",
        "filename": "ssl/ssl_lib.c",
        "patchSetId": 4
      },
      "lineNbr": 1691,
      "author": {
        "id": 5005
      },
      "writtenOn": "2014-08-19T19:12:53Z",
      "side": 1,
      "message": "indentation is incorrect. (Such as OpenSSL has a \"correct\" indentation.)",
      "revId": "ab791900746ad92d9d1bcea7fe28a04ea439799d",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9310f93f_6ea9f77e",
        "filename": "ssl/ssl_lib.c",
        "patchSetId": 4
      },
      "lineNbr": 1691,
      "author": {
        "id": 5225
      },
      "writtenOn": "2014-08-19T20:37:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "33f66d4a_39a33f9f",
      "revId": "ab791900746ad92d9d1bcea7fe28a04ea439799d",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "33f66d4a_19b87bc5",
        "filename": "ssl/ssl_lib.c",
        "patchSetId": 4
      },
      "lineNbr": 1698,
      "author": {
        "id": 5005
      },
      "writtenOn": "2014-08-19T19:12:53Z",
      "side": 1,
      "message": "*out has already been written so \"if (out)\" is superfluous.",
      "revId": "ab791900746ad92d9d1bcea7fe28a04ea439799d",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9310f93f_8ea44ba9",
        "filename": "ssl/ssl_lib.c",
        "patchSetId": 4
      },
      "lineNbr": 1698,
      "author": {
        "id": 5225
      },
      "writtenOn": "2014-08-19T20:37:49Z",
      "side": 1,
      "message": "*out was written, not out. This check enables caller to check the length of the list.",
      "parentUuid": "33f66d4a_19b87bc5",
      "revId": "ab791900746ad92d9d1bcea7fe28a04ea439799d",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "33f66d4a_be8f306a",
        "filename": "ssl/ssl_lib.c",
        "patchSetId": 4
      },
      "lineNbr": 1698,
      "author": {
        "id": 5075
      },
      "writtenOn": "2014-08-20T16:35:57Z",
      "side": 1,
      "message": "If out is NULL, then line 1692 would already have dereferenced the NULL pointer. (And since doing so is undefined, the compiler\u0027s actually allowed to optimize this check out since it occurs after line 1692.)\n\n(There\u0027s probably no need to bother with the length-checking thing if this API is get0 rather than get1? If the caller were to supply a buffer for us to copy into, then you\u0027d want that, but this is just supplying two pointers.)",
      "parentUuid": "9310f93f_8ea44ba9",
      "revId": "ab791900746ad92d9d1bcea7fe28a04ea439799d",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9310f93f_94ae9cb8",
        "filename": "ssl/ssl_lib.c",
        "patchSetId": 4
      },
      "lineNbr": 1698,
      "author": {
        "id": 5225
      },
      "writtenOn": "2014-08-20T18:18:05Z",
      "side": 1,
      "message": "Heh, clearly a hint that I should not reply on comments too late in the evening.",
      "parentUuid": "33f66d4a_be8f306a",
      "revId": "ab791900746ad92d9d1bcea7fe28a04ea439799d",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "33f66d4a_998feb21",
        "filename": "ssl/t1_lib.c",
        "patchSetId": 4
      },
      "lineNbr": 2287,
      "author": {
        "id": 5005
      },
      "writtenOn": "2014-08-19T19:12:53Z",
      "side": 1,
      "message": "indentation is wrong.",
      "range": {
        "startLine": 2287,
        "startChar": 6,
        "endLine": 2287,
        "endChar": 7
      },
      "revId": "ab791900746ad92d9d1bcea7fe28a04ea439799d",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9310f93f_6ec21741",
        "filename": "ssl/t1_lib.c",
        "patchSetId": 4
      },
      "lineNbr": 2287,
      "author": {
        "id": 5225
      },
      "writtenOn": "2014-08-19T20:37:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "33f66d4a_998feb21",
      "range": {
        "startLine": 2287,
        "startChar": 6,
        "endLine": 2287,
        "endChar": 7
      },
      "revId": "ab791900746ad92d9d1bcea7fe28a04ea439799d",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    }
  ]
}