{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8fa54a92_84dc2688",
        "filename": "rust/bssl/deny.toml",
        "patchSetId": 39
      },
      "lineNbr": 208,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-03-09T23:25:56Z",
      "side": 1,
      "message": "comment this out for now",
      "revId": "fd86544055a948cb6da951787639172b4737d88b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bb4b8437_9113cf5b",
        "filename": "rust/bssl/deny.toml",
        "patchSetId": 39
      },
      "lineNbr": 208,
      "author": {
        "id": 15751
      },
      "writtenOn": "2023-03-09T23:31:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8fa54a92_84dc2688",
      "revId": "fd86544055a948cb6da951787639172b4737d88b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35ef5bc2_aa9e499b",
        "filename": "rust/bssl/deny.toml",
        "patchSetId": 39
      },
      "lineNbr": 210,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-03-09T23:25:56Z",
      "side": 1,
      "message": "and this one...",
      "revId": "fd86544055a948cb6da951787639172b4737d88b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a326fec7_6af18741",
        "filename": "rust/bssl/deny.toml",
        "patchSetId": 39
      },
      "lineNbr": 210,
      "author": {
        "id": 15751
      },
      "writtenOn": "2023-03-09T23:31:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "35ef5bc2_aa9e499b",
      "revId": "fd86544055a948cb6da951787639172b4737d88b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8167d82f_585b98be",
        "filename": "rust/bssl/deny.toml",
        "patchSetId": 39
      },
      "lineNbr": 212,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-03-09T23:25:56Z",
      "side": 1,
      "message": "and this one.",
      "revId": "fd86544055a948cb6da951787639172b4737d88b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bc7f7f05_8eeb73e8",
        "filename": "rust/bssl/deny.toml",
        "patchSetId": 39
      },
      "lineNbr": 212,
      "author": {
        "id": 15751
      },
      "writtenOn": "2023-03-09T23:31:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8167d82f_585b98be",
      "revId": "fd86544055a948cb6da951787639172b4737d88b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "472b8f05_b911b06e",
        "filename": "rust/bssl/src/hmac.rs",
        "patchSetId": 39
      },
      "lineNbr": 24,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-03-09T23:25:56Z",
      "side": 1,
      "message": "Hey what\u0027s the thought on why we want this? Since this is all C under the covers I\u0027m somewhat allergic to this bringing in dependencies, but if we really need/want it for other things? @danakj@chromium.org - this a crate we want?",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 34
      },
      "revId": "fd86544055a948cb6da951787639172b4737d88b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf26c4cb_1418816f",
        "filename": "rust/bssl/src/hmac.rs",
        "patchSetId": 39
      },
      "lineNbr": 24,
      "author": {
        "id": 15751
      },
      "writtenOn": "2023-03-09T23:36:55Z",
      "side": 1,
      "message": "I pulled this in basically just for convenience of wrapping C types, its a small lib which mostly just exposes helper macro/fns, for example `as_ptr` and `as_ptr`. My thinking was that we would end up re-implementing all of these anyways, so might as well re-use this existing crate here",
      "parentUuid": "472b8f05_b911b06e",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 34
      },
      "revId": "fd86544055a948cb6da951787639172b4737d88b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da5bba0a_3b7859fd",
        "filename": "rust/bssl/src/hmac.rs",
        "patchSetId": 39
      },
      "lineNbr": 271,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-03-09T23:36:01Z",
      "side": 1,
      "message": "warning: casting to the same type is unnecessary (`usize` -\u003e `usize`)\n   --\u003e src/hmac.rs:271:17\n    |\n271 |                 result.len() as usize,\n    |                 ^^^^^^^^^^^^^^^^^^^^^ help: try: `result.len()`\n    |\n    \u003d help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    \u003d note: `#[warn(clippy::unnecessary_cast)]` on by default\n\nPlease fix.",
      "range": {
        "startLine": 271,
        "startChar": 0,
        "endLine": 271,
        "endChar": 38
      },
      "revId": "fd86544055a948cb6da951787639172b4737d88b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe8b5d6f_dfe59da8",
        "filename": "rust/bssl/src/hmac.rs",
        "patchSetId": 39
      },
      "lineNbr": 271,
      "author": {
        "id": 15751
      },
      "writtenOn": "2023-03-09T23:39:43Z",
      "side": 1,
      "message": "good catch, thanks for running that. Updated and cargo clippy output is now coming back clean",
      "parentUuid": "da5bba0a_3b7859fd",
      "range": {
        "startLine": 271,
        "startChar": 0,
        "endLine": 271,
        "endChar": 38
      },
      "revId": "fd86544055a948cb6da951787639172b4737d88b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    }
  ]
}