{
  "comments": [
    {
      "key": {
        "uuid": "a89e4069_1d13a52d",
        "filename": "crypto/hrss/hrss.c",
        "patchSetId": 20
      },
      "lineNbr": 83,
      "author": {
        "id": 5415
      },
      "writtenOn": "2018-12-06T00:30:58Z",
      "side": 1,
      "message": "Nit: The ARM code takes a uint16_t. It doesn\u0027t matter because the only uses pass in a crypto_word_t boolean, but maybe use _mm_set1_epi16 here for consistency?\n\nOr maybe just take a crypto_word_t and document that it only takes true/false masks. Then just about anything works.",
      "range": {
        "startLine": 83,
        "startChar": 28,
        "endLine": 83,
        "endChar": 36
      },
      "revId": "6c943d372cd65188d4ad8dcde33800208b9022b5",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca883563_f2d63d02",
        "filename": "crypto/hrss/hrss.c",
        "patchSetId": 20
      },
      "lineNbr": 83,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-06T02:54:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a89e4069_1d13a52d",
      "range": {
        "startLine": 83,
        "startChar": 28,
        "endLine": 83,
        "endChar": 36
      },
      "revId": "6c943d372cd65188d4ad8dcde33800208b9022b5",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0eab93d2_9373f106",
        "filename": "crypto/hrss/hrss.c",
        "patchSetId": 20
      },
      "lineNbr": 642,
      "author": {
        "id": 5415
      },
      "writtenOn": "2018-12-06T00:30:58Z",
      "side": 1,
      "message": "How big is scratch? (2n+2 it looks like?)",
      "range": {
        "startLine": 642,
        "startChar": 65,
        "endLine": 642,
        "endChar": 66
      },
      "revId": "6c943d372cd65188d4ad8dcde33800208b9022b5",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7d62ae2_51a722c0",
        "filename": "crypto/hrss/hrss.c",
        "patchSetId": 20
      },
      "lineNbr": 642,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-06T02:54:38Z",
      "side": 1,
      "message": "It\u0027s complicated. Comment expanded.",
      "parentUuid": "0eab93d2_9373f106",
      "range": {
        "startLine": 642,
        "startChar": 65,
        "endLine": 642,
        "endChar": 66
      },
      "revId": "6c943d372cd65188d4ad8dcde33800208b9022b5",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "effa9e1e_73fdc5e1",
        "filename": "crypto/hrss/hrss.c",
        "patchSetId": 20
      },
      "lineNbr": 664,
      "author": {
        "id": 5415
      },
      "writtenOn": "2018-12-06T00:30:58Z",
      "side": 1,
      "message": "It\u0027s also undefined to do that. :-)",
      "range": {
        "startLine": 664,
        "startChar": 18,
        "endLine": 664,
        "endChar": 44
      },
      "revId": "6c943d372cd65188d4ad8dcde33800208b9022b5",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27587b1a_f3006f21",
        "filename": "crypto/hrss/hrss.c",
        "patchSetId": 20
      },
      "lineNbr": 664,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-06T02:54:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "effa9e1e_73fdc5e1",
      "range": {
        "startLine": 664,
        "startChar": 18,
        "endLine": 664,
        "endChar": 44
      },
      "revId": "6c943d372cd65188d4ad8dcde33800208b9022b5",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04951df9_64fdc7b8",
        "filename": "crypto/hrss/hrss.c",
        "patchSetId": 20
      },
      "lineNbr": 782,
      "author": {
        "id": 5415
      },
      "writtenOn": "2018-12-06T00:30:58Z",
      "side": 1,
      "message": "This differs from poly3_fmadd a bit. This one expects ms and ma to already have all the bits duplicated, while poly3_fmadd does it internally. Probably worth calling attention to this.\n\nI would hope the compiler can just deal with it either way, but making poly3_fmadd match this might actually make sense. They\u0027re both used in poly3_invert where the ms and ma (s_s and s_a) are otherwise used to compute should_swap, which also wants the bit duplicated. Moving the bit duplication outside would save doing it redundantly.",
      "revId": "6c943d372cd65188d4ad8dcde33800208b9022b5",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7723cbbd_b42ad2a7",
        "filename": "crypto/hrss/hrss.c",
        "patchSetId": 20
      },
      "lineNbr": 782,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-06T02:54:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "04951df9_64fdc7b8",
      "revId": "6c943d372cd65188d4ad8dcde33800208b9022b5",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4da6ba5c_b550caf7",
        "filename": "crypto/hrss/hrss.c",
        "patchSetId": 20
      },
      "lineNbr": 852,
      "author": {
        "id": 5415
      },
      "writtenOn": "2018-12-06T00:33:08Z",
      "side": 1,
      "message": "This doesn\u0027t appear to survive trailing gunk either.\n\nDitto in crypto_word_t version below.",
      "revId": "6c943d372cd65188d4ad8dcde33800208b9022b5",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "976bd29e_8bcdda22",
        "filename": "crypto/hrss/hrss.c",
        "patchSetId": 20
      },
      "lineNbr": 852,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-06T02:54:38Z",
      "side": 1,
      "message": "I claim that |f| and |g| never have gunk: they start gunk-free, right-shifting doesn\u0027t create gunk, they swap only with themselves, and fmadd with gunk-free arguments gives gunk-free output.\n\nThat is not true of |b| and |c| because left-shifting creates gunk. It turns out that |b| is gunk-free by the end, at least in tests, but I can\u0027t prove that, so I\u0027ve added degunking before the rotate.",
      "parentUuid": "4da6ba5c_b550caf7",
      "revId": "6c943d372cd65188d4ad8dcde33800208b9022b5",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ddcb4412_6315b429",
        "filename": "crypto/hrss/hrss.c",
        "patchSetId": 20
      },
      "lineNbr": 852,
      "author": {
        "id": 5415
      },
      "writtenOn": "2018-12-07T00:44:17Z",
      "side": 1,
      "message": "Re |f| and |g|, I\u0027ve been confused all this time and assuming fmadd will produce gunk. So yeah ignore this note.",
      "parentUuid": "976bd29e_8bcdda22",
      "revId": "6c943d372cd65188d4ad8dcde33800208b9022b5",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "319c4fd1_9e274bea",
        "filename": "crypto/hrss/hrss.c",
        "patchSetId": 20
      },
      "lineNbr": 865,
      "author": {
        "id": 5415
      },
      "writtenOn": "2018-12-06T00:30:58Z",
      "side": 1,
      "message": "In the paper, this is a conditional subtraction (line 12 deg_f \u003d deg_f - ~done), but here it\u0027s unconditional. It seems that, unlike the paper\u0027s algorithm, this can cause still_going to flip from 0 back to f..f.\n\nDid you mean still_going \u0026\u003d ~vec_set(...) below? Or deg_f \u003d deg_f - (1 \u0026 still_going_word)?\n\nDitto in crypto_word_t version below.",
      "revId": "6c943d372cd65188d4ad8dcde33800208b9022b5",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9113ec51_b3e956fb",
        "filename": "crypto/hrss/hrss.c",
        "patchSetId": 20
      },
      "lineNbr": 865,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-06T02:54:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "319c4fd1_9e274bea",
      "revId": "6c943d372cd65188d4ad8dcde33800208b9022b5",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e99775b2_864ad49e",
        "filename": "crypto/hrss/hrss.c",
        "patchSetId": 20
      },
      "lineNbr": 867,
      "author": {
        "id": 5415
      },
      "writtenOn": "2018-12-06T00:30:58Z",
      "side": 1,
      "message": "Given you\u0027re only ever using f0_is_zero as ~f0_is_zero[_word] and this already has an inversion, maybe just compute f0_is_non_zero[_word]?\n\n(I suspect that the compiler is not going to optimize across word_from_vec well.)\n\nDitto in crypto_word_t version below.",
      "range": {
        "startLine": 867,
        "startChar": 16,
        "endLine": 867,
        "endChar": 26
      },
      "revId": "6c943d372cd65188d4ad8dcde33800208b9022b5",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c21a828_a9c527ce",
        "filename": "crypto/hrss/hrss.c",
        "patchSetId": 20
      },
      "lineNbr": 867,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-06T02:54:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e99775b2_864ad49e",
      "range": {
        "startLine": 867,
        "startChar": 16,
        "endLine": 867,
        "endChar": 26
      },
      "revId": "6c943d372cd65188d4ad8dcde33800208b9022b5",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b188c216_9ebdee76",
        "filename": "crypto/hrss/hrss.c",
        "patchSetId": 20
      },
      "lineNbr": 883,
      "author": {
        "id": 5415
      },
      "writtenOn": "2018-12-06T00:30:58Z",
      "side": 1,
      "message": "out is seeded from b, which sees poly3_vec_fmadd, which does *not* clear trailing bits. That means poly3_rotr_consttime must survive gunk up there. I\u0027m not sure it does.\n\npoly2_rotr_bits ends with:\n\n  crypto_word_t last_word \u003d carry \u003e\u003e (BITS_PER_WORD - BITS_IN_LAST_WORD) |\n                            in-\u003ev[WORDS_PER_POLY - 1] \u003e\u003e bits;\n\nIf there was trailing gunk, it would end up in last_word, no?\n\n(If it is meant to survive it, that probably deserves a test. Trailing gunk is mostly free, except when we start doing some rotations.)\n\nDitto in crypto_word_t version below.",
      "range": {
        "startLine": 883,
        "startChar": 2,
        "endLine": 883,
        "endChar": 22
      },
      "revId": "6c943d372cd65188d4ad8dcde33800208b9022b5",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75a7e080_2aecbe29",
        "filename": "crypto/hrss/hrss.c",
        "patchSetId": 20
      },
      "lineNbr": 883,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-06T02:54:38Z",
      "side": 1,
      "message": "(Repeated from above:)\n\nIn practice |b| ends up gunk-free in tests, but I can\u0027t show that\u0027s always true. Thus I\u0027ve added degunking before rotating.",
      "parentUuid": "b188c216_9ebdee76",
      "range": {
        "startLine": 883,
        "startChar": 2,
        "endLine": 883,
        "endChar": 22
      },
      "revId": "6c943d372cd65188d4ad8dcde33800208b9022b5",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d68dae2e_18e8b048",
        "filename": "crypto/hrss/hrss.c",
        "patchSetId": 20
      },
      "lineNbr": 883,
      "author": {
        "id": 5415
      },
      "writtenOn": "2018-12-07T00:44:17Z",
      "side": 1,
      "message": "I figured it out!\n\n\nLemma: deg(f)+1 \u003c\u003d deg_f and deg(g)+1 \u003c\u003d deg_g (deg(x^2) \u003d 2, deg(x) \u003d 1, deg(1) \u003d 0, and deg(0) \u003d -1, so I\u0027m adding one to count terms.)\nProof:\nThis starts out true.\n\nWe decrement deg_f (until still_going \u003d 0, but at that point deg_f is zero) iff we rshift1(f) and we swap f and g iff we swap deg_f and deg_g.\n\nThe one nuisance is fmadd(f, g, s) may increase f\u0027s degree up to deg_g. But we swap if s !\u003d 0 \u0026\u0026 deg_f \u003c deg_g, so either s is zero (in which case fmadd is a no-op) or we make sure deg_f \u003e\u003d deg_g before fmadd.\n\n\nRemark: I believe still_going is a no-op, which is probably why deg_f-- vs deg_f -\u003d 1 \u0026 still_going didn\u0027t matter. Once deg_f has hit zero, f is also zero, which means f_0 is always zero, which means:\n\n- s \u003d -f0*g0 \u003d 0\n- should_swap \u003d still_going /\\ s !\u003d 0 /\\ deg_f \u003c deg_g \u003d false\n- f0_is_nonzero \u003d false, so still_going /\\ f0_is_nonzero \u003d false\n- no other computation uses still_going\n\n(It might have mattered in the original to compute the right k, but we appear to think the more complex f0_is_nonzero logic is needed anyway. And I guess deg_f underflowing is confusing. It just doesn\u0027t actually matter if it does.)\n\n\nLemma: deg_g \u003e\u003d 1 throughout the algorithm\nProof: We only ever decrement deg_f. Once deg_f hits zero, we stop swapping, so we\u0027ll never set deg_g to zero.\n\n\nLemma: until still_going \u003d false, deg(c)+1 \u003c\u003d N - deg_f and deg(b)+1 \u003c\u003d N - deg_g\nProof: This starts out true. Every time we swap f and g, we also swap b and c. Every time we right-shift f, we also left-shift c and adjust deg_f to compensate.\n\n\nThe above holds for b and g even once still_going \u003d false because, at that point, there are no more swaps and we leave b, g, and deg_g alone. It does *not* obviously hold for c because we\u0027ll keep left-shifting c and right-shifting f past the point that f has terms to right-shift, but we don\u0027t return c so we don\u0027t care. I suspect c can indeed have trailing gunk.\n\nThat means, at the end, we have deg(b)+1 \u003c\u003d N - deg_g \u003c\u003d N - 1, which means there are no terms in b to truncate.\n\n\nSo, that explains the confusion earlier about whether f/X and c*X should be circular or truncating. It doesn\u0027t matter. If f/X is circular, deg_f/keep_going will stop us from paying attention to further terms (though it\u0027s clearly meant to be truncating). c*X being circular is irrelevant for all values that end up in b. It might affect the final value of c, but we only care about b.",
      "parentUuid": "75a7e080_2aecbe29",
      "range": {
        "startLine": 883,
        "startChar": 2,
        "endLine": 883,
        "endChar": 22
      },
      "revId": "6c943d372cd65188d4ad8dcde33800208b9022b5",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6b893ae_dccc80bc",
        "filename": "crypto/hrss/hrss.c",
        "patchSetId": 20
      },
      "lineNbr": 883,
      "author": {
        "id": 5005
      },
      "writtenOn": "2018-12-10T17:02:30Z",
      "side": 1,
      "message": "Thank you for that. I\u0027ve done a handful of changes to all three inversion functions based on that to try and move operations out of the loop.",
      "parentUuid": "d68dae2e_18e8b048",
      "range": {
        "startLine": 883,
        "startChar": 2,
        "endLine": 883,
        "endChar": 22
      },
      "revId": "6c943d372cd65188d4ad8dcde33800208b9022b5",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9770a41b_9a0bbfa2",
        "filename": "crypto/hrss/hrss.c",
        "patchSetId": 20
      },
      "lineNbr": 930,
      "author": {
        "id": 5415
      },
      "writtenOn": "2018-12-06T00:30:58Z",
      "side": 1,
      "message": "lsb_to_all? Probably a little more efficient. Ditto with f0_is_zero below.",
      "range": {
        "startLine": 930,
        "startChar": 8,
        "endLine": 930,
        "endChar": 32
      },
      "revId": "6c943d372cd65188d4ad8dcde33800208b9022b5",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57b2cf0f_b141d9d0",
        "filename": "crypto/hrss/hrss.c",
        "patchSetId": 20
      },
      "lineNbr": 930,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-06T02:54:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9770a41b_9a0bbfa2",
      "range": {
        "startLine": 930,
        "startChar": 8,
        "endLine": 930,
        "endChar": 32
      },
      "revId": "6c943d372cd65188d4ad8dcde33800208b9022b5",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0c0399e_91ebcff2",
        "filename": "crypto/hrss/hrss.c",
        "patchSetId": 20
      },
      "lineNbr": 997,
      "author": {
        "id": 5415
      },
      "writtenOn": "2018-12-06T00:30:58Z",
      "side": 1,
      "message": "How big is scratch?",
      "range": {
        "startLine": 997,
        "startChar": 50,
        "endLine": 997,
        "endChar": 60
      },
      "revId": "6c943d372cd65188d4ad8dcde33800208b9022b5",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "999452c2_5637e4cc",
        "filename": "crypto/hrss/hrss.c",
        "patchSetId": 20
      },
      "lineNbr": 997,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-06T02:54:38Z",
      "side": 1,
      "message": "It\u0027s complicated. Commented added.",
      "parentUuid": "d0c0399e_91ebcff2",
      "range": {
        "startLine": 997,
        "startChar": 50,
        "endLine": 997,
        "endChar": 60
      },
      "revId": "6c943d372cd65188d4ad8dcde33800208b9022b5",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8de5de99_b31866aa",
        "filename": "crypto/hrss/hrss.c",
        "patchSetId": 20
      },
      "lineNbr": 1002,
      "author": {
        "id": 5415
      },
      "writtenOn": "2018-12-06T00:30:58Z",
      "side": 1,
      "message": "s/Katatsuba/Karatsuba/g",
      "range": {
        "startLine": 1002,
        "startChar": 5,
        "endLine": 1002,
        "endChar": 14
      },
      "revId": "6c943d372cd65188d4ad8dcde33800208b9022b5",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9295e656_e605b395",
        "filename": "crypto/hrss/hrss.c",
        "patchSetId": 20
      },
      "lineNbr": 1002,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-06T02:54:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8de5de99_b31866aa",
      "range": {
        "startLine": 1002,
        "startChar": 5,
        "endLine": 1002,
        "endChar": 14
      },
      "revId": "6c943d372cd65188d4ad8dcde33800208b9022b5",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53c640dc_e9ced420",
        "filename": "crypto/hrss/hrss.c",
        "patchSetId": 20
      },
      "lineNbr": 1027,
      "author": {
        "id": 5415
      },
      "writtenOn": "2018-12-06T00:30:58Z",
      "side": 1,
      "message": "simpler",
      "range": {
        "startLine": 1027,
        "startChar": 28,
        "endLine": 1027,
        "endChar": 36
      },
      "revId": "6c943d372cd65188d4ad8dcde33800208b9022b5",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ef40b3e_dd2ae304",
        "filename": "crypto/hrss/hrss.c",
        "patchSetId": 20
      },
      "lineNbr": 1027,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-06T02:54:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "53c640dc_e9ced420",
      "range": {
        "startLine": 1027,
        "startChar": 28,
        "endLine": 1027,
        "endChar": 36
      },
      "revId": "6c943d372cd65188d4ad8dcde33800208b9022b5",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0e079c6_a080e142",
        "filename": "crypto/hrss/hrss.c",
        "patchSetId": 20
      },
      "lineNbr": 1031,
      "author": {
        "id": 5415
      },
      "writtenOn": "2018-12-06T00:30:58Z",
      "side": 1,
      "message": "then?",
      "range": {
        "startLine": 1031,
        "startChar": 54,
        "endLine": 1031,
        "endChar": 58
      },
      "revId": "6c943d372cd65188d4ad8dcde33800208b9022b5",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98557333_c02ed049",
        "filename": "crypto/hrss/hrss.c",
        "patchSetId": 20
      },
      "lineNbr": 1031,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-06T02:54:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b0e079c6_a080e142",
      "range": {
        "startLine": 1031,
        "startChar": 54,
        "endLine": 1031,
        "endChar": 58
      },
      "revId": "6c943d372cd65188d4ad8dcde33800208b9022b5",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b51068b_6c97e8ab",
        "filename": "crypto/hrss/hrss.c",
        "patchSetId": 20
      },
      "lineNbr": 1034,
      "author": {
        "id": 5415
      },
      "writtenOn": "2018-12-06T00:30:58Z",
      "side": 1,
      "message": "[Note to self: start here tomorrow]",
      "revId": "6c943d372cd65188d4ad8dcde33800208b9022b5",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    }
  ]
}