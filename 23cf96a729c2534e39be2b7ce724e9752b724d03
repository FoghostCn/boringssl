{
  "comments": [
    {
      "key": {
        "uuid": "b9a97860_ee507358",
        "filename": "crypto/rsa/internal.h",
        "patchSetId": 2
      },
      "lineNbr": 145,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-06-03T03:27:28Z",
      "side": 1,
      "message": "Nit: ASN.1 serialization.",
      "range": {
        "startLine": 145,
        "startChar": 43,
        "endLine": 145,
        "endChar": 44
      },
      "revId": "23cf96a729c2534e39be2b7ce724e9752b724d03",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9a97860_f9735f5d",
        "filename": "crypto/rsa/internal.h",
        "patchSetId": 2
      },
      "lineNbr": 149,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-06-03T03:27:28Z",
      "side": 1,
      "message": "Probably worth a comment that this is managed by the RSA_METHOD? It was puzzling that this one is freed by rsa_impl.c while everything else is freed by rsa.c. But I suppose this is consistent with _method_mod_*",
      "revId": "23cf96a729c2534e39be2b7ce724e9752b724d03",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9a97860_b926476a",
        "filename": "crypto/rsa/rsa.c",
        "patchSetId": 2
      },
      "lineNbr": 149,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-06-03T03:27:28Z",
      "side": 1,
      "message": "i?",
      "range": {
        "startLine": 149,
        "startChar": 11,
        "endLine": 149,
        "endChar": 12
      },
      "revId": "23cf96a729c2534e39be2b7ce724e9752b724d03",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9a97860_4e7987f3",
        "filename": "crypto/rsa/rsa.c",
        "patchSetId": 2
      },
      "lineNbr": 159,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-06-03T03:27:28Z",
      "side": 1,
      "message": "Put the BN_clear_free and friends into RSA_additional_prime_free and sk_pop_free that?",
      "revId": "23cf96a729c2534e39be2b7ce724e9752b724d03",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9a97860_59c7130b",
        "filename": "crypto/rsa/rsa_asn1.c",
        "patchSetId": 2
      },
      "lineNbr": 103,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-06-03T03:27:28Z",
      "side": 1,
      "message": "Does that not get initialized to NULL? I believe the default logic does OPENSSL_malloc + memset. And we override ASN1_OP_NEW_PRE which makes it call RSA_new anyway...\n\n...and I should probably replace all this with crypto/bytestring at some point... :-)",
      "revId": "23cf96a729c2534e39be2b7ce724e9752b724d03",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9a97860_59b15382",
        "filename": "crypto/rsa/rsa_impl.c",
        "patchSetId": 2
      },
      "lineNbr": 631,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-06-03T03:27:28Z",
      "side": 1,
      "message": "This, and a lot of others, actually don\u0027t need the null check because sk_num works fine. Though being explicit is good.\n\nThen again, if we want our C to mimic Go... ;-)",
      "revId": "23cf96a729c2534e39be2b7ce724e9752b724d03",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9a97860_b43acea0",
        "filename": "crypto/rsa/rsa_impl.c",
        "patchSetId": 2
      },
      "lineNbr": 749,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-06-03T03:27:28Z",
      "side": 1,
      "message": "Why does BN_FLG_CONSTTIME not get used here but does get used in the bit below? Whereas the bn_mod_exp calls above never have a CONSTTIME\u0027d version of the prime. The documentation for CONSTTIME suggests it only affects the exponent, but I\u0027m not familiar with crypto/bn.",
      "revId": "23cf96a729c2534e39be2b7ce724e9752b724d03",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9a97860_144ac229",
        "filename": "crypto/rsa/rsa_impl.c",
        "patchSetId": 2
      },
      "lineNbr": 761,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-06-03T03:27:28Z",
      "side": 1,
      "message": "r1^exp mod prime?\n\nThe old comment seems to imply the prime is named r, but r is something else.",
      "revId": "23cf96a729c2534e39be2b7ce724e9752b724d03",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9a97860_94e472a5",
        "filename": "crypto/rsa/rsa_impl.c",
        "patchSetId": 2
      },
      "lineNbr": 773,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-06-03T03:27:28Z",
      "side": 1,
      "message": "I expect this is better done in a follow-up, but there\u0027s probably some room for refactoring this logic with the stuff above since it\u0027s doing the same thing.\n\n(Also probably room for renaming the variables. :-) Had a hard time walking through the math.)",
      "revId": "23cf96a729c2534e39be2b7ce724e9752b724d03",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9a97860_5f637392",
        "filename": "crypto/rsa/rsa_impl.c",
        "patchSetId": 2
      },
      "lineNbr": 776,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-06-03T03:27:28Z",
      "side": 1,
      "message": "[Existing code: Should this be reducing mod n at the end? Or do things work out so that it\u0027s in the right range?]",
      "revId": "23cf96a729c2534e39be2b7ce724e9752b724d03",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9a97860_b4e16e94",
        "filename": "crypto/rsa/rsa_impl.c",
        "patchSetId": 2
      },
      "lineNbr": 800,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-06-03T03:27:28Z",
      "side": 1,
      "message": "[Existing code: ...does the CRT logic sometimes not actually work or something?]",
      "revId": "23cf96a729c2534e39be2b7ce724e9752b724d03",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9a97860_9faecb1c",
        "filename": "crypto/rsa/rsa_impl.c",
        "patchSetId": 2
      },
      "lineNbr": 932,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-06-03T03:27:28Z",
      "side": 1,
      "message": "keygen_multiprime",
      "range": {
        "startLine": 932,
        "startChar": 29,
        "endLine": 932,
        "endChar": 35
      },
      "revId": "23cf96a729c2534e39be2b7ce724e9752b724d03",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9a97860_7f9d0feb",
        "filename": "crypto/rsa/rsa_impl.c",
        "patchSetId": 2
      },
      "lineNbr": 1019,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-06-03T03:27:28Z",
      "side": 1,
      "message": "Shouldn\u0027t this also compute ap-\u003eexp and ap-\u003ecoeff? This function allocates BIGNUMs for them but never actually computes them, while the CRT parameters for p and q are computed below.",
      "revId": "23cf96a729c2534e39be2b7ce724e9752b724d03",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9a97860_bfab870b",
        "filename": "crypto/rsa/rsa_impl.c",
        "patchSetId": 2
      },
      "lineNbr": 1083,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-06-03T03:27:28Z",
      "side": 1,
      "message": "keygen_multiprime",
      "revId": "23cf96a729c2534e39be2b7ce724e9752b724d03",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9a97860_bf7dc72b",
        "filename": "crypto/rsa/rsa_impl.c",
        "patchSetId": 2
      },
      "lineNbr": 1100,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-06-03T03:27:28Z",
      "side": 1,
      "message": "(This too could be a call to a RSA_additional_prime_free.)",
      "revId": "23cf96a729c2534e39be2b7ce724e9752b724d03",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9a97860_d9ca238f",
        "filename": "crypto/rsa/rsa_test.c",
        "patchSetId": 2
      },
      "lineNbr": 536,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-06-03T03:27:28Z",
      "side": 1,
      "message": "uint8_t",
      "range": {
        "startLine": 536,
        "startChar": 55,
        "endLine": 536,
        "endChar": 68
      },
      "revId": "23cf96a729c2534e39be2b7ce724e9752b724d03",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9a97860_f9c7df83",
        "filename": "crypto/rsa/rsa_test.c",
        "patchSetId": 2
      },
      "lineNbr": 546,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-06-03T03:27:28Z",
      "side": 1,
      "message": "uint8_t",
      "range": {
        "startLine": 546,
        "startChar": 2,
        "endLine": 546,
        "endChar": 15
      },
      "revId": "23cf96a729c2534e39be2b7ce724e9752b724d03",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9a97860_3939f701",
        "filename": "tool/const.cc",
        "patchSetId": 2
      },
      "lineNbr": 326,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-06-03T03:27:28Z",
      "side": 1,
      "message": "const? (In fact, the declarations in speed.cc are const for the arrays but this isn\u0027t. Maybe worth dropping them into a const.h?)",
      "revId": "23cf96a729c2534e39be2b7ce724e9752b724d03",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9a97860_d94d4390",
        "filename": "tool/const.cc",
        "patchSetId": 2
      },
      "lineNbr": 433,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-06-03T03:27:28Z",
      "side": 1,
      "message": "const?",
      "revId": "23cf96a729c2534e39be2b7ce724e9752b724d03",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    }
  ]
}