{
  "comments": [
    {
      "key": {
        "uuid": "592a5541_b530776f",
        "filename": "ssl/internal.h",
        "patchSetId": 8
      },
      "lineNbr": 499,
      "author": {
        "id": 5005
      },
      "writtenOn": "2017-07-14T23:19:14Z",
      "side": 1,
      "message": "(nit: two blank lines before sections.)",
      "revId": "f8d2994e9d0939eb52264735cce3a3479eb4301e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9e3091b_644f6b66",
        "filename": "ssl/ssl_aead_ctx.cc",
        "patchSetId": 8
      },
      "lineNbr": 149,
      "author": {
        "id": 5005
      },
      "writtenOn": "2017-07-14T23:19:14Z",
      "side": 1,
      "message": "return extra_in_len + (aead \u003d\u003d NULL ? 0 : EVP_AEAD_max_overhead(aead-\u003ectx.aead));",
      "revId": "f8d2994e9d0939eb52264735cce3a3479eb4301e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ef4683c_dc2cec97",
        "filename": "ssl/tls_record.cc",
        "patchSetId": 8
      },
      "lineNbr": 420,
      "author": {
        "id": 5415
      },
      "writtenOn": "2017-07-14T23:17:09Z",
      "side": 1,
      "message": "Nit: 80 chars",
      "revId": "f8d2994e9d0939eb52264735cce3a3479eb4301e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26fa8807_26bc7801",
        "filename": "ssl/tls_record.cc",
        "patchSetId": 8
      },
      "lineNbr": 420,
      "author": {
        "id": 5415
      },
      "writtenOn": "2017-07-14T23:17:09Z",
      "side": 1,
      "message": "(Probably leave this alone for now but, if it\u0027s ever a nuisance, we can avoid the dependency on in_len here by just always rejecting in_len \u003d\u003d 0. I don\u0027t think we ever actually do this.)",
      "range": {
        "startLine": 420,
        "startChar": 79,
        "endLine": 420,
        "endChar": 85
      },
      "revId": "f8d2994e9d0939eb52264735cce3a3479eb4301e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c1b62bb3_7496a846",
        "filename": "ssl/tls_record.cc",
        "patchSetId": 8
      },
      "lineNbr": 422,
      "author": {
        "id": 5415
      },
      "writtenOn": "2017-07-14T23:17:09Z",
      "side": 1,
      "message": "Nit: 80 chars.\n\nThis might also warrant a comment like: When record-splitting is enabled, the prefix is the first record and all but the last byte of the prefix.",
      "revId": "f8d2994e9d0939eb52264735cce3a3479eb4301e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84861808_acffdc8e",
        "filename": "ssl/tls_record.cc",
        "patchSetId": 8
      },
      "lineNbr": 423,
      "author": {
        "id": 5005
      },
      "writtenOn": "2017-07-14T23:19:14Z",
      "side": 1,
      "message": "I think this is worth a comment:\n\n/* In the case of record splitting, the 1-byte record (of the 1/n-1 split) will be placed in the prefix, as will four of the five bytes of the record header for the main record. The final byte will replace the first byte of the plaintext that was used in the small record. */",
      "revId": "f8d2994e9d0939eb52264735cce3a3479eb4301e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7ab145a_050d8bf4",
        "filename": "ssl/tls_record.cc",
        "patchSetId": 8
      },
      "lineNbr": 448,
      "author": {
        "id": 5005
      },
      "writtenOn": "2017-07-14T23:19:14Z",
      "side": 1,
      "message": "It\u0027s still /* */ comments for now. (Here and elsewhere.)",
      "revId": "f8d2994e9d0939eb52264735cce3a3479eb4301e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dce5e01e_9c65f3d4",
        "filename": "ssl/tls_record.cc",
        "patchSetId": 8
      },
      "lineNbr": 476,
      "author": {
        "id": 5415
      },
      "writtenOn": "2017-07-14T23:17:09Z",
      "side": 1,
      "message": "Probably worth adding something like:\n\nassert(tls_seal_scatter_prefix_len(ssl, type, in_len) \u003d\u003d\n       split_record_len + prefix_len - 1);",
      "revId": "f8d2994e9d0939eb52264735cce3a3479eb4301e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    }
  ]
}