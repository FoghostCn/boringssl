{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0cfe60cb_7c66ce02",
        "filename": "pki/fillins/path_service.cc",
        "patchSetId": 15
      },
      "lineNbr": 18,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-06-23T19:43:34Z",
      "side": 1,
      "message": "Nit: We\u0027re all over the place here, but since the rest of this pki does `PathExists` style, let\u0027s keep to that.",
      "range": {
        "startLine": 18,
        "startChar": 5,
        "endLine": 18,
        "endChar": 16
      },
      "revId": "ce75155e71c0b7dd6615ad1b218c8b9602ab12a2",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1edf99b9_72cf1f87",
        "filename": "pki/fillins/path_service.cc",
        "patchSetId": 15
      },
      "lineNbr": 18,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-06-23T20:36:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0cfe60cb_7c66ce02",
      "range": {
        "startLine": 18,
        "startChar": 5,
        "endLine": 18,
        "endChar": 16
      },
      "revId": "ce75155e71c0b7dd6615ad1b218c8b9602ab12a2",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ada640e_7f68ed1c",
        "filename": "pki/fillins/path_service.cc",
        "patchSetId": 15
      },
      "lineNbr": 73,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-06-23T19:43:34Z",
      "side": 1,
      "message": "A thought: rather than the `_BORINGSSL_PKI_SRCDIR_` stuff, what if we just took an environment variable that pointed to the root of the BoringSSL source tree, and then taught `all_tests.go` to set the environment variable?\n\nAnd if the environment variable is unset, I guess we default to the cwd, so that when we run it by hand, it will still work.\n\n(I haven\u0027t solidified it yet, but I\u0027ve been musing on how to get rid of crypto_test_data.cc, and that\u0027s roughly what I\u0027d been thinking. And then eventually abstracted into some `GetTestData`-like function that Chromium can swap out if it really wants.)",
      "revId": "ce75155e71c0b7dd6615ad1b218c8b9602ab12a2",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6e35840_90b10535",
        "filename": "pki/fillins/path_service.cc",
        "patchSetId": 15
      },
      "lineNbr": 73,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-06-23T20:14:28Z",
      "side": 1,
      "message": "I actually had this using an environment variable in earlier versions, but bailed on that because of windows and did this..",
      "parentUuid": "0ada640e_7f68ed1c",
      "revId": "ce75155e71c0b7dd6615ad1b218c8b9602ab12a2",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3fd912d_f7d31bd0",
        "filename": "pki/fillins/path_service.cc",
        "patchSetId": 15
      },
      "lineNbr": 73,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-06-23T20:22:42Z",
      "side": 1,
      "message": "I would hope `getenv` works on Windows! :-)\n\nOh, I forgot to mention: another reason to avoid `_BORINGSSL_PKI_SRCDIR_` is it\u0027ll probably offend our consumers that like hermetic builds and prefer the build path not end up in binaries to improve caching and such. (Chromium.)",
      "parentUuid": "c6e35840_90b10535",
      "revId": "ce75155e71c0b7dd6615ad1b218c8b9602ab12a2",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c4e72722_0db0bafb",
        "filename": "pki/fillins/path_service.cc",
        "patchSetId": 15
      },
      "lineNbr": 73,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-06-23T20:36:20Z",
      "side": 1,
      "message": "Made it take the environment variable (PKI_SRCDIR) I made it take before as\nthe first option, and do the rest if it doesn\u0027t exist.",
      "parentUuid": "c6e35840_90b10535",
      "revId": "ce75155e71c0b7dd6615ad1b218c8b9602ab12a2",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "558dc4ea_df1203f5",
        "filename": "pki/fillins/path_service.cc",
        "patchSetId": 15
      },
      "lineNbr": 73,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-06-23T21:47:37Z",
      "side": 1,
      "message": "Oh, I was thinking that, once you have the environment variable (which I think works on Windows), you can probably get rid of all the rest. At the least, I don\u0027t think we need to stat it anymore.\n\nSpecifically, we will eventually want to support:\n\n1. all_tests.go running it in CI\n2. BoringSSL devs running the tests manually as `./build/pki_test --gtest_filter\u003d...`\n3. Downstream consumers running it in their CI (Android, Chromium, google3, etc.)\n\nAnd then we have some annoying constraints, mostly coming from that last one:\n\n- I\u0027m sure passing paths in as `-D` will cause endless escaping hell.\n- Downstream consumers will not want the absolute path to the build directory embedded in the binary. It\u0027ll mess with caching and whatnot.\n- Downstream consumers, like `run_android_tests.go` need to be told to package up the files in their remote execution things. When they do that, the path will probably have a prefix like `third_party/boringssl/src`\n- It may or may not be easy to inject an environment variable, depending on the tool\n\n(1) is easy and can just rely on the `getenv` mechanism. all_tests.go can just set an environment variable.\n\n(2) should be fine with cwd.\n\n(3) is annoying. My *hope* is that `getenv` will satisfy most people. And where it doesn\u0027t work, I\u0027m thinking we can let you swap out the file, ideally aligning with whatever crypto_test_data.cc is currently doing.\n\nSo if we do that, I think we don\u0027t need any ifdefs or `stat`, just:\n\n- dir \u003d getenv\n- if no env, dir \u003d \".\"\n- return dir + \"pki\"\n\nAnd then later we fix up the abstraction so it looks more like `GetTestData`, with `pki` being included in the path by the caller, and the function returning the test data itself. That way folks can swap it out if they need to.",
      "parentUuid": "c4e72722_0db0bafb",
      "revId": "ce75155e71c0b7dd6615ad1b218c8b9602ab12a2",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f228e65_28bf406a",
        "filename": "pki/fillins/path_service.cc",
        "patchSetId": 15
      },
      "lineNbr": 73,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-06-23T22:19:36Z",
      "side": 1,
      "message": "well, let\u0027s see if it can work or not or If I need to retain the SRCDIR until\nwe pass the environment variable everywhere.",
      "parentUuid": "558dc4ea_df1203f5",
      "revId": "ce75155e71c0b7dd6615ad1b218c8b9602ab12a2",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f55ddc75_110693db",
        "filename": "util/run_android_tests.go",
        "patchSetId": 15
      },
      "lineNbr": 316,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-06-23T19:43:34Z",
      "side": 1,
      "message": "This makes errors non-fatal, but we probably want it to bubble up? (If I\u0027m reading the docs right.) I think this can just be\n```\nif err !\u003d nil {\n  return err\n}\n```",
      "revId": "ce75155e71c0b7dd6615ad1b218c8b9602ab12a2",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cc47c61d_2612276f",
        "filename": "util/run_android_tests.go",
        "patchSetId": 15
      },
      "lineNbr": 316,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-06-23T20:36:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f55ddc75_110693db",
      "revId": "ce75155e71c0b7dd6615ad1b218c8b9602ab12a2",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82761b88_c16c0f9f",
        "filename": "util/run_android_tests.go",
        "patchSetId": 15
      },
      "lineNbr": 321,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-06-23T19:43:34Z",
      "side": 1,
      "message": "Does `info.Mode().IsRegular()` work?",
      "revId": "ce75155e71c0b7dd6615ad1b218c8b9602ab12a2",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "825a2dca_adbaec5a",
        "filename": "util/run_android_tests.go",
        "patchSetId": 15
      },
      "lineNbr": 321,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-06-23T20:36:39Z",
      "side": 1,
      "message": "We\u0027ll find out..",
      "parentUuid": "82761b88_c16c0f9f",
      "revId": "ce75155e71c0b7dd6615ad1b218c8b9602ab12a2",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1afc686e_6f438f13",
        "filename": "util/run_android_tests.go",
        "patchSetId": 15
      },
      "lineNbr": 321,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-06-23T21:28:58Z",
      "side": 1,
      "message": "yes",
      "parentUuid": "825a2dca_adbaec5a",
      "revId": "ce75155e71c0b7dd6615ad1b218c8b9602ab12a2",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a18fa10_969be543",
        "filename": "util/run_android_tests.go",
        "patchSetId": 15
      },
      "lineNbr": 326,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-06-23T19:43:34Z",
      "side": 1,
      "message": "Nit: No need for parens here in Go",
      "revId": "ce75155e71c0b7dd6615ad1b218c8b9602ab12a2",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0db1f99a_c27a1682",
        "filename": "util/run_android_tests.go",
        "patchSetId": 15
      },
      "lineNbr": 326,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-06-23T20:36:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2a18fa10_969be543",
      "revId": "ce75155e71c0b7dd6615ad1b218c8b9602ab12a2",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a620bd3_332d7199",
        "filename": "util/run_android_tests.go",
        "patchSetId": 15
      },
      "lineNbr": 327,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-06-23T19:43:34Z",
      "side": 1,
      "message": "Super minor nitpick: I think the usual style would be:\n\n`fmt.Printf(\"Can\u0027t walk pki/testdata: %s\\n\", err)`\n\nhttps://google.github.io/styleguide/go/decisions.html#error-strings",
      "revId": "ce75155e71c0b7dd6615ad1b218c8b9602ab12a2",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "383c03c9_710f1399",
        "filename": "util/run_android_tests.go",
        "patchSetId": 15
      },
      "lineNbr": 327,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-06-23T20:36:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a620bd3_332d7199",
      "revId": "ce75155e71c0b7dd6615ad1b218c8b9602ab12a2",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    }
  ]
}