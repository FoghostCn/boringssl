{
  "comments": [
    {
      "key": {
        "uuid": "44333af5_4f59b1fe",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 12,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-09-01T00:10:13Z",
      "side": 1,
      "message": "This seems out-of-date now.",
      "revId": "436a35e317c0617c42d5b848904d49fadb661bba",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44333af5_32e92879",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 12,
      "author": {
        "id": 5945
      },
      "writtenOn": "2015-09-01T14:10:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "44333af5_4f59b1fe",
      "revId": "436a35e317c0617c42d5b848904d49fadb661bba",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44333af5_6f06ade8",
        "filename": "include/openssl/ssl.h",
        "patchSetId": 6
      },
      "lineNbr": 754,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-09-01T00:08:31Z",
      "side": 1,
      "message": "Nit: I think I\u0027d include \"private key\" in the name somewhere (SSL_set_private_key_digests?), to distinguish it from configuring the sigalgs we accept. Nevermind that currently we don\u0027t let you do that.",
      "range": {
        "startLine": 754,
        "startChar": 3,
        "endLine": 754,
        "endChar": 23
      },
      "revId": "436a35e317c0617c42d5b848904d49fadb661bba",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44333af5_d2ef8479",
        "filename": "include/openssl/ssl.h",
        "patchSetId": 6
      },
      "lineNbr": 754,
      "author": {
        "id": 5945
      },
      "writtenOn": "2015-09-01T14:10:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "44333af5_6f06ade8",
      "range": {
        "startLine": 754,
        "startChar": 3,
        "endLine": 754,
        "endChar": 23
      },
      "revId": "436a35e317c0617c42d5b848904d49fadb661bba",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44333af5_4f0bf1ee",
        "filename": "include/openssl/ssl.h",
        "patchSetId": 6
      },
      "lineNbr": 756,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-09-01T00:08:31Z",
      "side": 1,
      "message": "I\u0027d probably put this up in the \"Configuring certificates and private keys\" section. It\u0027s perfectly serviceable for both normal and custom private keys.",
      "revId": "436a35e317c0617c42d5b848904d49fadb661bba",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44333af5_b2fcf837",
        "filename": "include/openssl/ssl.h",
        "patchSetId": 6
      },
      "lineNbr": 756,
      "author": {
        "id": 5945
      },
      "writtenOn": "2015-09-01T14:10:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "44333af5_4f0bf1ee",
      "revId": "436a35e317c0617c42d5b848904d49fadb661bba",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44333af5_2f5b0521",
        "filename": "include/openssl/ssl.h",
        "patchSetId": 6
      },
      "lineNbr": 757,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-09-01T00:08:31Z",
      "side": 1,
      "message": "const int",
      "range": {
        "startLine": 757,
        "startChar": 51,
        "endLine": 757,
        "endChar": 54
      },
      "revId": "436a35e317c0617c42d5b848904d49fadb661bba",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44333af5_92f9fc47",
        "filename": "include/openssl/ssl.h",
        "patchSetId": 6
      },
      "lineNbr": 757,
      "author": {
        "id": 5945
      },
      "writtenOn": "2015-09-01T14:10:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "44333af5_2f5b0521",
      "range": {
        "startLine": 757,
        "startChar": 51,
        "endLine": 757,
        "endChar": 54
      },
      "revId": "436a35e317c0617c42d5b848904d49fadb661bba",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44333af5_af4ed557",
        "filename": "ssl/ssl_rsa.c",
        "patchSetId": 6
      },
      "lineNbr": 637,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-09-01T00:08:31Z",
      "side": 1,
      "message": "Check for malloc failure and have this return one/zero.",
      "revId": "436a35e317c0617c42d5b848904d49fadb661bba",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44333af5_720690e8",
        "filename": "ssl/ssl_rsa.c",
        "patchSetId": 6
      },
      "lineNbr": 637,
      "author": {
        "id": 5945
      },
      "writtenOn": "2015-09-01T14:10:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "44333af5_af4ed557",
      "revId": "436a35e317c0617c42d5b848904d49fadb661bba",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44333af5_6f38edb8",
        "filename": "ssl/ssl_rsa.c",
        "patchSetId": 6
      },
      "lineNbr": 638,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-09-01T00:08:31Z",
      "side": 1,
      "message": "There\u0027s a BUF_memdup that might be simpler.",
      "revId": "436a35e317c0617c42d5b848904d49fadb661bba",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44333af5_520b94ee",
        "filename": "ssl/ssl_rsa.c",
        "patchSetId": 6
      },
      "lineNbr": 638,
      "author": {
        "id": 5945
      },
      "writtenOn": "2015-09-01T14:10:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "44333af5_6f38edb8",
      "revId": "436a35e317c0617c42d5b848904d49fadb661bba",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44333af5_2fe9c578",
        "filename": "ssl/t1_lib.c",
        "patchSetId": 6
      },
      "lineNbr": 633,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-09-01T00:08:31Z",
      "side": 1,
      "message": "I think this is no longer used.",
      "revId": "436a35e317c0617c42d5b848904d49fadb661bba",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44333af5_12050cd7",
        "filename": "ssl/t1_lib.c",
        "patchSetId": 6
      },
      "lineNbr": 633,
      "author": {
        "id": 5945
      },
      "writtenOn": "2015-09-01T14:10:55Z",
      "side": 1,
      "message": "Still used to verify that the selected sigalg is one of the allowed ones.",
      "parentUuid": "44333af5_2fe9c578",
      "revId": "436a35e317c0617c42d5b848904d49fadb661bba",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44333af5_d28b04a1",
        "filename": "ssl/t1_lib.c",
        "patchSetId": 6
      },
      "lineNbr": 633,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-09-01T15:31:00Z",
      "side": 1,
      "message": "Oh right, to get the list of sigalgs to accept rather than produce. I guess the diff was collapsed so I missed those or something. Or Gerrit\u0027s UI confused me.",
      "parentUuid": "44333af5_12050cd7",
      "revId": "436a35e317c0617c42d5b848904d49fadb661bba",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64dafe36_5d325bd7",
        "filename": "ssl/t1_lib.c",
        "patchSetId": 6
      },
      "lineNbr": 633,
      "author": {
        "id": 5945
      },
      "writtenOn": "2015-09-04T16:52:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "44333af5_d28b04a1",
      "revId": "436a35e317c0617c42d5b848904d49fadb661bba",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44333af5_6f2d8d5e",
        "filename": "ssl/t1_lib.c",
        "patchSetId": 6
      },
      "lineNbr": 2810,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-09-01T00:08:31Z",
      "side": 1,
      "message": "Optional: Perhaps call this tls1_save_peer_sigalgs or tls1_parse_peer_sigalgs or something? It\u0027s not really doing much with them anymore.",
      "range": {
        "startLine": 2810,
        "startChar": 4,
        "endLine": 2810,
        "endChar": 24
      },
      "revId": "436a35e317c0617c42d5b848904d49fadb661bba",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44333af5_9210dc15",
        "filename": "ssl/t1_lib.c",
        "patchSetId": 6
      },
      "lineNbr": 2810,
      "author": {
        "id": 5945
      },
      "writtenOn": "2015-09-01T14:10:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "44333af5_6f2d8d5e",
      "range": {
        "startLine": 2810,
        "startChar": 4,
        "endLine": 2810,
        "endChar": 24
      },
      "revId": "436a35e317c0617c42d5b848904d49fadb661bba",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44333af5_eff29d63",
        "filename": "ssl/t1_lib.c",
        "patchSetId": 6
      },
      "lineNbr": 2862,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-09-01T00:08:31Z",
      "side": 1,
      "message": "This might be empty if not explicitly configured I think? The old logic had a wrapper function (tls_get_psigalgs) which would either return a pointer to cert-\u003edigest_nids or a pointer to a static list, depending on whether anything was configured. Perhaps do something similar.\n\nI think the only reason the tests are working is because you\u0027re always configuring one.",
      "revId": "436a35e317c0617c42d5b848904d49fadb661bba",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44333af5_f2196045",
        "filename": "ssl/t1_lib.c",
        "patchSetId": 6
      },
      "lineNbr": 2862,
      "author": {
        "id": 5945
      },
      "writtenOn": "2015-09-01T14:10:55Z",
      "side": 1,
      "message": "Wasn\u0027t the idea that if the client isn\u0027t declaring which digests the private key supports, we should just fallback to SHA1 per spec?",
      "parentUuid": "44333af5_eff29d63",
      "revId": "436a35e317c0617c42d5b848904d49fadb661bba",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44333af5_f28e00b3",
        "filename": "ssl/t1_lib.c",
        "patchSetId": 6
      },
      "lineNbr": 2862,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-09-01T15:31:00Z",
      "side": 1,
      "message": "The spec says that, as a server signing ServerKeyExchange, if the client (peer) doesn\u0027t give you a list in ClientHello, then you fallback to SHA-1. That\u0027s if peer_sigalgs is empty.\n\nIt doesn\u0027t really say anything about a client signing CertificateVerify, but we can probably assume the analogous (if the server (peer) doesn\u0027t give you a list in CertificateRequest, then you fallback to SHA-1. Also if peer_sigalgs is empty).\n\nIt doesn\u0027t generally say much about how local configuration (digest_nids) works. The existing behavior is that, absent any (nonexistent) APIs to configure it otherwise, the local configuration is tls12_sigalgs. If not specified, it should probably continue to pick a default. Most consumers would be using in-memory keys and likely don\u0027t have opinions on what hashes to prefer.",
      "parentUuid": "44333af5_f2196045",
      "revId": "436a35e317c0617c42d5b848904d49fadb661bba",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64dafe36_3d3d8fa8",
        "filename": "ssl/t1_lib.c",
        "patchSetId": 6
      },
      "lineNbr": 2862,
      "author": {
        "id": 5945
      },
      "writtenOn": "2015-09-04T16:52:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "44333af5_f28e00b3",
      "revId": "436a35e317c0617c42d5b848904d49fadb661bba",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44333af5_6f510dff",
        "filename": "ssl/test/bssl_shim.cc",
        "patchSetId": 6
      },
      "lineNbr": 222,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-09-01T00:08:31Z",
      "side": 1,
      "message": "Adjectives are fun, so let\u0027s do\n\n  static const int kDigestList[]",
      "revId": "436a35e317c0617c42d5b848904d49fadb661bba",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44333af5_722d705e",
        "filename": "ssl/test/bssl_shim.cc",
        "patchSetId": 6
      },
      "lineNbr": 222,
      "author": {
        "id": 5945
      },
      "writtenOn": "2015-09-01T14:10:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "44333af5_6f510dff",
      "revId": "436a35e317c0617c42d5b848904d49fadb661bba",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44333af5_8f279977",
        "filename": "ssl/test/bssl_shim.cc",
        "patchSetId": 6
      },
      "lineNbr": 224,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-09-01T00:08:31Z",
      "side": 1,
      "message": "Probably best to not configure this without some TestConfig getting set somewhere, to make sure the default case works as expected. And then a flag to configure a list somehow. (Not sure exactly what. I guess you could parse a comma-separated list. Or you could have some booleans that set some preset ones if you want to be lazy.)",
      "revId": "436a35e317c0617c42d5b848904d49fadb661bba",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44333af5_523274c0",
        "filename": "ssl/test/bssl_shim.cc",
        "patchSetId": 6
      },
      "lineNbr": 224,
      "author": {
        "id": 5945
      },
      "writtenOn": "2015-09-01T14:10:55Z",
      "side": 1,
      "message": "Is this whether or not private_key_digest_prefs are set? Or would the TestConfig be the actual list of digests?",
      "parentUuid": "44333af5_8f279977",
      "revId": "436a35e317c0617c42d5b848904d49fadb661bba",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    }
  ]
}