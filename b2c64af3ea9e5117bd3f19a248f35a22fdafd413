{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7be843ff_b4e39671",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 26
      },
      "lineNbr": 0,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-10-26T19:47:50Z",
      "side": 1,
      "message": "Just did a pass for style. Didn\u0027t look that carefully at the content, but did notice a few issues.",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4a537d0_c621d221",
        "filename": "crypto/spx/address.c",
        "patchSetId": 26
      },
      "lineNbr": 23,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-10-26T19:47:50Z",
      "side": 1,
      "message": "```suggestion\n// Offsets of various fields in the address structure for SPHINCS+-SHA2-128s.\n```",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 23,
        "endChar": 3
      },
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "383bb02f_527668fe",
        "filename": "crypto/spx/address.c",
        "patchSetId": 26
      },
      "lineNbr": 23,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-10-26T20:57:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f4a537d0_c621d221",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 23,
        "endChar": 3
      },
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cfb5d452_5ac2fa99",
        "filename": "crypto/spx/address.h",
        "patchSetId": 26
      },
      "lineNbr": 26,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-10-26T19:47:50Z",
      "side": 1,
      "message": "Nit: Not that it matters, but let\u0027s keep the `#define`s inside the `extern C` blocks. They\u0027re more associated with the actual declarations than all the setup.",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aa4b267b_30cb8457",
        "filename": "crypto/spx/address.h",
        "patchSetId": 26
      },
      "lineNbr": 26,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-10-26T20:57:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cfb5d452_5ac2fa99",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1fc66eef_c2e6a946",
        "filename": "crypto/spx/fors.c",
        "patchSetId": 26
      },
      "lineNbr": 41,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-10-26T19:47:50Z",
      "side": 1,
      "message": "Uhh, that sounds bad? BSSL_CHECK?",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "071c7c63_85de9311",
        "filename": "crypto/spx/fors.c",
        "patchSetId": 26
      },
      "lineNbr": 41,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-10-26T21:42:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1fc66eef_c2e6a946",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49c3e8dc_76fa9713",
        "filename": "crypto/spx/fors.h",
        "patchSetId": 26
      },
      "lineNbr": 19,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-10-26T19:47:50Z",
      "side": 1,
      "message": "This header seems unused. (Does sys/types.h even exist on Windows?)",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3825b62b_3796abce",
        "filename": "crypto/spx/fors.h",
        "patchSetId": 26
      },
      "lineNbr": 19,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-10-26T20:57:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "49c3e8dc_76fa9713",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4f18139_4532609b",
        "filename": "crypto/spx/fors.h",
        "patchSetId": 26
      },
      "lineNbr": 28,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-10-26T19:47:50Z",
      "side": 1,
      "message": "uint32_t or size_t perhaps? I remember you suggested the other time that unsigned was probably the wrong type to use in general. :-)",
      "range": {
        "startLine": 28,
        "startChar": 39,
        "endLine": 28,
        "endChar": 51
      },
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fee78cc8_b7f10859",
        "filename": "crypto/spx/fors.h",
        "patchSetId": 26
      },
      "lineNbr": 28,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-10-26T21:20:40Z",
      "side": 1,
      "message": "Looks like this index is used as a uint32_t from other places so yes I think this is an oversight and change it to uint32_t.",
      "parentUuid": "c4f18139_4532609b",
      "range": {
        "startLine": 28,
        "startChar": 39,
        "endLine": 28,
        "endChar": 51
      },
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24cff2b7_b8a49861",
        "filename": "crypto/spx/fors.h",
        "patchSetId": 26
      },
      "lineNbr": 34,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-10-26T19:47:50Z",
      "side": 1,
      "message": "Should this just be called target_node_index and target_node_height? Don\u0027t know the context here, but it seems kind of confusing to do that. :-)",
      "range": {
        "startLine": 34,
        "startChar": 32,
        "endLine": 34,
        "endChar": 55
      },
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "960b6891_1b6db9cb",
        "filename": "crypto/spx/fors.h",
        "patchSetId": 26
      },
      "lineNbr": 34,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-10-26T21:20:40Z",
      "side": 1,
      "message": "Yeah, that would be lovely, bit in this case this is used in the spec above for Algoriothm 14 so we should probably keep the single char names with a comment as they are.",
      "parentUuid": "24cff2b7_b8a49861",
      "range": {
        "startLine": 34,
        "startChar": 32,
        "endLine": 34,
        "endChar": 55
      },
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "662b189b_e9859d4a",
        "filename": "crypto/spx/internal.h",
        "patchSetId": 26
      },
      "lineNbr": 19,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-10-26T19:47:50Z",
      "side": 1,
      "message": "I think we decided to stick with `int` rather than use `bool` in C, just so we don\u0027t have to mix them up.",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cfc7cc7f_9efba568",
        "filename": "crypto/spx/internal.h",
        "patchSetId": 26
      },
      "lineNbr": 19,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-10-26T21:42:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "662b189b_e9859d4a",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03e49dad_447feece",
        "filename": "crypto/spx/internal.h",
        "patchSetId": 26
      },
      "lineNbr": 25,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-10-26T19:47:50Z",
      "side": 1,
      "message": "Since I assume this\u0027ll eventually morph into a public header, a style nit: we do the Go style of documentation, so it should be:\n\n\n```suggestion\n// SPX_N is the number of bytes in the hash output.\n```\n\nSimilarly throughout.",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e6624541_9377c927",
        "filename": "crypto/spx/internal.h",
        "patchSetId": 26
      },
      "lineNbr": 25,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-10-26T21:42:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "03e49dad_447feece",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7c707a9_a116355f",
        "filename": "crypto/spx/internal.h",
        "patchSetId": 26
      },
      "lineNbr": 37,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-10-26T19:47:50Z",
      "side": 1,
      "message": "spx_generate_key generates a SPHINCS+-SHA2-128s key pair and writes the result to |out_public_key| and |out_secret_key|.\n\nEtc.",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eb4ab398_84f5e58c",
        "filename": "crypto/spx/internal.h",
        "patchSetId": 26
      },
      "lineNbr": 37,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-10-26T21:42:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d7c707a9_a116355f",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b741c77b_8e3d8cdc",
        "filename": "crypto/spx/merkle.c",
        "patchSetId": 26
      },
      "lineNbr": 26,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-10-26T19:47:50Z",
      "side": 1,
      "message": "Ditto about variable names.",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "05dcb049_35231ce9",
        "filename": "crypto/spx/merkle.c",
        "patchSetId": 26
      },
      "lineNbr": 26,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-10-26T21:20:40Z",
      "side": 1,
      "message": "Again, this is what the spec uses for the same things, everywhere.",
      "parentUuid": "b741c77b_8e3d8cdc",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5872872_779cd30e",
        "filename": "crypto/spx/merkle.c",
        "patchSetId": 26
      },
      "lineNbr": 29,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-10-26T19:47:50Z",
      "side": 1,
      "message": "Ditto about BSSL_CHECK",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "56060b24_49f06a69",
        "filename": "crypto/spx/merkle.c",
        "patchSetId": 26
      },
      "lineNbr": 29,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-10-26T21:42:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b5872872_779cd30e",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75539eaf_692790c9",
        "filename": "crypto/spx/merkle.h",
        "patchSetId": 26
      },
      "lineNbr": 19,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-10-26T19:47:50Z",
      "side": 1,
      "message": "Unused?",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "981c891d_c24a07c2",
        "filename": "crypto/spx/merkle.h",
        "patchSetId": 26
      },
      "lineNbr": 19,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-10-26T21:42:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "75539eaf_692790c9",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ce26888_1959ac36",
        "filename": "crypto/spx/merkle.h",
        "patchSetId": 26
      },
      "lineNbr": 26,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-10-26T19:47:50Z",
      "side": 1,
      "message": "Similar comment about variable names.",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "04e8994b_b7b4c5e0",
        "filename": "crypto/spx/merkle.h",
        "patchSetId": 26
      },
      "lineNbr": 26,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-10-26T21:20:40Z",
      "side": 1,
      "message": "Similar answer, NIST published the spec with these names, the comments \nreflect the same named variables in the spec so we should probably keep them.",
      "parentUuid": "0ce26888_1959ac36",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a726425_1a6f36a5",
        "filename": "crypto/spx/spx_test.cc",
        "patchSetId": 26
      },
      "lineNbr": 36,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-10-26T19:47:50Z",
      "side": 1,
      "message": "EXPECT_EQ(Bytes(pk), Bytes(expected_pk));\nEXPECT_EQ(Bytes(sk), Bytes(expected_sk));",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0ddfd2e0_2cbf44e2",
        "filename": "crypto/spx/spx_test.cc",
        "patchSetId": 26
      },
      "lineNbr": 36,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-10-26T21:42:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2a726425_1a6f36a5",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9adea6fa_b6decd6f",
        "filename": "crypto/spx/spx_test.cc",
        "patchSetId": 26
      },
      "lineNbr": 64,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-10-26T19:47:50Z",
      "side": 1,
      "message": "EXPECT_EQ(Bytes(pk), Bytes(expected_pk));\nEXPECT_EQ(Bytes(sk), Bytes(expected_sk));",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d5b7a655_2871cb9f",
        "filename": "crypto/spx/spx_test.cc",
        "patchSetId": 26
      },
      "lineNbr": 64,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-10-26T21:42:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9adea6fa_b6decd6f",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8990f877_5941d057",
        "filename": "crypto/spx/spx_test.cc",
        "patchSetId": 26
      },
      "lineNbr": 74,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-10-26T19:47:50Z",
      "side": 1,
      "message": "Is SPHINCS+ signing deterministic or non-deterministic? If deterministic, known answer tests for the signature would be nice too.",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "992d7075_b2df159c",
        "filename": "crypto/spx/spx_test.cc",
        "patchSetId": 26
      },
      "lineNbr": 74,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-10-27T17:20:58Z",
      "side": 1,
      "message": "I mean, there\u0027s absolutely a knob for deterministic, so we should probably known answer some of those.",
      "parentUuid": "8990f877_5941d057",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a019422_29bed516",
        "filename": "crypto/spx/spx_test.cc",
        "patchSetId": 26
      },
      "lineNbr": 74,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-10-27T19:38:18Z",
      "side": 1,
      "message": "Looks like the test vectors in spx_tests.txt were generated with random though (Or at least they don\u0027t appear to match up when I try to do the obvious thing of \nvalidating with a random \u003d 0 signature those done work, so we either need to cook some up or find some others. \n\nI notice however we do not currently have no tests with randomize \u003d 0.",
      "parentUuid": "992d7075_b2df159c",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb2055fd_fe11ed0b",
        "filename": "crypto/spx/spx_test.cc",
        "patchSetId": 26
      },
      "lineNbr": 74,
      "author": {
        "id": 15908
      },
      "writtenOn": "2023-10-30T12:55:35Z",
      "side": 1,
      "message": "I added now a new set of test vectors for the deterministic signing method, and corresponding test. The way deterministic signing is defined in FIPS 205 is to set optrand \u003d pk_seed (the first N bytes of the public key).",
      "parentUuid": "0a019422_29bed516",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f98e4db7_619c600e",
        "filename": "crypto/spx/spx_test.cc",
        "patchSetId": 26
      },
      "lineNbr": 98,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-10-26T19:47:50Z",
      "side": 1,
      "message": "Nit: perhaps EXPECT_EQ(..., 0)",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c4dd82db_d23857f4",
        "filename": "crypto/spx/spx_test.cc",
        "patchSetId": 26
      },
      "lineNbr": 98,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-10-26T21:42:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f98e4db7_619c600e",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99f004ea_1b5944d0",
        "filename": "crypto/spx/spx_util.c",
        "patchSetId": 26
      },
      "lineNbr": 17,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-10-26T19:47:50Z",
      "side": 1,
      "message": "Unused?",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a3383b94_73e1d631",
        "filename": "crypto/spx/spx_util.c",
        "patchSetId": 26
      },
      "lineNbr": 17,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-10-26T21:42:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "99f004ea_1b5944d0",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b4702c6_2fffd9f3",
        "filename": "crypto/spx/spx_util.c",
        "patchSetId": 26
      },
      "lineNbr": 26,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-10-26T19:47:50Z",
      "side": 1,
      "message": "So, I agree that the uint64_t ones are kinda interesting, but the uint32_t ones are truly the same as the helpers we already have in `crypto/internal.h`. We should just use those. They\u0027ll also be more efficient because they\u0027re inlined, and the compiler can just emit a load or store.",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "878b6f5b_4680ba90",
        "filename": "crypto/spx/spx_util.c",
        "patchSetId": 26
      },
      "lineNbr": 26,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-10-26T22:24:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5b4702c6_2fffd9f3",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "265da9ee_71b5c5bf",
        "filename": "crypto/spx/spx_util.c",
        "patchSetId": 26
      },
      "lineNbr": 50,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-10-26T19:47:50Z",
      "side": 1,
      "message": "Since this only works on powers of 2, let\u0027s do:\n\n`assert(x !\u003d 0 \u0026\u0026 (x \u0026 (x - 1)) \u003d\u003d 0);`",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "21b24a65_b61940fa",
        "filename": "crypto/spx/spx_util.c",
        "patchSetId": 26
      },
      "lineNbr": 50,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-10-26T21:42:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "265da9ee_71b5c5bf",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38b9d9aa_5180ab53",
        "filename": "crypto/spx/spx_util.c",
        "patchSetId": 26
      },
      "lineNbr": 51,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-10-26T19:47:50Z",
      "side": 1,
      "message": "Instead, why not just pass `log2_base` into `spx_base_b` instead of `base`? Then we don\u0027t need this function, and the power-of-2 thing is implicit. Then just replace `log2_p2(base)` with `log2_base` and `(total \u003e\u003e bits) % base` with `(total \u003e\u003e bits) % (1 \u003c\u003c log2_base)`.",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c084e9c1_219f1665",
        "filename": "crypto/spx/spx_util.c",
        "patchSetId": 26
      },
      "lineNbr": 51,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-11-01T21:29:22Z",
      "side": 1,
      "message": "Here, let\u0027s merge this in. This is simpler anyway. :-)\nhttps://boringssl-review.googlesource.com/c/boringssl/+/63785",
      "parentUuid": "38b9d9aa_5180ab53",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "da3347b7_8dd3a680",
        "filename": "crypto/spx/spx_util.c",
        "patchSetId": 26
      },
      "lineNbr": 51,
      "author": {
        "id": 5005
      },
      "writtenOn": "2023-11-01T22:08:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c084e9c1_219f1665",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51c83f39_4b334e7d",
        "filename": "crypto/spx/thash.c",
        "patchSetId": 26
      },
      "lineNbr": 67,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-10-26T19:47:50Z",
      "side": 1,
      "message": "The formatting here is pretty confusing. I think this is what you meant?\n\n```suggestion\n  // MGF1-SHA-256(R || PK.seed || SHA-256(R || PK.seed || PK.root || M), m)\n  \n  // input_buffer stores R || PK_SEED || SHA256(..) || 4-byte index\n  uint8_t input_buffer[2 * SPX_N + 32 + 4] \u003d {0};\n  memcpy(input_buffer, r, SPX_N);\n  memcpy(input_buffer + SPX_N, pk_seed, SPX_N);\n\n```",
      "range": {
        "startLine": 62,
        "startChar": 0,
        "endLine": 67,
        "endChar": 0
      },
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fd5ed423_6a438137",
        "filename": "crypto/spx/thash.c",
        "patchSetId": 26
      },
      "lineNbr": 67,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-10-26T22:06:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "51c83f39_4b334e7d",
      "range": {
        "startLine": 62,
        "startChar": 0,
        "endLine": 67,
        "endChar": 0
      },
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "63055e88_424f60d6",
        "filename": "crypto/spx/thash.c",
        "patchSetId": 26
      },
      "lineNbr": 80,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-10-26T19:47:50Z",
      "side": 1,
      "message": "Also slightly confusing formatting. I think this is what this meant?\n\n```suggestion\n  // MGF1-SHA-256\n  uint8_t output_buffer[3 * 32];\n  // Need to call SHA256 3 times for message digest.\n```\n\nFor bonus points, maybe we should include `\u003cassert.h\u003e` and then:\n\n```\nstatic_assert(SPX_DIGEST_SIZE \u003c\u003d sizeof(output_buffer), \"not enough hashes\");\n```",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 80,
        "endChar": 80
      },
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7ea8bbef_6bfba14d",
        "filename": "crypto/spx/thash.c",
        "patchSetId": 26
      },
      "lineNbr": 80,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-10-26T22:06:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "63055e88_424f60d6",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 80,
        "endChar": 80
      },
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80025964_661467dd",
        "filename": "crypto/spx/thash.c",
        "patchSetId": 26
      },
      "lineNbr": 107,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-10-26T19:47:50Z",
      "side": 1,
      "message": "This, unfortunately, can fail on malloc error. We\u0027d have to either propagate that fallibility up the stack, or just implement HMAC-SHA256 directly out of the infallible SHA256_CTX. :-(",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7119147c_88e1dc66",
        "filename": "crypto/spx/thash.c",
        "patchSetId": 26
      },
      "lineNbr": 107,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-10-26T22:00:12Z",
      "side": 1,
      "message": "I bubbled the error up and made spx_sign fallible for allocation failure\n\nwe can change it later if we want to make an infallible HMAC.",
      "parentUuid": "80025964_661467dd",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b88196f_badc7ce1",
        "filename": "tool/speed.cc",
        "patchSetId": 26
      },
      "lineNbr": 47,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-10-26T19:47:50Z",
      "side": 1,
      "message": "What happened here? clang-format mishap?",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a3ab83f2_44668ecf",
        "filename": "tool/speed.cc",
        "patchSetId": 26
      },
      "lineNbr": 47,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-10-26T21:49:10Z",
      "side": 1,
      "message": "looks like it wants to re-order them that way.. that\u0027s really annoying.",
      "parentUuid": "4b88196f_badc7ce1",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56e022c8_99fdadaf",
        "filename": "tool/speed.cc",
        "patchSetId": 26
      },
      "lineNbr": 1658,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-10-26T19:47:50Z",
      "side": 1,
      "message": "We don\u0027t want to binpack these. Before we would manually fix up clang-format\u0027s output. To avoid doing that, add trailing `//` to the lines as needed to keep them one per line.",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "41232978_c124bf7f",
        "filename": "tool/speed.cc",
        "patchSetId": 26
      },
      "lineNbr": 1658,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-10-26T21:49:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "56e022c8_99fdadaf",
      "revId": "b2c64af3ea9e5117bd3f19a248f35a22fdafd413",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    }
  ]
}