{
  "comments": [
    {
      "key": {
        "uuid": "1624f7a2_24dc251d",
        "filename": "include/openssl/pkcs8.h",
        "patchSetId": 3
      },
      "lineNbr": 70,
      "author": {
        "id": 5190
      },
      "writtenOn": "2014-07-31T20:05:07Z",
      "side": 1,
      "message": "Really? Upstream OpenSSL supports/ed PBES2 - just transparently through the PBE nid. This... Surprises me that we\u0027d have an API like PKCS#8 only supporting PBES1, since \u0027everything\u0027 should be supporting PBES2.\n\nPerhaps this was lost during the CMS shuffle, since PBES2 is used by CMS as well?\n\nMaybe irrelevant for BoringSSL to even support EncryptedPrivateKeyInfo beyond the single type NSS uses, in which case, do we need both? (And also, boo on NSS for using PBES1)",
      "range": {
        "startLine": 68,
        "startChar": 72,
        "endLine": 70,
        "endChar": 71
      },
      "revId": "60b573a934a7e297825082924994b7b753a481ad",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6016bf5_907d82f6",
        "filename": "include/openssl/pkcs8.h",
        "patchSetId": 3
      },
      "lineNbr": 70,
      "author": {
        "id": 5075
      },
      "writtenOn": "2014-07-31T20:23:04Z",
      "side": 1,
      "message": "Most of it was lost in the fork, yeah. I believe pbeWithSHAAnd3-KeyTripleDES-CBC is the only one we actually need[*] (I found no other callers in internal code of these functions). I suspect the other was retained just because it\u0027s only another entry in kBuiltinPBE.\n\nThere\u0027s still random stuff in pkcs8/p5_pbev2.c that does have an internal caller. But I don\u0027t think the codepath from PKCS8_encrypt to it is functional right now (hence the removal of the pbe_nid \u003d\u003d -1 check) because there\u0027s nothing in kBuiltinPBE. The internal caller doesn\u0027t use PKCS8_encrypt.\n\n[*] And if I understood what you told me yesterday about NSS and FIPS yesterday, \"need\" is only because of silly NSS API weirdnesses and we don\u0027t actually have a good reason to want to encrypt this with an empty password anyway.\n\n(I\u0027ll note that upstream supporting these \"transparently\" involved doing the ascii_to_ucs2 thing for some NIDs but not others, which I think is part of this API confusion. :-) )",
      "parentUuid": "1624f7a2_24dc251d",
      "range": {
        "startLine": 68,
        "startChar": 72,
        "endLine": 70,
        "endChar": 71
      },
      "revId": "60b573a934a7e297825082924994b7b753a481ad",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f974b47c_40c9ed5f",
        "filename": "include/openssl/pkcs8.h",
        "patchSetId": 3
      },
      "lineNbr": 70,
      "author": {
        "id": 5005
      },
      "writtenOn": "2014-07-31T20:29:15Z",
      "side": 1,
      "message": "Much of this code fell below the bar on the shittyness/neccessary tradeoff and was killed. If we need to bring some back, that\u0027s fine.\n\n(Poke me when this change is good to review.)",
      "parentUuid": "b6016bf5_907d82f6",
      "range": {
        "startLine": 68,
        "startChar": 72,
        "endLine": 70,
        "endChar": 71
      },
      "revId": "60b573a934a7e297825082924994b7b753a481ad",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1624f7a2_c49331db",
        "filename": "include/openssl/pkcs8.h",
        "patchSetId": 3
      },
      "lineNbr": 70,
      "author": {
        "id": 5190
      },
      "writtenOn": "2014-07-31T20:32:19Z",
      "side": 1,
      "message": "Right, the historical animosity towards sending private keys in the clear was in https://bugzilla.mozilla.org/show_bug.cgi?id\u003d207033#c1 , which was inspired by NIST/FIPS-type security concerns of no-keys-outside-the-module, but that\u0027s thankfully been changing very recently (like, NSS 3.16.1 - see https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.16.1_release_notes )\n\nBut yeah, since we\u0027ve hardcoded NSS to use SEC_OID_PKCS12_V2_PBE_WITH_SHA1_AND_3KEY_TRIPLE_DES_CBC ( https://code.google.com/p/chromium/codesearch#chromium/src/crypto/ec_private_key_nss.cc\u0026l\u003d247 ) I think that\u0027s all you should worry about.\n\nWe could fix NSS to \"Do the Right Thing\", but that would only help our non-Linux users in the near term. Just $.02 if you wanted to stab there.",
      "parentUuid": "b6016bf5_907d82f6",
      "range": {
        "startLine": 68,
        "startChar": 72,
        "endLine": 70,
        "endChar": 71
      },
      "revId": "60b573a934a7e297825082924994b7b753a481ad",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    }
  ]
}