{
  "comments": [
    {
      "key": {
        "uuid": "236e8540_c4c91e32",
        "filename": "include/openssl/ssl.h",
        "patchSetId": 1
      },
      "lineNbr": 4074,
      "author": {
        "id": 5415
      },
      "writtenOn": "2017-01-13T21:40:04Z",
      "side": 1,
      "message": "Did you have plans for this one? We\u0027d either have to carry a patch, or upstream a change to Node with an OPENSSL_IS_BORINGSSL ifdef. (Or bump OPENSSL_VERSION_NUMBER to 1.1.0 and upstream a change to check on that.)",
      "range": {
        "startLine": 4074,
        "startChar": 6,
        "endLine": 4074,
        "endChar": 22
      },
      "revId": "34911e9d70e5dd30e26d58a45b5c6ccdde785ee9",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63ca3d70_ffea3327",
        "filename": "include/openssl/ssl.h",
        "patchSetId": 1
      },
      "lineNbr": 4074,
      "author": {
        "id": 5005
      },
      "writtenOn": "2017-01-13T21:50:37Z",
      "side": 1,
      "message": "Sadly node.js has exposed setting this as API and it\u0027s still there in OpenSSL 1.1.0. I think it\u0027s probably easier just to leave this for now.",
      "parentUuid": "236e8540_c4c91e32",
      "range": {
        "startLine": 4074,
        "startChar": 6,
        "endLine": 4074,
        "endChar": 22
      },
      "revId": "34911e9d70e5dd30e26d58a45b5c6ccdde785ee9",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "236e8540_c4f75e61",
        "filename": "include/openssl/ssl.h",
        "patchSetId": 1
      },
      "lineNbr": 4074,
      "author": {
        "id": 5415
      },
      "writtenOn": "2017-01-13T22:03:21Z",
      "side": 1,
      "message": "I believe it\u0027s gone in 1.1.0. But, yeah, it is publicly exposed as a setter by way of an (undocumented?) singleUse knob.\n\nIt\u0027s just because Node wants to save memory and the GC means the SSL_CTX gets freed later, which means the pool of buffers gets freed later. Neither us nor 1.1.0 have any of that, so upstream\u0027s going to need a OPENSSL_VERSION_NUMBER ifdef to no-op it anyway. We could try to upstream that, but it won\u0027t be useful to use unless we stick || OPENSSL_IS_BORINGSSL alongside it or bump our version to 1.1.0.\n\n*shrug* I would like to make SSL_CTX opaque eventually, but this is far from the last blocker right now, so whatever.",
      "parentUuid": "63ca3d70_ffea3327",
      "revId": "34911e9d70e5dd30e26d58a45b5c6ccdde785ee9",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63ca3d70_822397d7",
        "filename": "include/openssl/ssl.h",
        "patchSetId": 1
      },
      "lineNbr": 4074,
      "author": {
        "id": 5005
      },
      "writtenOn": "2017-01-17T19:48:47Z",
      "side": 1,
      "message": "\u003e I believe it\u0027s gone in 1.1.0.\n\nHuh, I thought I checked that but, having checked again, you\u0027re right. (Although they missed updating a comment.)\n\nnode.js has https://github.com/nodejs/node/pull/8491, but I can sneak in a change since that doesn\u0027t appear to be going anywhere.",
      "parentUuid": "236e8540_c4f75e61",
      "revId": "34911e9d70e5dd30e26d58a45b5c6ccdde785ee9",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    }
  ]
}