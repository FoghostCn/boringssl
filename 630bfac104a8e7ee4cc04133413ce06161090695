{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1c624b63_c6d2da23",
        "filename": "crypto/asn1/asn1_lib.c",
        "patchSetId": 1
      },
      "lineNbr": 279,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-10-11T21:20:54Z",
      "side": 1,
      "message": "Ok, I\u0027m questioning the divide by - yes it means something that isn\u0027t checking can put two of them together safely, but why two? why not three? why not four? \n\nIf we aren\u0027t just going to stick with INT_MAX - 1 (which I\u0027d be ok with), should we simply do something like the biggest thing we could possibly care about is an entire certificate chain (which would never be a single asn1 object anyway) but something like the equivalent of SSL_MAX_CERT_LIST_DEFAULT..",
      "revId": "630bfac104a8e7ee4cc04133413ce06161090695",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13ecf770_97c0e306",
        "filename": "crypto/asn1/asn1_lib.c",
        "patchSetId": 1
      },
      "lineNbr": 279,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-10-11T23:59:13Z",
      "side": 1,
      "message": "I mean if we want \"reasonably larger than anything sane\" even USHRT_MAX might be workable here..",
      "parentUuid": "1c624b63_c6d2da23",
      "revId": "630bfac104a8e7ee4cc04133413ce06161090695",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54ddaab3_549d4976",
        "filename": "crypto/asn1/asn1_lib.c",
        "patchSetId": 1
      },
      "lineNbr": 279,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-10-12T14:04:02Z",
      "side": 1,
      "message": "It\u0027s just the limit we used here.\nhttps://boringssl.googlesource.com/boringssl/+/refs/heads/master/crypto/asn1/tasn_dec.c#215\n\nAs for where that limit came from, I pulled it out of a hat. I guess it means you can hex-encode the string, but just barely. :-)\n\nI\u0027d be a little worried about `SSL_MAX_CERT_LIST_DEFAULT` being too tight for some uses, but picking a smaller value sounds reasonable. We\u0027re currently at 2GiB. X509_NAME uses 1MiB, but that\u0027s just for a single name. BIGNUM uses 64MiB for a single BIGNUM, which is kinda absurd. I think it\u0027s set so that bit counts fit in int, with room to spare?\n\nI dunno, how about 64MiB or 128MiB? BIT STRINGs exist, so being concerned about bit counts makes sense. (Still picking a number out of a hat.)",
      "parentUuid": "13ecf770_97c0e306",
      "revId": "630bfac104a8e7ee4cc04133413ce06161090695",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2fd43273_f8ebb7c6",
        "filename": "crypto/asn1/asn1_lib.c",
        "patchSetId": 1
      },
      "lineNbr": 279,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-10-12T14:09:16Z",
      "side": 1,
      "message": "I suppose this is also just a single `ASN1_STRING`, not (usually) the whole structure, so it probably doesn\u0027t need much. Although that does also mean this doesn\u0027t help with overflow on the i2d side. (But we\u0027ll just fix that by rewriting all the encoders with `CBB`.)",
      "parentUuid": "54ddaab3_549d4976",
      "revId": "630bfac104a8e7ee4cc04133413ce06161090695",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a160b9da_ef9c8979",
        "filename": "crypto/asn1/asn1_lib.c",
        "patchSetId": 1
      },
      "lineNbr": 279,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-10-12T15:02:07Z",
      "side": 1,
      "message": "Yeah my thought on the smaller side was that it\u0027s just a single asn1_string, I was only pushing for something larger because of the possibly silly case where somehow someone has put an entire structure in there. I\u0027m thinking of the like of an OID with a string value that someone encodes an entire other certificate in or something silly like that.  \n\nI\u0027d say make a ASN1_STRING_MAX defined to 64 MiB, with a comment about why we sort of chose that number out of the air, and do that with the statement that \"any real world use of these at enormous lengths is almost certainly untrusted input attempting an attack.\" or something to that effect.",
      "parentUuid": "2fd43273_f8ebb7c6",
      "revId": "630bfac104a8e7ee4cc04133413ce06161090695",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5b1ac681_423a539e",
        "filename": "crypto/asn1/asn1_lib.c",
        "patchSetId": 1
      },
      "lineNbr": 279,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-10-26T19:13:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a160b9da_ef9c8979",
      "revId": "630bfac104a8e7ee4cc04133413ce06161090695",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    }
  ]
}