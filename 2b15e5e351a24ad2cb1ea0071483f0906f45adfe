{
  "comments": [
    {
      "key": {
        "uuid": "25611abc_9a1b89da",
        "filename": "crypto/cmac/cmac_test.cc",
        "patchSetId": 8
      },
      "lineNbr": 21,
      "author": {
        "id": 5415
      },
      "writtenOn": "2016-08-30T19:55:52Z",
      "side": 1,
      "message": "Stray includes?",
      "revId": "2b15e5e351a24ad2cb1ea0071483f0906f45adfe",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "313c01f2_62faf8a7",
        "filename": "crypto/cmac/cmac_test.cc",
        "patchSetId": 8
      },
      "lineNbr": 21,
      "author": {
        "id": 5645
      },
      "writtenOn": "2016-08-31T02:34:19Z",
      "side": 1,
      "message": "For EVP_aes_128_cbc() and CRYPTO_memcmp(), respectively.",
      "parentUuid": "25611abc_9a1b89da",
      "revId": "2b15e5e351a24ad2cb1ea0071483f0906f45adfe",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51b255c6_a89efb00",
        "filename": "crypto/cmac/cmac_test.cc",
        "patchSetId": 8
      },
      "lineNbr": 21,
      "author": {
        "id": 5415
      },
      "writtenOn": "2016-08-31T02:39:45Z",
      "side": 1,
      "message": "Ah. EVP_aes_128_cbc is probably more natively in cipher.h. We split evp.h into evp.h (EVP_PKEY), cipher.h (EVP_CIPHER), aead.h (EVP_AEAD), and digest.h (EVP_MD)",
      "parentUuid": "313c01f2_62faf8a7",
      "revId": "2b15e5e351a24ad2cb1ea0071483f0906f45adfe",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "313c01f2_a587ea0c",
        "filename": "crypto/cmac/cmac_test.cc",
        "patchSetId": 8
      },
      "lineNbr": 21,
      "author": {
        "id": 5645
      },
      "writtenOn": "2016-08-31T03:08:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "51b255c6_a89efb00",
      "revId": "2b15e5e351a24ad2cb1ea0071483f0906f45adfe",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25611abc_ba204d05",
        "filename": "crypto/ec/ec_test.cc",
        "patchSetId": 8
      },
      "lineNbr": 101,
      "author": {
        "id": 5415
      },
      "writtenOn": "2016-08-30T19:55:52Z",
      "side": 1,
      "message": "Nit: 80 chars",
      "revId": "2b15e5e351a24ad2cb1ea0071483f0906f45adfe",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "313c01f2_a2fb60a7",
        "filename": "crypto/ec/ec_test.cc",
        "patchSetId": 8
      },
      "lineNbr": 101,
      "author": {
        "id": 5645
      },
      "writtenOn": "2016-08-31T02:34:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "25611abc_ba204d05",
      "revId": "2b15e5e351a24ad2cb1ea0071483f0906f45adfe",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25611abc_3a2d1df7",
        "filename": "crypto/pkcs8/pkcs12_test.cc",
        "patchSetId": 8
      },
      "lineNbr": 685,
      "author": {
        "id": 5415
      },
      "writtenOn": "2016-08-30T19:55:52Z",
      "side": 1,
      "message": "Neat! Okay, I\u0027m sold on the template idea.",
      "revId": "2b15e5e351a24ad2cb1ea0071483f0906f45adfe",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25611abc_1a30594e",
        "filename": "crypto/test/scoped_types.h",
        "patchSetId": 8
      },
      "lineNbr": 26,
      "author": {
        "id": 5415
      },
      "writtenOn": "2016-08-30T19:55:52Z",
      "side": 1,
      "message": "(I guess this can just be moved to tool/generated_ed25519.cc later.)",
      "revId": "2b15e5e351a24ad2cb1ea0071483f0906f45adfe",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "313c01f2_02096cd0",
        "filename": "crypto/test/scoped_types.h",
        "patchSetId": 8
      },
      "lineNbr": 26,
      "author": {
        "id": 5645
      },
      "writtenOn": "2016-08-31T02:34:19Z",
      "side": 1,
      "message": "I went ahead and did it.  It\u0027s nice to get rid of the file.  If we bring it back, we\u0027d probably put it somewhere else.",
      "parentUuid": "25611abc_1a30594e",
      "revId": "2b15e5e351a24ad2cb1ea0071483f0906f45adfe",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25611abc_9a046976",
        "filename": "include/openssl/base.h",
        "patchSetId": 8
      },
      "lineNbr": 198,
      "author": {
        "id": 5415
      },
      "writtenOn": "2016-08-30T19:55:52Z",
      "side": 1,
      "message": "Nit: extra space",
      "range": {
        "startLine": 198,
        "startChar": 38,
        "endLine": 198,
        "endChar": 39
      },
      "revId": "2b15e5e351a24ad2cb1ea0071483f0906f45adfe",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "313c01f2_e20568b4",
        "filename": "include/openssl/base.h",
        "patchSetId": 8
      },
      "lineNbr": 198,
      "author": {
        "id": 5645
      },
      "writtenOn": "2016-08-31T02:34:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "25611abc_9a046976",
      "range": {
        "startLine": 198,
        "startChar": 38,
        "endLine": 198,
        "endChar": 39
      },
      "revId": "2b15e5e351a24ad2cb1ea0071483f0906f45adfe",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25611abc_dafee153",
        "filename": "include/openssl/base.h",
        "patchSetId": 8
      },
      "lineNbr": 363,
      "author": {
        "id": 5415
      },
      "writtenOn": "2016-08-30T19:55:52Z",
      "side": 1,
      "message": "I don\u0027t think you need these. I\u0027m not sure it even works!\n\nIf you manage to use bssl::UniquePtr\u003cRSA\u003e and emit code which calls bssl::UniquePtr\u003cRSA\u003e::~UniquePtr and thus bssl::internal::Free(RSA *) only by the forward declaration, you\u0027re relying on some other compilation unit to emit the definition of Free.\n\nBut if no compilation unit happens to emit Free(RSA *), it won\u0027t link. For more fun, compilation units won\u0027t emit a standalone copy of the inline function unless they\u0027re used. Here\u0027s a demonstration:\n\n$ cat /tmp/foo.h\nextern int foo();\n\n$ cat /tmp/foo_inline.h \n#include \"foo.h\"\ninline int foo() { return 0; }\n\n$ cat /tmp/foo.cc \n#include \"foo.h\"\n#include \"foo_inline.h\"\nint bar() { return foo(); }\n\n$ cat /tmp/main.cc \n#include \"foo.h\"\nint main() { return foo(); }\n\n$ g++ -Wall /tmp/foo.cc /tmp/main.cc\n# This works\n\n$ g++ -Wall /tmp/foo.cc /tmp/main.cc -O2\n/tmp/ccvn20cq.o: In function `main\u0027:\nmain.cc:(.text.startup+0x1): undefined reference to `foo()\u0027\ncollect2: error: ld returned 1 exit status \n\nWhat\u0027s going on here is that main.cc manages to link against a foo() iff foo.cc emits it. But whether foo.cc emits it depends on whether foo() got inlined into bar()! (And we want it to always get inlined so we don\u0027t pollute things with common symbols and make link times slow.)\n\nInstead, you say that if a consumer does:\n\n  class Foo {\n   private:\n    bssl::UniquePtr\u003cRSA\u003e rsa_;\n  };\n\nThey must either:\na) declare ~Foo out-of-line by declaring ~Foo();\nb) #include openssl/rsa.h\n\nThis is the same as with std::unique_ptr. You are allowed to std::unique_ptr\u003cT\u003e on a forward decl only if you never emit code that destructs it.",
      "revId": "2b15e5e351a24ad2cb1ea0071483f0906f45adfe",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "313c01f2_02e04ce6",
        "filename": "include/openssl/base.h",
        "patchSetId": 8
      },
      "lineNbr": 363,
      "author": {
        "id": 5645
      },
      "writtenOn": "2016-08-31T02:34:19Z",
      "side": 1,
      "message": "Yes: the requirement is that if you destruct a bssl::UniquePtr\u003cRSA\u003e, you have to #include rsa.h.  Is that a bad thing?\n\n(Maybe I am missing your point.)",
      "parentUuid": "25611abc_dafee153",
      "revId": "2b15e5e351a24ad2cb1ea0071483f0906f45adfe",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51b255c6_485bbf59",
        "filename": "include/openssl/base.h",
        "patchSetId": 8
      },
      "lineNbr": 363,
      "author": {
        "id": 5415
      },
      "writtenOn": "2016-08-31T02:39:45Z",
      "side": 1,
      "message": "Nah, that\u0027s a fine requirement. But I believe it means you don\u0027t want to forward-declare all those Free functions. Otherwise it will instead try to call internal::Free by way of the externally-defined symbol and get confused.",
      "parentUuid": "313c01f2_02e04ce6",
      "revId": "2b15e5e351a24ad2cb1ea0071483f0906f45adfe",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "313c01f2_e5bf32a9",
        "filename": "include/openssl/base.h",
        "patchSetId": 8
      },
      "lineNbr": 363,
      "author": {
        "id": 5645
      },
      "writtenOn": "2016-08-31T03:08:57Z",
      "side": 1,
      "message": "If the you (say) forget to #include rsa.h when using a bssl::UniquePtr\u003cRSA\u003e, it is true that you get a link-time failure, rather than a compile-time failure, which is not ideal.  (Not sure if that\u0027s what you meant by \"become confused\"?)\n\nHere, you need some kind of forward declaration in order for the use of Free() below to not be an error.\n\nIf you try the naive thing, and replace all the forward declarations with \"template \u003cclass T\u003e void Free(T*)\", that results in the same link-time failure which I suspect results from encountering Free\u003cT\u003e in base.h before encountering the specialization in (say) rsa.h.  I admit my understanding of C++ templates is none too sophisticated, but intuitively it seems wrong to declare a generic Free\u003cT\u003e when no such thing exists.",
      "parentUuid": "51b255c6_485bbf59",
      "revId": "2b15e5e351a24ad2cb1ea0071483f0906f45adfe",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25611abc_9a6d4936",
        "filename": "tool/client.cc",
        "patchSetId": 8
      },
      "lineNbr": 101,
      "author": {
        "id": 5415
      },
      "writtenOn": "2016-08-30T19:55:52Z",
      "side": 1,
      "message": "Nit: 80 chars",
      "revId": "2b15e5e351a24ad2cb1ea0071483f0906f45adfe",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "313c01f2_42b9b4eb",
        "filename": "tool/client.cc",
        "patchSetId": 8
      },
      "lineNbr": 101,
      "author": {
        "id": 5645
      },
      "writtenOn": "2016-08-31T02:34:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "25611abc_9a6d4936",
      "revId": "2b15e5e351a24ad2cb1ea0071483f0906f45adfe",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25611abc_ba720d11",
        "filename": "tool/client.cc",
        "patchSetId": 8
      },
      "lineNbr": 233,
      "author": {
        "id": 5415
      },
      "writtenOn": "2016-08-30T19:55:52Z",
      "side": 1,
      "message": "Nit: 80 chars",
      "revId": "2b15e5e351a24ad2cb1ea0071483f0906f45adfe",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "313c01f2_82c3bc4b",
        "filename": "tool/client.cc",
        "patchSetId": 8
      },
      "lineNbr": 233,
      "author": {
        "id": 5645
      },
      "writtenOn": "2016-08-31T02:34:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "25611abc_ba720d11",
      "revId": "2b15e5e351a24ad2cb1ea0071483f0906f45adfe",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25611abc_da77c1ff",
        "filename": "tool/client.cc",
        "patchSetId": 8
      },
      "lineNbr": 290,
      "author": {
        "id": 5415
      },
      "writtenOn": "2016-08-30T19:55:52Z",
      "side": 1,
      "message": "Nit: 80 chars",
      "revId": "2b15e5e351a24ad2cb1ea0071483f0906f45adfe",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "313c01f2_62c83868",
        "filename": "tool/client.cc",
        "patchSetId": 8
      },
      "lineNbr": 290,
      "author": {
        "id": 5645
      },
      "writtenOn": "2016-08-31T02:34:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "25611abc_da77c1ff",
      "revId": "2b15e5e351a24ad2cb1ea0071483f0906f45adfe",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25611abc_fa7c85e4",
        "filename": "tool/client.cc",
        "patchSetId": 8
      },
      "lineNbr": 296,
      "author": {
        "id": 5415
      },
      "writtenOn": "2016-08-30T19:55:52Z",
      "side": 1,
      "message": "Nit: 80 chars",
      "revId": "2b15e5e351a24ad2cb1ea0071483f0906f45adfe",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "313c01f2_c2aca4a9",
        "filename": "tool/client.cc",
        "patchSetId": 8
      },
      "lineNbr": 296,
      "author": {
        "id": 5645
      },
      "writtenOn": "2016-08-31T02:34:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "25611abc_fa7c85e4",
      "revId": "2b15e5e351a24ad2cb1ea0071483f0906f45adfe",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    }
  ]
}