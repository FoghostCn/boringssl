{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "23c4191a_bb64abce",
        "filename": "rust/bssl/src/aes.rs",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 5180
      },
      "writtenOn": "2023-02-17T12:41:45Z",
      "side": 1,
      "message": "There\u0027s almost never a use case for applications to be encrypting/decrypting a single block at a time. Users almost always need a higher level construction, such as AES-CBC (or even better, an AEAD). What\u0027s the use case for exposing it at this level?",
      "revId": "46f313b639078b25b0d4a598d44a19646aaf25ef",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a186b3c7_f905fd26",
        "filename": "rust/bssl/src/aes.rs",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 15751
      },
      "writtenOn": "2023-02-21T17:59:25Z",
      "side": 1,
      "message": "Understood, but in this case we do have a use case for exposing single block plain AES. It is already provided as an API by boringssl, so this is just exposing that so Rust libraries can use it as well",
      "parentUuid": "23c4191a_bb64abce",
      "revId": "46f313b639078b25b0d4a598d44a19646aaf25ef",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf929f6a_3e14caab",
        "filename": "rust/bssl/src/aes.rs",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 5180
      },
      "writtenOn": "2023-02-17T12:41:45Z",
      "side": 1,
      "message": "Creating both an encryption key and a decryption key will have the effect of runnign the AES key schedule 2x, which won\u0027t be needed for most callers.",
      "revId": "46f313b639078b25b0d4a598d44a19646aaf25ef",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "830c6e13_4afd424f",
        "filename": "rust/bssl/src/aes.rs",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 15751
      },
      "writtenOn": "2023-02-21T17:59:25Z",
      "side": 1,
      "message": "Good point, we are trying to adhere to the interface of RustCrypto\u0027s AES implementation: https://github.com/RustCrypto/block-ciphers/tree/master/aes so that this can more easily be swapped in to projects already depending on it. \n\nThe alternative way to implement that would be to just save the key bytes on `new()` and then call `AES_set_encrypt_key` inside of the `encrypt` fn. But then this cost is paid at encryption/decryption time. I would prefer to keep the initialization of the keys inside of `new()` since that cost is only paid once.\n\nAnother option is to have separate ciphers for encrypting and decrypting, but that differs from the RustCrypto API",
      "parentUuid": "cf929f6a_3e14caab",
      "revId": "46f313b639078b25b0d4a598d44a19646aaf25ef",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e77cf143_1c74e466",
        "filename": "rust/bssl/src/aes.rs",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 15791
      },
      "writtenOn": "2023-02-21T23:00:46Z",
      "side": 1,
      "message": "For our use case for nearby presence, key scheduling costs are significant, so if we can offer a lower level API that only does one of encryption or decryption, that would be a win. We need decryption to be fast and cheap.",
      "parentUuid": "830c6e13_4afd424f",
      "revId": "46f313b639078b25b0d4a598d44a19646aaf25ef",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ce68f331_3a5bacc3",
        "filename": "rust/bssl/src/aes.rs",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 15751
      },
      "writtenOn": "2023-02-22T18:07:20Z",
      "side": 1,
      "message": "Okay I refactored so that AesKey\u0027s for encryption and decryption are created separately",
      "parentUuid": "e77cf143_1c74e466",
      "revId": "46f313b639078b25b0d4a598d44a19646aaf25ef",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    }
  ]
}