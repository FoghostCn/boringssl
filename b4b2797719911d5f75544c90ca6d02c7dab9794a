{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "40cdd479_b21174d5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5415
      },
      "writtenOn": "2022-10-18T15:11:31Z",
      "side": 1,
      "message": "We\u0027ve intentionally not applied something like this. It\u0027s fragile and sensitive to include order. If \u003cwincrypt.h\u003e happens to be included after \u003copenssl/base.h\u003e, the workaround will silently break. Moreover, by silently deleting parts of wincrypt.h\u0027s API, it\u0027ll break code that needs those macros.\n\nYou can see impacts of this where OpenSSL actually breaks the usual include guard pattern to mitigate the ordering issue!\nhttps://github.com/openssl/openssl/commit/3c58d447497b37f7b4f458aaa2956a7e226c6d65\n\nI don\u0027t think this is a good strategy. Instead, for Chromium, we mandate \u003cwincrypt.h\u003e be included via a special shim header that applies the fixups, and also re-exports the missing symbols under another name. By keeping that include and the undefs atomic, we can get something independent of include order.\nhttps://source.chromium.org/chromium/chromium/src/+/main:base/win/wincrypt_shim.h\n\nThis isn\u0027t great either, but if we can\u0027t reliably hide it from the caller, better to do something like this where the caller is aware. I\u0027m hopeful that a future version of the SDK will honor this `WINCRYPT_USE_SYMBOL_PREFIX` symbol, which should hopefully resolve it. We still would not define it in the headers as OpenSSL has done (that is, one again, include-order-dependent and caller-visible), but we can at least document that callers need to build with that option.\nhttps://github.com/openssl/openssl/pull/18131#discussion_r853369072",
      "revId": "b4b2797719911d5f75544c90ca6d02c7dab9794a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f46ffbb1_5eeec6b2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 15101
      },
      "writtenOn": "2022-10-18T15:22:40Z",
      "side": 1,
      "message": "Understood. Thank you for the review. I hope that the issue will be fixed soon.",
      "parentUuid": "40cdd479_b21174d5",
      "revId": "b4b2797719911d5f75544c90ca6d02c7dab9794a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "70bdf690_035c2d91",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 15101
      },
      "writtenOn": "2022-10-18T15:24:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f46ffbb1_5eeec6b2",
      "revId": "b4b2797719911d5f75544c90ca6d02c7dab9794a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "b4b2797719911d5f75544c90ca6d02c7dab9794a",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "b4b2797719911d5f75544c90ca6d02c7dab9794a",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}