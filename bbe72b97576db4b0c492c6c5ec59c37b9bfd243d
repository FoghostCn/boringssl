{
  "comments": [
    {
      "key": {
        "uuid": "e4c43fed_171a8652",
        "filename": "go.mod",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-03-12T22:30:22Z",
      "side": 1,
      "message": "Can\u0027t do this I\u0027m afraid because of the number of places where BoringSSL is used. We may have to drop the runner tests for this and depend on self-tests in ssl_test.cc",
      "revId": "bbe72b97576db4b0c492c6c5ec59c37b9bfd243d",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71a59620_886f973d",
        "filename": "go.mod",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 9225
      },
      "writtenOn": "2019-03-15T18:09:53Z",
      "side": 1,
      "message": "Ok, I was suspecting it may be rejected, but wasn\u0027t sure. I can drop those tests and look into ssl_test.cc.\nOther idea would be - I can also make smaller implementation of SIKE/p503 in Go and copy it to runner directory. It would be much smaller than what we have on Cloudflare\u0027s github, but not as small as hrss.\nDo you think it makes sense? If not I\u0027ll simply reuse ssl_test.cc",
      "parentUuid": "e4c43fed_171a8652",
      "revId": "bbe72b97576db4b0c492c6c5ec59c37b9bfd243d",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2598845_f422486c",
        "filename": "go.mod",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-03-20T20:57:58Z",
      "side": 1,
      "message": "It would be fine to include an implementation in Go inside runner. Also ok to self-test against itself in ssl_test.cc.",
      "parentUuid": "71a59620_886f973d",
      "revId": "bbe72b97576db4b0c492c6c5ec59c37b9bfd243d",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba4f0c52_2ab3e5eb",
        "filename": "go.mod",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 9225
      },
      "writtenOn": "2019-03-25T20:37:07Z",
      "side": 1,
      "message": "ok, I\u0027ll push go code to runner.",
      "parentUuid": "a2598845_f422486c",
      "revId": "bbe72b97576db4b0c492c6c5ec59c37b9bfd243d",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9dedab0_e27f3aa9",
        "filename": "include/openssl/nid.h",
        "patchSetId": 1
      },
      "lineNbr": 4240,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-03-12T22:30:22Z",
      "side": 1,
      "message": "Needs a different name. CECPQ2b?",
      "revId": "bbe72b97576db4b0c492c6c5ec59c37b9bfd243d",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f69e96df_07295153",
        "filename": "include/openssl/nid.h",
        "patchSetId": 1
      },
      "lineNbr": 4240,
      "author": {
        "id": 9225
      },
      "writtenOn": "2019-03-25T20:37:07Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e9dedab0_e27f3aa9",
      "revId": "bbe72b97576db4b0c492c6c5ec59c37b9bfd243d",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9bab76e_fa1244aa",
        "filename": "ssl/CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-03-12T22:30:22Z",
      "side": 1,
      "message": "rather than add directories here, use relative includes in the .cc files.",
      "revId": "bbe72b97576db4b0c492c6c5ec59c37b9bfd243d",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98b01345_f3c2ccdc",
        "filename": "ssl/CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 9225
      },
      "writtenOn": "2019-03-15T18:09:53Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b9bab76e_fa1244aa",
      "revId": "bbe72b97576db4b0c492c6c5ec59c37b9bfd243d",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f9d2d40_92811170",
        "filename": "ssl/ssl_key_share.cc",
        "patchSetId": 1
      },
      "lineNbr": 306,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-03-12T22:30:22Z",
      "side": 1,
      "message": "We\u0027re not adding more cleanse statements. OPENSSL_malloc does it automatically and it\u0027s often a false-promise anyway because things get left on the stack and in registers.",
      "revId": "bbe72b97576db4b0c492c6c5ec59c37b9bfd243d",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3dd6d200_32637050",
        "filename": "ssl/ssl_key_share.cc",
        "patchSetId": 1
      },
      "lineNbr": 306,
      "author": {
        "id": 9225
      },
      "writtenOn": "2019-03-15T18:09:53Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "2f9d2d40_92811170",
      "revId": "bbe72b97576db4b0c492c6c5ec59c37b9bfd243d",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8241bf10_c576de3d",
        "filename": "ssl/ssl_key_share.cc",
        "patchSetId": 1
      },
      "lineNbr": 318,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-03-12T22:30:22Z",
      "side": 1,
      "message": "In what cases can this function fail?",
      "revId": "bbe72b97576db4b0c492c6c5ec59c37b9bfd243d",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb5fe214_258b1062",
        "filename": "ssl/ssl_key_share.cc",
        "patchSetId": 1
      },
      "lineNbr": 318,
      "author": {
        "id": 9225
      },
      "writtenOn": "2019-03-15T18:09:53Z",
      "side": 1,
      "message": "In case BN_CTX_new() fails - I\u0027m using BN_rand() as I need 253 random bits. Inside I\u0027m also checking for failures from BN_rand() and BN_bn2le_padded(), but in reality this should be always OK (until implementation doesn\u0027t change).",
      "parentUuid": "8241bf10_c576de3d",
      "revId": "bbe72b97576db4b0c492c6c5ec59c37b9bfd243d",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90ceafd6_d4ec31b1",
        "filename": "ssl/ssl_key_share.cc",
        "patchSetId": 1
      },
      "lineNbr": 318,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-03-20T20:57:58Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "bb5fe214_258b1062",
      "revId": "bbe72b97576db4b0c492c6c5ec59c37b9bfd243d",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    }
  ]
}