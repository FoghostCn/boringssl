{
  "comments": [
    {
      "key": {
        "uuid": "5db89ed4_734d805e",
        "filename": "util/BUILD",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 5885
      },
      "writtenOn": "2016-07-06T20:08:10Z",
      "side": 1,
      "message": "Nit: macos_x86_64?",
      "range": {
        "startLine": 39,
        "startChar": 12,
        "endLine": 39,
        "endChar": 22
      },
      "revId": "93c9bd0e42a961e91039fc9dedee5c31d8747089",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5db89ed4_53ecfc2f",
        "filename": "util/BUILD",
        "patchSetId": 3
      },
      "lineNbr": 55,
      "author": {
        "id": 5885
      },
      "writtenOn": "2016-07-06T20:08:10Z",
      "side": 1,
      "message": "buildifier wants to remove empty line, if there is no comment after it.",
      "revId": "93c9bd0e42a961e91039fc9dedee5c31d8747089",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5db89ed4_ae808bac",
        "filename": "util/BUILD",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 5645
      },
      "writtenOn": "2016-07-06T20:53:35Z",
      "side": 1,
      "message": "What is the value of this list of -W flags?\n\nIn my ideal world, there\u0027s exactly one canonical location for these flags per (compiler, platform), and I don\u0027t think this is it.  (Though maybe I am wrong about that?)\n\nRegardless of the answer, it\u0027s worth commenting how this list was derived, here and below at |boringssl_copts_c11|.",
      "range": {
        "startLine": 61,
        "startChar": 20,
        "endLine": 61,
        "endChar": 22
      },
      "revId": "93c9bd0e42a961e91039fc9dedee5c31d8747089",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5db89ed4_eeb2835b",
        "filename": "util/BUILD",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 5885
      },
      "writtenOn": "2016-07-06T21:35:44Z",
      "side": 1,
      "message": "Value is detection of common programmer mistakes.\n\nFWIW, CMakeLists.txt uses those CFLAGS:\n\n    -Wall -Werror -Wformat\u003d2 -Wsign-compare -Wmissing-field-initializers -ggdb -fvisibility\u003dhidden\n\n-Wsign-compare -Wmissing-field-initializers are part of -Wextra, which I suggest is worth adding.\n\nAs for the new ones here:\n\n-Wshadow detects mistakes with accidental reuse of the same variable name for different purpose,\n\n-Wwrite-strings detects mistakes with \"const char *\" vs \"char *\" misuse,\n\n-Wmissing-prototypes and friends are used to detect missing \"static\" keyword in local functions and/or lack of exported prototypes,\n\nI\u0027ve seen all of those enough times in various projects (including BoringSSL) to know that they\u0027re worth adding.\n\nI\u0027m not sure how much value -Wpointer-arith really provides, it\u0027s leftover from \"common\" CFLAGS that I\u0027m using in NGINX.\n\n\nAs for whether or not this is a good place to list CFLAGS... Where else would you put them?",
      "parentUuid": "5db89ed4_ae808bac",
      "range": {
        "startLine": 61,
        "startChar": 20,
        "endLine": 61,
        "endChar": 22
      },
      "revId": "93c9bd0e42a961e91039fc9dedee5c31d8747089",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5db89ed4_82f47b8d",
        "filename": "util/BUILD",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 5645
      },
      "writtenOn": "2016-07-06T22:14:40Z",
      "side": 1,
      "message": "Sorry to make you write all that out.  I\u0027m not questioning the value of warnings; I love warnings.\n\nBut as I understand it, this isn\u0027t going to affect any of the compiles done during BoringSSL development.  Wouldn\u0027t it be better to put the warnings in CMakeLists.txt so that we\u0027ll see them earlier?",
      "parentUuid": "5db89ed4_eeb2835b",
      "range": {
        "startLine": 61,
        "startChar": 20,
        "endLine": 61,
        "endChar": 22
      },
      "revId": "93c9bd0e42a961e91039fc9dedee5c31d8747089",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5db89ed4_a2d89ffc",
        "filename": "util/BUILD",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 5885
      },
      "writtenOn": "2016-07-06T22:27:18Z",
      "side": 1,
      "message": "Ah, I see your point now....\n\nThere are warnings in CMakeLists.txt already, although the list is a bit different right now, so we should fix that.\n\nHowever, I\u0027d argue that having warnings enabled outside of core BoringSSL development still provides a lot of value... I personally found number of issues when compiling BoringSSL on OpenBSD and FreeBSD which wouldn\u0027t be visible without those warnings enabled by default.\n\nAlso, compilers are stricter and stricter with each release and it\u0027s not guaranteed that BoringSSL developers are always using the bleeding edge.",
      "parentUuid": "5db89ed4_82f47b8d",
      "range": {
        "startLine": 61,
        "startChar": 20,
        "endLine": 61,
        "endChar": 22
      },
      "revId": "93c9bd0e42a961e91039fc9dedee5c31d8747089",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5db89ed4_53815c69",
        "filename": "util/BUILD",
        "patchSetId": 3
      },
      "lineNbr": 119,
      "author": {
        "id": 5885
      },
      "writtenOn": "2016-07-06T20:08:10Z",
      "side": 1,
      "message": "buildifier puts \"copts\" after \"srcs\".",
      "revId": "93c9bd0e42a961e91039fc9dedee5c31d8747089",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    }
  ]
}