{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "43cfa0b0_2a1c1707",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 9581
      },
      "writtenOn": "2021-05-20T20:48:49Z",
      "side": 1,
      "message": "Hey David, took a stab at this. PTAL :)",
      "revId": "bea8d53f1e8f4519473720b7ebb1f9271f52dc2a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3eb0c729_c89280c3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 9581
      },
      "writtenOn": "2021-05-20T20:50:47Z",
      "side": 1,
      "message": "I figured I\u0027d keep the diff readable for now, and pull in corpus changes at the end, perhaps in another CL if that\u0027s fine with you.",
      "parentUuid": "43cfa0b0_2a1c1707",
      "revId": "bea8d53f1e8f4519473720b7ebb1f9271f52dc2a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d5609df1_1b301c67",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5415
      },
      "writtenOn": "2021-05-21T20:41:54Z",
      "side": 1,
      "message": "Yup! I usually do those as two CLs, one immediately after the other.",
      "parentUuid": "3eb0c729_c89280c3",
      "revId": "bea8d53f1e8f4519473720b7ebb1f9271f52dc2a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5fda5e0_0f7e159b",
        "filename": "ssl/encrypted_client_hello.cc",
        "patchSetId": 2
      },
      "lineNbr": 320,
      "author": {
        "id": 5415
      },
      "writtenOn": "2021-05-21T20:41:31Z",
      "side": 1,
      "message": "Nit: I\u0027d replace both of these comments with:\n\n// In fuzzer mode, disable encryption to improve coverage. We reserve a short input to signal decryption failure, so the fuzzer can explore fallback to ClientHelloOuter.\n\n(Explaining \"why\" instead of \"what\".)",
      "revId": "bea8d53f1e8f4519473720b7ebb1f9271f52dc2a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c15bb55_d1a13573",
        "filename": "ssl/encrypted_client_hello.cc",
        "patchSetId": 2
      },
      "lineNbr": 320,
      "author": {
        "id": 9581
      },
      "writtenOn": "2021-05-24T15:16:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d5fda5e0_0f7e159b",
      "revId": "bea8d53f1e8f4519473720b7ebb1f9271f52dc2a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d013c4b4_11bf082a",
        "filename": "ssl/encrypted_client_hello.cc",
        "patchSetId": 2
      },
      "lineNbr": 329,
      "author": {
        "id": 5415
      },
      "writtenOn": "2021-05-21T20:41:31Z",
      "side": 1,
      "message": "Nit: No need for ERR_R_MALLOC_FAILURE. Most of the wrappers here push it automatically.\n\n(It\u0027s just that OPENSSL_malloc itself can\u0027t because that would cause the error static to recurse infinitely.)",
      "revId": "bea8d53f1e8f4519473720b7ebb1f9271f52dc2a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ad29b827_e905a8ea",
        "filename": "ssl/encrypted_client_hello.cc",
        "patchSetId": 2
      },
      "lineNbr": 329,
      "author": {
        "id": 9581
      },
      "writtenOn": "2021-05-24T15:16:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d013c4b4_11bf082a",
      "revId": "bea8d53f1e8f4519473720b7ebb1f9271f52dc2a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e03e4500_a7568dca",
        "filename": "ssl/test/fuzzer.h",
        "patchSetId": 2
      },
      "lineNbr": 527,
      "author": {
        "id": 5415
      },
      "writtenOn": "2021-05-21T20:41:31Z",
      "side": 1,
      "message": "Ah yeah, this is what we were talking about the other day about just statically enabling features. It\u0027s a trade-off between coverage and how much time we want the fuzzer to waste on things. This does allow the fuzzer to explore different variations on ECHConfigs (e.g. if it has a crash that only manifests with AES-only ECHConfigs), but it also means the fuzzer will waste a lot of time trying invalid syntaxes for ECHConfig.\n\nIt\u0027s actually even worse for this fuzzer, because the chances of the fuzzer finding matching X25519 public and private key pairs is nil. We also already have ssl_ctx_api covering the ECHConfig server parser itself.\n\nSo instead match the rest of this file, by configuring static ECHConfigs. If we want to test a few variations like an AES-only ECHConfig, we can load both of them and give them different config IDs. But, TBH, just the one is probably fine.\n\nFuzzer mode should smooth over most variations between the runner and fuzzer ECHConfigs, though better to make those static and make it match.",
      "revId": "bea8d53f1e8f4519473720b7ebb1f9271f52dc2a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8efd2d17_19674ed8",
        "filename": "ssl/test/fuzzer.h",
        "patchSetId": 2
      },
      "lineNbr": 527,
      "author": {
        "id": 9581
      },
      "writtenOn": "2021-05-24T15:16:57Z",
      "side": 1,
      "message": "Gotcha. Unfortunate that we can\u0027t test a variety of ECHConfigs and the temporality/raciness of switching out the server\u0027s ECHConfigs.\n\nAfter removing this, I\u0027m also removing the ECHConfig serialization logic in SettingsWriter.",
      "parentUuid": "e03e4500_a7568dca",
      "revId": "bea8d53f1e8f4519473720b7ebb1f9271f52dc2a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f9110f59_ec0e701c",
        "filename": "ssl/test/fuzzer.h",
        "patchSetId": 2
      },
      "lineNbr": 527,
      "author": {
        "id": 5415
      },
      "writtenOn": "2021-05-24T16:00:52Z",
      "side": 1,
      "message": "\u003e a variety of ECHConfigs\n\nWe can do it by loading both of them and give them different config IDs. Dunno how important that is though.\n\n\u003e temporality/raciness of switching out the server\u0027s ECHConfigs\n\nThe fuzzers don\u0027t test this anyway. It\u0027s single-threaded and all the config happens at the start. We test that sort of thing with multi-threaded tests in ssl_test.cc and TSan. (I\u0027ll make a note to do that once there\u0027s a client.)",
      "parentUuid": "8efd2d17_19674ed8",
      "revId": "bea8d53f1e8f4519473720b7ebb1f9271f52dc2a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    }
  ]
}