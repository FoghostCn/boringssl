{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "235e01b1_b0c24805",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5005
      },
      "writtenOn": "2024-04-09T19:32:57Z",
      "side": 1,
      "message": "HKDF is tested rather extensively already. Could you note why these test vectors need to live in BoringSSL?",
      "revId": "c033fbc10323cc6b5635823598e739a2c4363da2",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0efc264d_cf693dc9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 3382795
      },
      "writtenOn": "2024-04-09T19:33:15Z",
      "side": 1,
      "message": "For reference, not planned for merge",
      "revId": "c033fbc10323cc6b5635823598e739a2c4363da2",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa5ac867_207afea0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 14196
      },
      "writtenOn": "2024-04-09T19:48:31Z",
      "side": 1,
      "message": "Correct me if I am wrong, is this meant to act as a \"reference\" for validating your code based upon the comment block in the code here: https://source.chromium.org/chromiumos/chromiumos/codesearch/+/main:src/platform/ec/test/fpsensor_crypto.cc;l\u003d38-90;drc\u003dec0b07f4b1d938abc7e3b37eabb8661c40982e8a\n\nIf so it\u0027s probably not really appropriate to use our Gerrit as a \"reference\"\n\nWhile it isn\u0027t totally clear to me *why* you want/need this particular test vector to be tested, assuming you do it probably makes more senst to just run that test vectore through boringssl\u0027s hkdf in your own tests so you are always testing it.. Correct?",
      "parentUuid": "0efc264d_cf693dc9",
      "revId": "c033fbc10323cc6b5635823598e739a2c4363da2",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc50c0e3_7a1f4602",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 3382795
      },
      "writtenOn": "2024-04-09T20:00:48Z",
      "side": 1,
      "message": "Correct, these test vectors are meant to validate the code and tests results pointed to. This \"reference\" CL is really intended to avoid duplicate work in the future since I spent significant time trying to understand re-create the results from years ago created by an engineer no longer with the ChromeOS team. While I\u0027m not claiming this CL is the optimal way to test, not sure I follow how/why an unmerged CL created for reference would cause issues with the boringssl gerrit?",
      "parentUuid": "aa5ac867_207afea0",
      "revId": "c033fbc10323cc6b5635823598e739a2c4363da2",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ac2442e_ab4c5193",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 14196
      },
      "writtenOn": "2024-04-09T20:09:06Z",
      "side": 1,
      "message": "For several reasons, the first being we might not be using Gerrit forever, so this could get tossed, but more importantly, as we make structural changes and keep our test suite running, assuming this is being unmaintained, but referenced in your documentation, this will end up not working, and then very liketly we will be on the hook for answering someone\u0027s questions who tries to build it and test it. We are a small team and would prefer not to be doing that.\n\nIf the test is run in your *own* tests then presumably, your engineering team keeps what you want running, and does not end up with something rotting on the vine to trip someone up in the future. If is not important enough to be put in your own tests, why are you doing this?",
      "parentUuid": "bc50c0e3_7a1f4602",
      "revId": "c033fbc10323cc6b5635823598e739a2c4363da2",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ce38895_a8267ed1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 3382795
      },
      "writtenOn": "2024-04-09T20:44:02Z",
      "side": 1,
      "message": "Understand the concerns on it getting tossed or broken by changes and we\u0027re not expecting maintenance from the boringssl team. I also didn\u0027t mean to imply that the this wasn\u0027t important enough to put in the FP tests: I was following the methods and test precedent of a previous engineer who made similar changes and tested with boringssl locally. All that said, I can discuss your concerns with the FP TL (@tomhughes, also copied on the CL) next week when he returns to the office.",
      "parentUuid": "4ac2442e_ab4c5193",
      "revId": "c033fbc10323cc6b5635823598e739a2c4363da2",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30e1bab1_1049d21b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5415
      },
      "writtenOn": "2024-04-10T15:18:06Z",
      "side": 1,
      "message": "I notice you all already have a boringssl_crypto.cc in the same directory. If you need to test some inputs against BoringSSL, please use that instead.\n\nIf your goal is just to write down the provenance of a test vector, you could shell out to the OpenSSL command-line tool:\nhttps://www.openssl.org/docs/man3.0/man1/openssl-kdf.html#EXAMPLES",
      "parentUuid": "0ce38895_a8267ed1",
      "revId": "c033fbc10323cc6b5635823598e739a2c4363da2",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac953380_3eb8b473",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 3382795
      },
      "writtenOn": "2024-04-12T23:15:46Z",
      "side": 1,
      "message": "Yes, there is a boringssl_crypto test in the same directory and I submitted a CL to test these vectors there as well (crrev/c/5386947). The problem with this test is it feels like \"garbage in, garbage out: we run essentially the same code on the same embedded target in two different ways.\nThanks for the command line tool suggestion, will look into it.",
      "parentUuid": "30e1bab1_1049d21b",
      "revId": "c033fbc10323cc6b5635823598e739a2c4363da2",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f01ee868_8266cf5a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5415
      },
      "writtenOn": "2024-04-13T20:49:26Z",
      "side": 1,
      "message": "\u003e we run essentially the same code on the same embedded target in two different ways.\n\nThis CL is only calling into BoringSSL, so it\u0027s also running essentially the same code. Unless you\u0027re concerned that the same BoringSSL code will compute different results on x86_64 and your target. This is not the way to resolve that concern. To resolve that concern, you run BoringSSL\u0027s existing tests on your target.\n\nBut also doesn\u0027t seem to be true. Your original tests are testing some `get_ikm` function which, as far as I can tell, is doing some more complex, non-BoringSSL thing. (If it is still ultimately BoringSSL under the hood, what you\u0027re doing here wouldn\u0027t be doing anything useful because it\u0027s the same code.)\n\nAdditionally, crrev.com/c/5386947 seems to still be misunderstanding the suggestion. If you\u0027re calling into BoringSSL, you can use BoringSSL\u0027s existing HKDF functions, rather than implement it yourself.\n\nRegardless, patching BoringSSL\u0027s tests is not an appropriate way to do what you\u0027re trying to do. Please fix your project\u0027s processes to do something else. I\u0027ve given you a couple suggestions already. Yet another one would be to go implement HKDF out of the `hmac` package in Python. There are plenty of reasonable ways to compute HKDF.",
      "parentUuid": "ac953380_3eb8b473",
      "revId": "c033fbc10323cc6b5635823598e739a2c4363da2",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5df232ea_f50a8912",
        "filename": "crypto/hkdf/hkdf_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 14196
      },
      "writtenOn": "2024-04-09T19:41:58Z",
      "side": 1,
      "message": "So you have added these test vectors to the test from RFC 5869, which they don\u0027t appear to be. So where do these test vectors come from?",
      "revId": "c033fbc10323cc6b5635823598e739a2c4363da2",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50a66df2_5f09395b",
        "filename": "crypto/hkdf/hkdf_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 3382795
      },
      "writtenOn": "2024-04-09T20:00:48Z",
      "side": 1,
      "message": "As you noted in your other comment, these test vectors are meant to validate the results from the fpsensor_crytpo test run for the FPMCU on ChromeOS",
      "parentUuid": "5df232ea_f50a8912",
      "revId": "c033fbc10323cc6b5635823598e739a2c4363da2",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "c033fbc10323cc6b5635823598e739a2c4363da2",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "c033fbc10323cc6b5635823598e739a2c4363da2",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}