{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9c488821_554db04c",
        "filename": "include/openssl/target.h",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-07-20T16:02:10Z",
      "side": 1,
      "message": "How is Entropy gathered on CROS_EC and CROS_ZEPHYR?  is this platform also defining something like __linux__ when it is not linux?",
      "revId": "4b4b4447155200066f52e976f3fe01ec2413122e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee06f017_aeb4ae39",
        "filename": "include/openssl/target.h",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 16241
      },
      "writtenOn": "2023-07-20T16:45:27Z",
      "side": 1,
      "message": "The current implementations for them are\n\nhttps://source.chromium.org/chromiumos/chromiumos/codesearch/+/main:src/platform/ec/third_party/boringssl/common/sysrand.c\n\nhttps://source.chromium.org/chromiumos/chromiumos/codesearch/+/main:src/platform/ec/third_party/boringssl/common/sysrand_zephyr.c\n\nWe can try to provide \"getentropy\", although that will cause a little bit of problems in our host emulation tests. (the host emulation will use the real linux header \u0026 libraries, and conflicts with the custom getentropy)",
      "parentUuid": "9c488821_554db04c",
      "revId": "4b4b4447155200066f52e976f3fe01ec2413122e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7e2494c_1418612a",
        "filename": "include/openssl/target.h",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-07-20T18:14:57Z",
      "side": 1,
      "message": "if you\u0027re not defining __linux__ on the regular target, and your host tests are running on regular linux with __linux__ defined you could condintionalize your entire getentropy() on !defined(__linux__) - alternatively if your nanolibc does not define __GLIBC__ and your host tests do define it, you could do it with that define as well.",
      "parentUuid": "ee06f017_aeb4ae39",
      "revId": "4b4b4447155200066f52e976f3fe01ec2413122e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a528cc48_56844ab9",
        "filename": "include/openssl/target.h",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-07-20T18:16:01Z",
      "side": 1,
      "message": "argh. silly gerrit made the double underscores bold.. sigh\n _ _ linux _ _ \n and  _ _ GLIBC _ _",
      "parentUuid": "d7e2494c_1418612a",
      "revId": "4b4b4447155200066f52e976f3fe01ec2413122e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbb41fd7_119bf731",
        "filename": "include/openssl/target.h",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-08-01T01:33:21Z",
      "side": 1,
      "message": "we were having a look at your newlib - apparently newlib *has* stubs for getentropy() already, so if you are only using newlib *not* on your emulation target you could provide the getentropy in ther newlib build, it would presumably not be used on your emulation target using linux\u0027s libc and headers and you would be fine.",
      "parentUuid": "a528cc48_56844ab9",
      "revId": "4b4b4447155200066f52e976f3fe01ec2413122e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21835ec5_4c3788aa",
        "filename": "include/openssl/target.h",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 16241
      },
      "writtenOn": "2023-08-01T01:53:08Z",
      "side": 1,
      "message": "hmmm, we will add the getentropy support in this way:\nhttps://chromium-review.googlesource.com/c/chromiumos/platform/ec/+/4707366\n\nBecause the newlib will be used for different frameworks(EC \u0026 Zephyr).",
      "parentUuid": "dbb41fd7_119bf731",
      "revId": "4b4b4447155200066f52e976f3fe01ec2413122e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35658fea_f5c7760c",
        "filename": "include/openssl/target.h",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-08-01T03:19:00Z",
      "side": 1,
      "message": "ok.. note that what is merged there does not correctly implement getentropy. You probably need to add the correct failure cases.",
      "parentUuid": "21835ec5_4c3788aa",
      "revId": "4b4b4447155200066f52e976f3fe01ec2413122e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d87f250_3153807f",
        "filename": "include/openssl/target.h",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-08-01T20:01:43Z",
      "side": 1,
      "message": "Nevertheless, if you\u0027re going to land a corrected version this need not wait.",
      "parentUuid": "35658fea_f5c7760c",
      "revId": "4b4b4447155200066f52e976f3fe01ec2413122e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "699cba46_e3402cc7",
        "filename": "include/openssl/target.h",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-08-01T20:01:43Z",
      "side": 1,
      "message": "Since you have mentioned your linux emulator mode which uses real linux libraries linked with this in this way, are you ABSOLUTELY CERTAIN that emulator isn\u0027t used by anything real that would care if memory was corrupted and secrets leaked.",
      "revId": "4b4b4447155200066f52e976f3fe01ec2413122e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "afedae55_170767c3",
        "filename": "include/openssl/target.h",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-08-09T23:10:38Z",
      "side": 1,
      "message": "Just a ping on this, I can happily merge this if you are certain your emulator you mentioned that links with linux libraries using this is not used by anything real - if the linux emulator runs with threads bad things will happen with this setting.",
      "parentUuid": "699cba46_e3402cc7",
      "revId": "4b4b4447155200066f52e976f3fe01ec2413122e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    }
  ]
}