{
  "comments": [
    {
      "key": {
        "uuid": "ff0155b4_20de33f8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-10-05T21:22:44Z",
      "side": 1,
      "message": "Thanks for the contribution. I\u0027ve left some comments on the change itself below, but I also have some higher-level questions. New assembly platforms are expensive to support, and we typically do not accept things we cannot test, so we\u0027ll need to work out the testing story.\n\n- What toolchains do you intend this code to be used with, and what have you tested this on? Which assembler in particular? (Clang\u0027s assembler? The Microsoft one?)\n\n- I noticed you submitted some changes to generate_build_files.py. Is the intention to enable this assembly in Chromium? Have you run the tests with both the standalone CMake build as well as Chromium\u0027s? Note that Chromium typically builds with LLVM, though I don\u0027t know off-hand which assembler it uses on Windows/ARM64.\n\n- How are you envisioning ongoing support for this platform to work? We do not currently have continuous testing on Windows/ARM64.\n\nAnd some questions specific to Windows/ARM64:\n\n- My understanding is that the Windows/ARM64 ABI is similar to AAPCS64. Have you confirmed there aren\u0027t any deviations? If Windows has any odd requirements, they should be tested (see crypto/test/abi_test.h).\n\n- Windows ABIs tend to have unwind requirements for SEH. I haven\u0027t looked closely at the ARM64 variant. What\u0027s the plan for meeting those requirements for the assembly? (I believe all our ARM64 assembly sets up a frame pointer, per iOS64\u0027s requirements, so hopefully the Windows/ARM64 story can use that property.)",
      "revId": "61008bc18021e5df51116c43bb1cf92db93a80dd",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34b3bac8_2948988f",
        "filename": "crypto/cpu-aarch64-win.c",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-10-05T21:22:44Z",
      "side": 1,
      "message": "There should be a space after the \u0027if\u0027 here. (Please see STYLE.md and the Google C++ style which it cites.)",
      "range": {
        "startLine": 29,
        "startChar": 4,
        "endLine": 29,
        "endChar": 5
      },
      "revId": "61008bc18021e5df51116c43bb1cf92db93a80dd",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "391822a7_4855b3de",
        "filename": "crypto/cpu-aarch64-win.c",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-10-05T21:22:44Z",
      "side": 1,
      "message": "This is missing a newline at the end of the file.",
      "revId": "61008bc18021e5df51116c43bb1cf92db93a80dd",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ddc4a99_50104b9b",
        "filename": "crypto/fipsmodule/bn/internal.h",
        "patchSetId": 1
      },
      "lineNbr": 189,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-10-05T21:22:44Z",
      "side": 1,
      "message": "What\u0027s going on here? I would expect clang-cl to handle GCC-style asm just fine, and I would expect MSVC for ARM64 to not define __GNUC__ or __clang__.",
      "revId": "61008bc18021e5df51116c43bb1cf92db93a80dd",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d451a05_edf079f9",
        "filename": "crypto/perlasm/arm-xlate.pl",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-10-05T21:22:44Z",
      "side": 1,
      "message": "Do you have a pointer to documentation for these directives, as well as MS\u0027s use of the .inst directive below?",
      "revId": "61008bc18021e5df51116c43bb1cf92db93a80dd",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    }
  ]
}