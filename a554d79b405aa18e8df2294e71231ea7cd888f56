{
  "comments": [
    {
      "key": {
        "uuid": "0536b28d_7a5acc2e",
        "filename": "ssl/handoff.cc",
        "patchSetId": 6
      },
      "lineNbr": 27,
      "author": {
        "id": 5415
      },
      "writtenOn": "2018-09-15T01:17:32Z",
      "side": 1,
      "message": "Nit: s/config/features/ maybe? Since it\u0027s less about the configuration itself and more about what we can handle at all.",
      "range": {
        "startLine": 27,
        "startChar": 13,
        "endLine": 27,
        "endChar": 19
      },
      "revId": "a554d79b405aa18e8df2294e71231ea7cd888f56",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4920c134_008dc5d4",
        "filename": "ssl/handoff.cc",
        "patchSetId": 6
      },
      "lineNbr": 27,
      "author": {
        "id": 5645
      },
      "writtenOn": "2018-09-27T00:45:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0536b28d_7a5acc2e",
      "range": {
        "startLine": 27,
        "startChar": 13,
        "endLine": 27,
        "endChar": 19
      },
      "revId": "a554d79b405aa18e8df2294e71231ea7cd888f56",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "40437e41_0ce056aa",
        "filename": "ssl/handoff.cc",
        "patchSetId": 6
      },
      "lineNbr": 31,
      "author": {
        "id": 5415
      },
      "writtenOn": "2018-09-15T01:17:32Z",
      "side": 1,
      "message": "Nit: CBS_ASN1_OCTETSTRING is probably better here. SEQUENCE would imply the children are all ASN.1 elements, but this is a custom byte serialization.\n\n(Or you could make it a SEQUENCE OF INTEGER, but this byte representation is probably saner all around. More compact at least.)",
      "range": {
        "startLine": 31,
        "startChar": 35,
        "endLine": 31,
        "endChar": 52
      },
      "revId": "a554d79b405aa18e8df2294e71231ea7cd888f56",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b998488_bb783d7d",
        "filename": "ssl/handoff.cc",
        "patchSetId": 6
      },
      "lineNbr": 31,
      "author": {
        "id": 5645
      },
      "writtenOn": "2018-09-27T00:45:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "40437e41_0ce056aa",
      "range": {
        "startLine": 31,
        "startChar": 35,
        "endLine": 31,
        "endChar": 52
      },
      "revId": "a554d79b405aa18e8df2294e71231ea7cd888f56",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "28358243_4c2b1179",
        "filename": "ssl/handoff.cc",
        "patchSetId": 6
      },
      "lineNbr": 97,
      "author": {
        "id": 5415
      },
      "writtenOn": "2018-09-15T01:17:32Z",
      "side": 1,
      "message": "Check for failure. Ditto below.",
      "range": {
        "startLine": 97,
        "startChar": 4,
        "endLine": 97,
        "endChar": 22
      },
      "revId": "a554d79b405aa18e8df2294e71231ea7cd888f56",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6309f230_977b8b75",
        "filename": "ssl/handoff.cc",
        "patchSetId": 6
      },
      "lineNbr": 97,
      "author": {
        "id": 5645
      },
      "writtenOn": "2018-09-27T00:45:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "28358243_4c2b1179",
      "range": {
        "startLine": 97,
        "startChar": 4,
        "endLine": 97,
        "endChar": 22
      },
      "revId": "a554d79b405aa18e8df2294e71231ea7cd888f56",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "94114ab8_da26e024",
        "filename": "ssl/handoff.cc",
        "patchSetId": 6
      },
      "lineNbr": 116,
      "author": {
        "id": 5415
      },
      "writtenOn": "2018-09-15T01:17:32Z",
      "side": 1,
      "message": "Nice! I was thinking of stashing both lists and modify the negotiation algorithm, but this is probably simpler. (Though I guess most other places would want the latter strategy? I\u0027m fine with either.)",
      "range": {
        "startLine": 116,
        "startChar": 30,
        "endLine": 116,
        "endChar": 36
      },
      "revId": "a554d79b405aa18e8df2294e71231ea7cd888f56",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c57c1f98_a3e35fe7",
        "filename": "ssl/handoff.cc",
        "patchSetId": 6
      },
      "lineNbr": 116,
      "author": {
        "id": 5645
      },
      "writtenOn": "2018-09-27T00:45:31Z",
      "side": 1,
      "message": "You lost me there, and unfortunately I can\u0027t find our earlier discussion about this.  (I think it was in a chat.)  What are the other places?  Versions?  Supported curves?  What else?  Those both seem like cases where this same approach would work fine, unless I\u0027m missing something.",
      "parentUuid": "94114ab8_da26e024",
      "range": {
        "startLine": 116,
        "startChar": 30,
        "endLine": 116,
        "endChar": 36
      },
      "revId": "a554d79b405aa18e8df2294e71231ea7cd888f56",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f518809e_3ced26a4",
        "filename": "ssl/handoff.cc",
        "patchSetId": 6
      },
      "lineNbr": 116,
      "author": {
        "id": 5415
      },
      "writtenOn": "2018-10-01T19:59:11Z",
      "side": 1,
      "message": "Yeah, TLS 1.3 ciphers and versions aren\u0027t configurable in a way that\u0027s compatible with strategy.\n\nActually, that does suggest we\u0027d have to revise this for TLS 1.3 ciphers anyway. Since ~every code point in TLS 1.3 is a uint16_t anyway, we could do it fairly generically by storing everything in sorted Array\u003cuint16_t\u003es and have a function like supports_codepoint(Span\u003cconst uint16_t\u003e, uint16_t) which calls bsearch.\n\nDownside is we have to modify all the negotiation steps to take this extra thing into account. Though we have to do that anyway for most of these...",
      "parentUuid": "c57c1f98_a3e35fe7",
      "range": {
        "startLine": 116,
        "startChar": 30,
        "endLine": 116,
        "endChar": 36
      },
      "revId": "a554d79b405aa18e8df2294e71231ea7cd888f56",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f61d5c8_9733811c",
        "filename": "ssl/internal.h",
        "patchSetId": 6
      },
      "lineNbr": 521,
      "author": {
        "id": 5415
      },
      "writtenOn": "2018-09-15T01:17:32Z",
      "side": 1,
      "message": "Won\u0027t this cause ODR problems? Perhaps leave the definition in ssl_cipher.cc and instead add extern const size_t kNumCipher to the header and const size_t kNumCiphers \u003d OPENSSL_ARRAY_SIZE(kCiphers) to the cc file.",
      "revId": "a554d79b405aa18e8df2294e71231ea7cd888f56",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09085026_5353a61e",
        "filename": "ssl/internal.h",
        "patchSetId": 6
      },
      "lineNbr": 521,
      "author": {
        "id": 5645
      },
      "writtenOn": "2018-09-27T00:45:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2f61d5c8_9733811c",
      "revId": "a554d79b405aa18e8df2294e71231ea7cd888f56",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c8d57a56_126a9ac2",
        "filename": "ssl/internal.h",
        "patchSetId": 6
      },
      "lineNbr": 521,
      "author": {
        "id": 5645
      },
      "writtenOn": "2018-09-27T01:15:48Z",
      "side": 1,
      "message": "Er, maybe not.  You can\u0027t make a constexpr extern, unless I\u0027m missing something?  \n\nCan you be more specific about the ODR problem you anticipate?",
      "parentUuid": "09085026_5353a61e",
      "revId": "a554d79b405aa18e8df2294e71231ea7cd888f56",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "95903f06_4eeed920",
        "filename": "ssl/internal.h",
        "patchSetId": 6
      },
      "lineNbr": 521,
      "author": {
        "id": 5415
      },
      "writtenOn": "2018-10-01T20:03:12Z",
      "side": 1,
      "message": "const\u0027s probably fine I guess?\n\nYou can\u0027t define the same symbol in two different translation units. I believe this is true for constexpr too. We do end up odr-using this array a bunch by taking its address.\n\nI don\u0027t think we don\u0027t get the rope to do something like this until C++17 inline variables.\nhttps://en.cppreference.com/w/cpp/language/inline\n\nI could be wrong here though.",
      "parentUuid": "c8d57a56_126a9ac2",
      "revId": "a554d79b405aa18e8df2294e71231ea7cd888f56",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04226f94_8bb46e41",
        "filename": "ssl/ssl_cipher.cc",
        "patchSetId": 6
      },
      "lineNbr": 468,
      "author": {
        "id": 5415
      },
      "writtenOn": "2018-09-15T01:17:32Z",
      "side": 1,
      "message": "Failure check (and clang-format).",
      "revId": "a554d79b405aa18e8df2294e71231ea7cd888f56",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "778f67ca_b2af2a9a",
        "filename": "ssl/ssl_cipher.cc",
        "patchSetId": 6
      },
      "lineNbr": 468,
      "author": {
        "id": 5645
      },
      "writtenOn": "2018-09-27T00:45:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "04226f94_8bb46e41",
      "revId": "a554d79b405aa18e8df2294e71231ea7cd888f56",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "80269065_b474ab5c",
        "filename": "ssl/ssl_cipher.cc",
        "patchSetId": 6
      },
      "lineNbr": 477,
      "author": {
        "id": 5415
      },
      "writtenOn": "2018-09-15T01:17:32Z",
      "side": 1,
      "message": "They\u0027re bools, so perhaps:\n\nif (!in_group_flags[index] \u0026\u0026 index \u003e 0) {\n  in_group_flags[index-1] \u003d false;\n}",
      "range": {
        "startLine": 477,
        "startChar": 31,
        "endLine": 477,
        "endChar": 32
      },
      "revId": "a554d79b405aa18e8df2294e71231ea7cd888f56",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45e04588_81ebd1ac",
        "filename": "ssl/ssl_cipher.cc",
        "patchSetId": 6
      },
      "lineNbr": 477,
      "author": {
        "id": 5645
      },
      "writtenOn": "2018-09-27T00:45:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "80269065_b474ab5c",
      "range": {
        "startLine": 477,
        "startChar": 31,
        "endLine": 477,
        "endChar": 32
      },
      "revId": "a554d79b405aa18e8df2294e71231ea7cd888f56",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    }
  ]
}