{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b231de40_220bd72d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-03-28T18:35:33Z",
      "side": 1,
      "message": "(╯°□°)╯︵ ┻━┻",
      "revId": "c4a85dd75e9d1102eb35aa48718193d65efddb9d",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a3d5c2ac_94626195",
        "filename": "crypto/x509v3/v3_purp.c",
        "patchSetId": 1
      },
      "lineNbr": 230,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-03-28T18:38:03Z",
      "side": 1,
      "message": "You know what\u0027s truly horrifying? If you pass in the ID of a built-in `X509_PURPOSE`, you actually mutate the built-in one. This works because `xstandard` is not const, and *there is a caller that relies on this because they didn\u0027t realize you can allocate your own ID*.",
      "revId": "c4a85dd75e9d1102eb35aa48718193d65efddb9d",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0e5f050e_d412e1d7",
        "filename": "crypto/x509v3/v3_purp.c",
        "patchSetId": 1
      },
      "lineNbr": 230,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-03-28T19:02:31Z",
      "side": 1,
      "message": "Why would they allocate their own if they can mutate the built-in one for their purposes..  I mean, the API is there. may as well use it.",
      "parentUuid": "a3d5c2ac_94626195",
      "revId": "c4a85dd75e9d1102eb35aa48718193d65efddb9d",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "c4a85dd75e9d1102eb35aa48718193d65efddb9d",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "c4a85dd75e9d1102eb35aa48718193d65efddb9d",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}