{
  "comments": [
    {
      "key": {
        "uuid": "30cbe1e0_659d54d3",
        "filename": "crypto/hpke/internal.h",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-05-20T21:07:39Z",
      "side": 1,
      "message": "crypto/ doesn\u0027t get to depend on \u003copenssl/ssl.h\u003e. But HPKE doesn\u0027t use TLS code points anyway, right?",
      "revId": "fdc8893c2d36ea543f7b33186ef6f092927d1c5e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7477f3a6_736754bb",
        "filename": "crypto/hpke/internal.h",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 9581
      },
      "writtenOn": "2020-05-29T22:53:46Z",
      "side": 1,
      "message": "Ah, I guess it isn\u0027t using the TLS code points. The HPKE draft defines the DH KEM variant as DHKEM(Group, KDF), so I thought I should use SSL_CURVE_X25519 for the group.\n\nBut if we\u0027re creating specializing the SetupBaseS/SetupBaseR functions for each group we support, I suppose we don\u0027t even need a type.",
      "parentUuid": "30cbe1e0_659d54d3",
      "revId": "fdc8893c2d36ea543f7b33186ef6f092927d1c5e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eb178b5d_dba6905a",
        "filename": "crypto/hpke/internal.h",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-05-20T21:07:39Z",
      "side": 1,
      "message": "extern \"C\" / __cplusplus bits because we\u0027ll need to call this from C++.",
      "revId": "fdc8893c2d36ea543f7b33186ef6f092927d1c5e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "adbca235_9010908c",
        "filename": "crypto/hpke/internal.h",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 9581
      },
      "writtenOn": "2020-05-29T22:53:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eb178b5d_dba6905a",
      "revId": "fdc8893c2d36ea543f7b33186ef6f092927d1c5e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b0690b9_3cc1ce00",
        "filename": "crypto/hpke/internal.h",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-05-20T21:07:39Z",
      "side": 1,
      "message": "(I\u0027m assuming these are just notes for discussion rather than a comment to go in the actual header.)",
      "revId": "fdc8893c2d36ea543f7b33186ef6f092927d1c5e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b8ea43b_7bd8c157",
        "filename": "crypto/hpke/internal.h",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-05-20T21:07:39Z",
      "side": 1,
      "message": "It\u0027s terrible, but these actually should be #define blah.\n\nDefining constants this way will cause every compilation unit to export its own copy of the symbol, which is not what we want. C++ has some better mechanisms here (though it\u0027s still rather a mess), but in C it\u0027s macros.\n\nEdit: Although given we\u0027re not abstracting the KEM, I don\u0027t think we even need these constants. We can ponder how to make it more fancy later.",
      "revId": "fdc8893c2d36ea543f7b33186ef6f092927d1c5e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce20bc06_b0f1c556",
        "filename": "crypto/hpke/internal.h",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 9581
      },
      "writtenOn": "2020-05-29T22:53:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6b8ea43b_7bd8c157",
      "revId": "fdc8893c2d36ea543f7b33186ef6f092927d1c5e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66bd7887_6c6cbc05",
        "filename": "crypto/hpke/internal.h",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-05-20T21:07:39Z",
      "side": 1,
      "message": "I think I\u0027d just use #defines for code points like this. It\u0027s not a closed set, and any value we get over the wire isn\u0027t guaranteed to stay in range. That means the enum isn\u0027t actually doing much. (Although enums in C are barely enums anyway.)",
      "revId": "fdc8893c2d36ea543f7b33186ef6f092927d1c5e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f491735b_a71660e5",
        "filename": "crypto/hpke/internal.h",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 9581
      },
      "writtenOn": "2020-05-29T22:53:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "66bd7887_6c6cbc05",
      "revId": "fdc8893c2d36ea543f7b33186ef6f092927d1c5e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b28011bb_7ca6df64",
        "filename": "crypto/hpke/internal.h",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-05-20T21:07:39Z",
      "side": 1,
      "message": "The spec actually uses Curve25519 over X25519, but I believe that is a mistake. I\u0027ve filed https://github.com/cfrg/draft-irtf-cfrg-hpke/issues/100\n\nAlso, to make it both shorter and capture the full name, how about EVP_HPKE_DHKEM_X25519_HKDF_SHA256?",
      "revId": "fdc8893c2d36ea543f7b33186ef6f092927d1c5e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "778473a3_f8c81607",
        "filename": "crypto/hpke/internal.h",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 9581
      },
      "writtenOn": "2020-05-29T22:53:46Z",
      "side": 1,
      "message": "Ah, fair enough. Leaving it as X25519 and using the name you suggested.",
      "parentUuid": "b28011bb_7ca6df64",
      "revId": "fdc8893c2d36ea543f7b33186ef6f092927d1c5e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d68ef54d_9665a2fa",
        "filename": "crypto/hpke/internal.h",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-05-20T21:07:39Z",
      "side": 1,
      "message": "Not part of public API. They\u0027re an internal implementation detail of HPKE.",
      "revId": "fdc8893c2d36ea543f7b33186ef6f092927d1c5e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8ed9e42_ed146948",
        "filename": "crypto/hpke/internal.h",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 9581
      },
      "writtenOn": "2020-05-29T22:53:46Z",
      "side": 1,
      "message": "OK, moving to the .c file.",
      "parentUuid": "d68ef54d_9665a2fa",
      "revId": "fdc8893c2d36ea543f7b33186ef6f092927d1c5e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2bdcd3da_1b5b8f7b",
        "filename": "crypto/hpke/internal.h",
        "patchSetId": 3
      },
      "lineNbr": 71,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-05-20T21:07:39Z",
      "side": 1,
      "message": "Not part of public API. KEM machinery is an internal implementation detail of EVP_PKEY_CTX.",
      "revId": "fdc8893c2d36ea543f7b33186ef6f092927d1c5e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d990e775_0bfbc4c7",
        "filename": "crypto/hpke/internal.h",
        "patchSetId": 3
      },
      "lineNbr": 71,
      "author": {
        "id": 9581
      },
      "writtenOn": "2020-05-29T22:53:46Z",
      "side": 1,
      "message": "Moving to the .c file.",
      "parentUuid": "2bdcd3da_1b5b8f7b",
      "revId": "fdc8893c2d36ea543f7b33186ef6f092927d1c5e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "566cc63a_611333dd",
        "filename": "crypto/hpke/internal.h",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-05-20T21:07:39Z",
      "side": 1,
      "message": "I don\u0027t think an EVP_HPKE_CTX needs this. The KEM stuff is done inside the setup functions and then you only retain the resulting secrets.",
      "revId": "fdc8893c2d36ea543f7b33186ef6f092927d1c5e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a92af5f_8e94def9",
        "filename": "crypto/hpke/internal.h",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 9581
      },
      "writtenOn": "2020-05-29T22:53:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "566cc63a_611333dd",
      "revId": "fdc8893c2d36ea543f7b33186ef6f092927d1c5e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6f2fe54e_6c70b345",
        "filename": "crypto/hpke/internal.h",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-05-20T21:07:39Z",
      "side": 1,
      "message": "EVP_AEAD_CTX already contains the key. Is there a need to store the key on its own?",
      "revId": "fdc8893c2d36ea543f7b33186ef6f092927d1c5e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ccd5ea7_2b2522ab",
        "filename": "crypto/hpke/internal.h",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 9581
      },
      "writtenOn": "2020-05-29T22:53:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6f2fe54e_6c70b345",
      "revId": "fdc8893c2d36ea543f7b33186ef6f092927d1c5e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b8f5fb52_f4ee522b",
        "filename": "crypto/hpke/internal.h",
        "patchSetId": 3
      },
      "lineNbr": 83,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-05-20T21:07:39Z",
      "side": 1,
      "message": "This is a KDF output and is sized by the hash, not the KEM\u0027s raw secret key. (DH outputs always need to go into a KDF, so if any derived key is sized based on DH outputs, something\u0027s wrong.)",
      "range": {
        "startLine": 83,
        "startChar": 26,
        "endLine": 83,
        "endChar": 45
      },
      "revId": "fdc8893c2d36ea543f7b33186ef6f092927d1c5e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77dbcc76_9553883f",
        "filename": "crypto/hpke/internal.h",
        "patchSetId": 3
      },
      "lineNbr": 83,
      "author": {
        "id": 9581
      },
      "writtenOn": "2020-05-29T22:53:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b8f5fb52_f4ee522b",
      "range": {
        "startLine": 83,
        "startChar": 26,
        "endLine": 83,
        "endChar": 45
      },
      "revId": "fdc8893c2d36ea543f7b33186ef6f092927d1c5e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e74b1936_6af5da8e",
        "filename": "crypto/hpke/internal.h",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-05-20T21:07:39Z",
      "side": 1,
      "message": "EVP_HPKE_CTX",
      "range": {
        "startLine": 85,
        "startChar": 2,
        "endLine": 85,
        "endChar": 14
      },
      "revId": "fdc8893c2d36ea543f7b33186ef6f092927d1c5e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af1e2f84_13b23453",
        "filename": "crypto/hpke/internal.h",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 9581
      },
      "writtenOn": "2020-05-29T22:53:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e74b1936_6af5da8e",
      "range": {
        "startLine": 85,
        "startChar": 2,
        "endLine": 85,
        "endChar": 14
      },
      "revId": "fdc8893c2d36ea543f7b33186ef6f092927d1c5e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3fd3ba5_248f9b7a",
        "filename": "crypto/hpke/internal.h",
        "patchSetId": 3
      },
      "lineNbr": 87,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-05-20T21:07:39Z",
      "side": 1,
      "message": "void\n\nThis should simply bring it to the zero state and nothing else. The actual initialization happens in SetupBase.",
      "range": {
        "startLine": 87,
        "startChar": 0,
        "endLine": 87,
        "endChar": 3
      },
      "revId": "fdc8893c2d36ea543f7b33186ef6f092927d1c5e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "404fa2ef_cbdb031b",
        "filename": "crypto/hpke/internal.h",
        "patchSetId": 3
      },
      "lineNbr": 87,
      "author": {
        "id": 9581
      },
      "writtenOn": "2020-05-29T22:53:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d3fd3ba5_248f9b7a",
      "range": {
        "startLine": 87,
        "startChar": 0,
        "endLine": 87,
        "endChar": 3
      },
      "revId": "fdc8893c2d36ea543f7b33186ef6f092927d1c5e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6f5964e0_69d4b660",
        "filename": "crypto/hpke/internal.h",
        "patchSetId": 3
      },
      "lineNbr": 100,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-05-20T21:07:39Z",
      "side": 1,
      "message": "If we\u0027re making the caller aware of which KEM they\u0027re using to the point of having EVP_HPKE_CTX_setup_base_curve25519_s, I think we can leave this out and use X25519_keypair directly.\n\nIf we were abstracting the KEM a bit more, then it might make sense to do something fancier, but eh.",
      "revId": "fdc8893c2d36ea543f7b33186ef6f092927d1c5e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d352d434_dcfea562",
        "filename": "crypto/hpke/internal.h",
        "patchSetId": 3
      },
      "lineNbr": 100,
      "author": {
        "id": 9581
      },
      "writtenOn": "2020-05-29T22:53:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6f5964e0_69d4b660",
      "revId": "fdc8893c2d36ea543f7b33186ef6f092927d1c5e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2aed3537_ea4058bd",
        "filename": "crypto/hpke/internal.h",
        "patchSetId": 3
      },
      "lineNbr": 106,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-05-20T21:07:39Z",
      "side": 1,
      "message": "This function needs to output enc somewhere.",
      "revId": "fdc8893c2d36ea543f7b33186ef6f092927d1c5e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9bb12513_b285e9eb",
        "filename": "crypto/hpke/internal.h",
        "patchSetId": 3
      },
      "lineNbr": 106,
      "author": {
        "id": 9581
      },
      "writtenOn": "2020-05-29T22:53:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2aed3537_ea4058bd",
      "revId": "fdc8893c2d36ea543f7b33186ef6f092927d1c5e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57263012_1a843c66",
        "filename": "crypto/hpke/internal.h",
        "patchSetId": 3
      },
      "lineNbr": 109,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-05-20T21:07:39Z",
      "side": 1,
      "message": "We usually write these much more in prose. (See existing docs.)",
      "revId": "fdc8893c2d36ea543f7b33186ef6f092927d1c5e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8583f80e_dac9e2e5",
        "filename": "crypto/hpke/internal.h",
        "patchSetId": 3
      },
      "lineNbr": 109,
      "author": {
        "id": 9581
      },
      "writtenOn": "2020-05-29T22:53:46Z",
      "side": 1,
      "message": "OK, I rewrote the function comments and factored out the common |hpke| and |info| instructions in a paragraph above. Is that okay?",
      "parentUuid": "57263012_1a843c66",
      "revId": "fdc8893c2d36ea543f7b33186ef6f092927d1c5e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4bb3eb1_7316104a",
        "filename": "crypto/hpke/internal.h",
        "patchSetId": 3
      },
      "lineNbr": 110,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-05-20T21:07:39Z",
      "side": 1,
      "message": "This uses curve25519, while the scheme ID uses X25519. We should be consistent about whether we use the name from the spec (curve25519) or the name the spec will hopefully be corrected to (X25519).",
      "range": {
        "startLine": 110,
        "startChar": 28,
        "endLine": 110,
        "endChar": 38
      },
      "revId": "fdc8893c2d36ea543f7b33186ef6f092927d1c5e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c298e31d_350bc361",
        "filename": "crypto/hpke/internal.h",
        "patchSetId": 3
      },
      "lineNbr": 110,
      "author": {
        "id": 9581
      },
      "writtenOn": "2020-05-29T22:53:46Z",
      "side": 1,
      "message": "OK, using X25519.",
      "parentUuid": "a4bb3eb1_7316104a",
      "range": {
        "startLine": 110,
        "startChar": 28,
        "endLine": 110,
        "endChar": 38
      },
      "revId": "fdc8893c2d36ea543f7b33186ef6f092927d1c5e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51716042_3f69d483",
        "filename": "crypto/hpke/internal.h",
        "patchSetId": 3
      },
      "lineNbr": 112,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-05-20T21:07:39Z",
      "side": 1,
      "message": "EVP_PKEY is overkill for this. Ditto below. (Also it\u0027d just be an EVP_PKEY if using the EVP_PKEY key exchange bits. An EVP_PKEY_CTX is a pending operation and unusable const.) This is part of where we disagree with OpenSSL. They really like EVP_PKEY. I don\u0027t think it\u0027s a good abstraction as it tries to do too much at once.\n\nI\u0027m also not a fan of \"pkR\" and \"skR\" names. They\u0027re not very descriptive. :-)\n\nThis should either just be uint8_t peer_public_value[32], and then uint8_t private_key[32] in the receiver half, or uint8_t* + size_t pairs with the length checked. (For anything that comes from the peer, someone\u0027s going to have to check the length anyway, so abstracting that makes sense. The only long-lived key is skR.)",
      "revId": "fdc8893c2d36ea543f7b33186ef6f092927d1c5e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9357c39_91512e43",
        "filename": "crypto/hpke/internal.h",
        "patchSetId": 3
      },
      "lineNbr": 112,
      "author": {
        "id": 9581
      },
      "writtenOn": "2020-05-29T22:53:46Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "51716042_3f69d483",
      "revId": "fdc8893c2d36ea543f7b33186ef6f092927d1c5e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d31a155_5d5670ac",
        "filename": "crypto/hpke/internal.h",
        "patchSetId": 3
      },
      "lineNbr": 116,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-05-20T21:07:39Z",
      "side": 1,
      "message": "This isn\u0027t a context for the private key. It\u0027s specifically for the symmetric key encapsulated in |enc|.",
      "range": {
        "startLine": 116,
        "startChar": 3,
        "endLine": 116,
        "endChar": 45
      },
      "revId": "fdc8893c2d36ea543f7b33186ef6f092927d1c5e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d204830f_559fbe19",
        "filename": "crypto/hpke/internal.h",
        "patchSetId": 3
      },
      "lineNbr": 116,
      "author": {
        "id": 9581
      },
      "writtenOn": "2020-05-29T22:53:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6d31a155_5d5670ac",
      "range": {
        "startLine": 116,
        "startChar": 3,
        "endLine": 116,
        "endChar": 45
      },
      "revId": "fdc8893c2d36ea543f7b33186ef6f092927d1c5e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b1e10b1_2e6193be",
        "filename": "crypto/hpke/internal.h",
        "patchSetId": 3
      },
      "lineNbr": 135,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-05-20T21:07:39Z",
      "side": 1,
      "message": "https://boringssl.googlesource.com/boringssl/+/HEAD/STYLE.md#parameters\n\nI might also s/ct/in/ to match EVP_AEAD_CTX_open.",
      "range": {
        "startLine": 134,
        "startChar": 22,
        "endLine": 135,
        "endChar": 71
      },
      "revId": "fdc8893c2d36ea543f7b33186ef6f092927d1c5e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af597b86_298496ce",
        "filename": "crypto/hpke/internal.h",
        "patchSetId": 3
      },
      "lineNbr": 135,
      "author": {
        "id": 9581
      },
      "writtenOn": "2020-05-29T22:53:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0b1e10b1_2e6193be",
      "range": {
        "startLine": 134,
        "startChar": 22,
        "endLine": 135,
        "endChar": 71
      },
      "revId": "fdc8893c2d36ea543f7b33186ef6f092927d1c5e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    }
  ]
}