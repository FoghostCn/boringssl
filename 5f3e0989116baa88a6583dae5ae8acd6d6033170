{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1e236c3e_fcba3a1c",
        "filename": "ssl/test/settings_writer.cc",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-08-22T20:16:34Z",
      "side": 1,
      "message": "This desperately needs a comment here about why this hack is needed and when we might make it go away :)",
      "revId": "5f3e0989116baa88a6583dae5ae8acd6d6033170",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c77bc3c_91df37db",
        "filename": "ssl/test/settings_writer.cc",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-08-22T20:17:19Z",
      "side": 1,
      "message": "or at least something so when my future self looks at this I know why this is here ;)",
      "parentUuid": "1e236c3e_fcba3a1c",
      "revId": "5f3e0989116baa88a6583dae5ae8acd6d6033170",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9583c3ba_67293459",
        "filename": "ssl/test/settings_writer.cc",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-08-22T20:27:35Z",
      "side": 1,
      "message": "I mean, for better or worse, it is the usual pattern for making a deleter in C++. ðŸ˜ž\nhttps://source.chromium.org/search?q\u003doperator%5C(%5C)%20file:boringssl%20case:yes\u0026ss\u003dchromium\n\n(There\u0027s actually already a FILE scoper in there, but the amount of fuss it\u0027d take to get it somewhere common is probably not worth just writing it twice.)\n\nThe old version actually made a stateful deleter. It\u0027s a handy shortcut, but it isn\u0027t what we want. I... don\u0027t know why there isn\u0027t a helpful utility in the STL to make one of these. Basically the problem is we need an empty type that, when constructed and then called, calls `fclose`.",
      "parentUuid": "4c77bc3c_91df37db",
      "revId": "5f3e0989116baa88a6583dae5ae8acd6d6033170",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2b9c4513_7c01bcb8",
        "filename": "ssl/test/settings_writer.cc",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-08-22T20:30:43Z",
      "side": 1,
      "message": "bleah, but ok :)",
      "parentUuid": "9583c3ba_67293459",
      "revId": "5f3e0989116baa88a6583dae5ae8acd6d6033170",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "5f3e0989116baa88a6583dae5ae8acd6d6033170",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "5f3e0989116baa88a6583dae5ae8acd6d6033170",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}