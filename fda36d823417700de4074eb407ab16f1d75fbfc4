{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "af7877a5_433d225e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 3414872
      },
      "writtenOn": "2024-06-03T18:44:58Z",
      "side": 1,
      "message": "+ reviewers",
      "revId": "fda36d823417700de4074eb407ab16f1d75fbfc4",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41b4e343_d5f81b57",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5005
      },
      "writtenOn": "2024-06-03T19:18:35Z",
      "side": 1,
      "message": "Please fix the line breaks in the commit message.\n\n(Apart from `new`, this is already possible via existing trait impls, although I can see the argument that the names aren\u0027t as ideal.)",
      "revId": "fda36d823417700de4074eb407ab16f1d75fbfc4",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e87f7e5_c7a9d9da",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 3414872
      },
      "writtenOn": "2024-06-03T22:28:49Z",
      "side": 1,
      "message": "Fixed the line breaks!\n\nAlso -- that is fair, however I do think having methods named explicitly `update` and `digest` on the `Algorithm` trait makes usage cleaner and easier than having people figure out methods like, e.g., `into` do the same thing. \nI think this also lets people use the `Algorithm` more like the `Hasher` (for a specific algorithm, via `MessageDigest`) in rust openssl.",
      "parentUuid": "41b4e343_d5f81b57",
      "revId": "fda36d823417700de4074eb407ab16f1d75fbfc4",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "646f3ca6_0426109d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5005
      },
      "writtenOn": "2024-06-03T23:22:48Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "0e87f7e5_c7a9d9da",
      "revId": "fda36d823417700de4074eb407ab16f1d75fbfc4",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62572c74_4d60e6f2",
        "filename": "rust/bssl-crypto/src/digest.rs",
        "patchSetId": 4
      },
      "lineNbr": 49,
      "author": {
        "id": 5005
      },
      "writtenOn": "2024-06-03T19:18:35Z",
      "side": 1,
      "message": "The output size is often not a multiple of the block len and the concrete values used below are wrong. Did you want the block length? If so, comment and name are incorrect.",
      "revId": "fda36d823417700de4074eb407ab16f1d75fbfc4",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d997e1ab_f1deb315",
        "filename": "rust/bssl-crypto/src/digest.rs",
        "patchSetId": 4
      },
      "lineNbr": 49,
      "author": {
        "id": 3414872
      },
      "writtenOn": "2024-06-03T22:28:49Z",
      "side": 1,
      "message": "Yes, I did mean block length, sorry! Names and comment updated.",
      "parentUuid": "62572c74_4d60e6f2",
      "revId": "fda36d823417700de4074eb407ab16f1d75fbfc4",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9f06447_12fa880c",
        "filename": "rust/bssl-crypto/src/digest.rs",
        "patchSetId": 4
      },
      "lineNbr": 59,
      "author": {
        "id": 5005
      },
      "writtenOn": "2024-06-03T19:18:35Z",
      "side": 1,
      "message": "Are you in a non-std context? (The hash functions already implement `Write` if `std` is available, although I don\u0027t have a particular problem with also implementing `update` here.",
      "revId": "fda36d823417700de4074eb407ab16f1d75fbfc4",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a346570_ed35bb7d",
        "filename": "rust/bssl-crypto/src/digest.rs",
        "patchSetId": 4
      },
      "lineNbr": 59,
      "author": {
        "id": 3414872
      },
      "writtenOn": "2024-06-03T22:28:49Z",
      "side": 1,
      "message": "Oh, no I\u0027m not in a non-std context (I didn\u0027t realize this)! I think it would be good to have `update` here though, to be able to more closely match the hashing algorithm usage in rust-openssl. \n\nAlso, eventually we plan to support running this on baremetal so I think it would be good to not rely on std.",
      "parentUuid": "f9f06447_12fa880c",
      "revId": "fda36d823417700de4074eb407ab16f1d75fbfc4",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bbe0ae54_fd461e0d",
        "filename": "rust/bssl-crypto/src/digest.rs",
        "patchSetId": 4
      },
      "lineNbr": 59,
      "author": {
        "id": 5005
      },
      "writtenOn": "2024-06-03T23:22:48Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "8a346570_ed35bb7d",
      "revId": "fda36d823417700de4074eb407ab16f1d75fbfc4",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51da77ce_64a4f265",
        "filename": "rust/bssl-crypto/src/digest.rs",
        "patchSetId": 4
      },
      "lineNbr": 64,
      "author": {
        "id": 5005
      },
      "writtenOn": "2024-06-03T19:18:35Z",
      "side": 1,
      "message": "`new` should come above `update`. (Here and in `macros.rs`.)",
      "revId": "fda36d823417700de4074eb407ab16f1d75fbfc4",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "929be017_155e5da2",
        "filename": "rust/bssl-crypto/src/digest.rs",
        "patchSetId": 4
      },
      "lineNbr": 64,
      "author": {
        "id": 3414872
      },
      "writtenOn": "2024-06-03T22:28:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "51da77ce_64a4f265",
      "revId": "fda36d823417700de4074eb407ab16f1d75fbfc4",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dae3079e_83c0909c",
        "filename": "rust/bssl-crypto/src/digest.rs",
        "patchSetId": 4
      },
      "lineNbr": 71,
      "author": {
        "id": 5005
      },
      "writtenOn": "2024-06-03T19:18:35Z",
      "side": 1,
      "message": "`ArraySizedAlgorithm` is a weird name. `WithOutputLength`?\n\n(Also, this duplicates the `From` impl. Although I can see that `digest` is a clearer name than `into`.)",
      "range": {
        "startLine": 71,
        "startChar": 10,
        "endLine": 71,
        "endChar": 29
      },
      "revId": "fda36d823417700de4074eb407ab16f1d75fbfc4",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af6c6492_8ac69a14",
        "filename": "rust/bssl-crypto/src/digest.rs",
        "patchSetId": 4
      },
      "lineNbr": 71,
      "author": {
        "id": 3414872
      },
      "writtenOn": "2024-06-03T22:28:49Z",
      "side": 1,
      "message": "Ah thanks, that is a much better name. \nAlso -- that\u0027s true about `into` and `digest` being the same. I wanted to have this method be called `digest` to keep it more consistent with the `Algorithm` `digest_to_vec`; we could alternatively call it `finish` (and `finish_to_vec`) to match the corresponding method in the rust-openssl `Hasher`. \nDo you think it\u0027s ok to keep both `into` and `digest`?",
      "parentUuid": "dae3079e_83c0909c",
      "range": {
        "startLine": 71,
        "startChar": 10,
        "endLine": 71,
        "endChar": 29
      },
      "revId": "fda36d823417700de4074eb407ab16f1d75fbfc4",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0ba2aec1_bd5425c7",
        "filename": "rust/bssl-crypto/src/digest.rs",
        "patchSetId": 4
      },
      "lineNbr": 71,
      "author": {
        "id": 5005
      },
      "writtenOn": "2024-06-03T23:22:48Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "af6c6492_8ac69a14",
      "range": {
        "startLine": 71,
        "startChar": 10,
        "endLine": 71,
        "endChar": 29
      },
      "revId": "fda36d823417700de4074eb407ab16f1d75fbfc4",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aee83131_1dd3608f",
        "filename": "rust/bssl-crypto/src/rsa.rs",
        "patchSetId": 4
      },
      "lineNbr": 69,
      "author": {
        "id": 5005
      },
      "writtenOn": "2024-06-03T19:18:35Z",
      "side": 1,
      "message": "unrelated?",
      "revId": "fda36d823417700de4074eb407ab16f1d75fbfc4",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0c9f97b4_7f36ab2d",
        "filename": "rust/bssl-crypto/src/rsa.rs",
        "patchSetId": 4
      },
      "lineNbr": 69,
      "author": {
        "id": 3414872
      },
      "writtenOn": "2024-06-03T22:28:49Z",
      "side": 1,
      "message": "This change is because there is a struct that has a `PublicKey` as a field, and that derives `Debug`. I can put this in another CL though, since it\u0027s not part of the other changes here.",
      "parentUuid": "aee83131_1dd3608f",
      "revId": "fda36d823417700de4074eb407ab16f1d75fbfc4",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    }
  ]
}