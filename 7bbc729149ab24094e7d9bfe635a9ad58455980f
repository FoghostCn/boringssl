{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d56836f7_f7b2bfd5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-06-22T15:17:07Z",
      "side": 1,
      "message": "This doesn\u0027t seem right. Are you sure this is the build you want to be using? It has a Go and Perl dependency, and generally is only tested by BoringSSL developers. We generate some CMake builds in generate_build_files.py that may be more suitable.\n\n(This is a mess and I\u0027m trying to unify things, but in the meantime, that\u0027s probably the right entrypoint for you all. Having yet another novel CMake build will probably make cleaning this up harder.)",
      "revId": "7bbc729149ab24094e7d9bfe635a9ad58455980f",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10c68afe_7b27e233",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-06-22T15:19:50Z",
      "side": 1,
      "message": "Additionally, why is this proposing to introduce yet another build for Android? Have you worked with the Android build to find something on the Android side that meets your needs?",
      "parentUuid": "d56836f7_f7b2bfd5",
      "revId": "7bbc729149ab24094e7d9bfe635a9ad58455980f",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53897f9a_dd5170be",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 9619
      },
      "writtenOn": "2023-06-22T15:37:02Z",
      "side": 1,
      "message": "My (possibly incorrect) understanding from the AOSP CL is they want to build libbinder for not-Android *and* also support different toolchains.\n\nI think that\u0027s two requirements... libbinder should already build for Linux hosts using Soong, and if not it should be fixed.\n\nIf people want to build with their own toolchain though then it\u0027s reasonable to ask them to use BoringSSL directly from upstream, not AOSP\u0027s copy.  And that builds fine on platforms without googletest for me.",
      "parentUuid": "10c68afe_7b27e233",
      "revId": "7bbc729149ab24094e7d9bfe635a9ad58455980f",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f54cb3e0_5c63d603",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 16411
      },
      "writtenOn": "2023-06-22T16:11:31Z",
      "side": 1,
      "message": "We want libbinder to be able to build with CMake straight from Android checkout for testing-on-CI purposes (because AOSP is the upstream for libbinder), but the problem is that Android\u0027s fork of BoringSSL strips GTest sources. All it takes to make it actually work for us is to point this build file to the correct location where GTest is.\n\nHow about https://boringssl-review.googlesource.com/c/boringssl/+/61025",
      "parentUuid": "10c68afe_7b27e233",
      "revId": "7bbc729149ab24094e7d9bfe635a9ad58455980f",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0dd94fc3_52fd3855",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 16412
      },
      "writtenOn": "2023-06-22T21:05:39Z",
      "side": 1,
      "message": "That also work, but since we don\u0027t really care about tests, why do we even build them? It is not uncommon for the CMake rules to have switches to disable this and that.",
      "parentUuid": "f54cb3e0_5c63d603",
      "revId": "7bbc729149ab24094e7d9bfe635a9ad58455980f",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f6abe4a_eeae8c45",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 16411
      },
      "writtenOn": "2023-06-22T21:21:46Z",
      "side": 1,
      "message": "Well, there\u0027s a couple benefits:\n- limiting the scope of changes needed for BoringSSL (that\u0027s the main one for us)\n- configuration of out-of-tree GTest may be useful for other users and is also a common practice\n- Building tests may still catch some problems even if we don\u0027t use them\n\nTL;DR: I think CL 61025 may be just less controversial for Pete and David. Let\u0027s hear from them.",
      "parentUuid": "0dd94fc3_52fd3855",
      "revId": "7bbc729149ab24094e7d9bfe635a9ad58455980f",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9e31472_db799d06",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-06-22T22:23:17Z",
      "side": 1,
      "message": "I think my questions above are still outstanding.\n\n1. There\u0027s already not one, but *two* other generated CMake builds that align more with downstream needs. Why aren\u0027t you all using one of those?\n\n2. Have you worked with the Android build team to figure out how to get the Android-supported build system working with the Android copy of BoringSSL?\n\nThis CMake is intended to be used with a normal BoringSSL checkout. The CL seems to propose to add yet another mode to its scope. Our build situation is already very complex and we have too many variations to support, as we go and clean this up. We should not add a new build variation to our maintenance burden, unless the existing ones truly do not work. So far, there has been no answer to pointers to other options.\n\nThis CL didn\u0027t linked to the bug, but I see there was a similar comment from Android over in b/285204695#comment13",
      "parentUuid": "1f6abe4a_eeae8c45",
      "revId": "7bbc729149ab24094e7d9bfe635a9ad58455980f",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bbdffd6e_d7a32f3d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-06-22T15:17:07Z",
      "side": 1,
      "message": "Do you have a bug for this?\n\n(The syntax for referencing b/123456 in this repo is `Bug: b:123456`. Not sure if it actually works, but I think that\u0027s what bugdroid expects. ðŸ˜Š)",
      "range": {
        "startLine": 19,
        "startChar": 5,
        "endLine": 19,
        "endChar": 8
      },
      "revId": "7bbc729149ab24094e7d9bfe635a9ad58455980f",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7cb6bde_2a542ed7",
        "filename": "CMakeLists.txt",
        "patchSetId": 2
      },
      "lineNbr": 510,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-06-22T15:17:07Z",
      "side": 1,
      "message": "Please match the surrounding style. No space after the name of the CMake function, and two space indent.\n\nDitto throughout the CL.",
      "revId": "7bbc729149ab24094e7d9bfe635a9ad58455980f",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    }
  ]
}