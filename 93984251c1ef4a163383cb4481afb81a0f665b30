{
  "comments": [
    {
      "key": {
        "uuid": "635d1d0f_725927d6",
        "filename": "include/openssl/ssl.h",
        "patchSetId": 6
      },
      "lineNbr": 4601,
      "author": {
        "id": 5415
      },
      "writtenOn": "2018-06-01T22:58:38Z",
      "side": 1,
      "message": "Maybe omit this if we\u0027re not going to do the sorting thing.",
      "range": {
        "startLine": 4601,
        "startChar": 21,
        "endLine": 4601,
        "endChar": 63
      },
      "revId": "93984251c1ef4a163383cb4481afb81a0f665b30",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e76d2674_f80554a3",
        "filename": "include/openssl/ssl.h",
        "patchSetId": 6
      },
      "lineNbr": 4601,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-06-04T21:10:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "635d1d0f_725927d6",
      "range": {
        "startLine": 4601,
        "startChar": 21,
        "endLine": 4601,
        "endChar": 63
      },
      "revId": "93984251c1ef4a163383cb4481afb81a0f665b30",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "94b5960e_fd77a7c2",
        "filename": "include/openssl/ssl3.h",
        "patchSetId": 6
      },
      "lineNbr": 314,
      "author": {
        "id": 5415
      },
      "writtenOn": "2018-06-01T22:58:38Z",
      "side": 1,
      "message": "(This is now allocated too.)",
      "range": {
        "startLine": 314,
        "startChar": 42,
        "endLine": 314,
        "endChar": 77
      },
      "revId": "93984251c1ef4a163383cb4481afb81a0f665b30",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b63842cb_b7998d7a",
        "filename": "include/openssl/ssl3.h",
        "patchSetId": 6
      },
      "lineNbr": 314,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-06-04T21:10:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "94b5960e_fd77a7c2",
      "range": {
        "startLine": 314,
        "startChar": 42,
        "endLine": 314,
        "endChar": 77
      },
      "revId": "93984251c1ef4a163383cb4481afb81a0f665b30",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9449d1b9_690350ee",
        "filename": "include/openssl/tls1.h",
        "patchSetId": 6
      },
      "lineNbr": 241,
      "author": {
        "id": 5415
      },
      "writtenOn": "2018-06-01T22:58:38Z",
      "side": 1,
      "message": "After much drama, we finally have 27!",
      "range": {
        "startLine": 241,
        "startChar": 37,
        "endLine": 241,
        "endChar": 42
      },
      "revId": "93984251c1ef4a163383cb4481afb81a0f665b30",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95e81a5b_5f3b48a3",
        "filename": "include/openssl/tls1.h",
        "patchSetId": 6
      },
      "lineNbr": 241,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-06-04T21:10:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9449d1b9_690350ee",
      "range": {
        "startLine": 241,
        "startChar": 37,
        "endLine": 241,
        "endChar": 42
      },
      "revId": "93984251c1ef4a163383cb4481afb81a0f665b30",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db090412_617cb874",
        "filename": "ssl/test/runner/handshake_client.go",
        "patchSetId": 6
      },
      "lineNbr": 166,
      "author": {
        "id": 5415
      },
      "writtenOn": "2018-06-01T22:58:38Z",
      "side": 1,
      "message": "(No longer needed to be sorted here.)",
      "revId": "93984251c1ef4a163383cb4481afb81a0f665b30",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93dfbe1c_3d13ffac",
        "filename": "ssl/test/runner/handshake_client.go",
        "patchSetId": 6
      },
      "lineNbr": 166,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-06-04T21:10:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "db090412_617cb874",
      "revId": "93984251c1ef4a163383cb4481afb81a0f665b30",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8fffd69a_b5e79f70",
        "filename": "ssl/test/runner/handshake_client.go",
        "patchSetId": 6
      },
      "lineNbr": 891,
      "author": {
        "id": 5415
      },
      "writtenOn": "2018-06-01T22:58:38Z",
      "side": 1,
      "message": "This function only runs in TLS 1.3 anynway.",
      "revId": "93984251c1ef4a163383cb4481afb81a0f665b30",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "051faa61_59d0decf",
        "filename": "ssl/test/runner/handshake_client.go",
        "patchSetId": 6
      },
      "lineNbr": 891,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-06-04T21:10:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8fffd69a_b5e79f70",
      "revId": "93984251c1ef4a163383cb4481afb81a0f665b30",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf6af0c6_54d4805e",
        "filename": "ssl/tls13_both.cc",
        "patchSetId": 6
      },
      "lineNbr": 354,
      "author": {
        "id": 5415
      },
      "writtenOn": "2018-06-01T22:58:38Z",
      "side": 1,
      "message": "Aside: it would actually be very little code to make sending compressed client certificates work too. CertificateRequest parsing in TLS 1.3 just needs to process the same extension. But do we can do that separately.",
      "revId": "93984251c1ef4a163383cb4481afb81a0f665b30",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "49f2824c_164a425d",
        "filename": "ssl/tls13_both.cc",
        "patchSetId": 6
      },
      "lineNbr": 354,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-06-04T21:10:05Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "bf6af0c6_54d4805e",
      "revId": "93984251c1ef4a163383cb4481afb81a0f665b30",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e9e9dee1_1821081a",
        "filename": "ssl/tls13_both.cc",
        "patchSetId": 6
      },
      "lineNbr": 440,
      "author": {
        "id": 5415
      },
      "writtenOn": "2018-06-01T22:58:38Z",
      "side": 1,
      "message": "CBBFinishArray\n\n(In TLS, finish_message is just CBBFinishArray, but in DTLS it fixes up the annoying duplicate length prefixes in the header, so it should be paired with init_message.)",
      "range": {
        "startLine": 440,
        "startChar": 7,
        "endLine": 440,
        "endChar": 41
      },
      "revId": "93984251c1ef4a163383cb4481afb81a0f665b30",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd9f507d_ad686275",
        "filename": "ssl/tls13_both.cc",
        "patchSetId": 6
      },
      "lineNbr": 440,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-06-04T21:10:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e9e9dee1_1821081a",
      "range": {
        "startLine": 440,
        "startChar": 7,
        "endLine": 440,
        "endChar": 41
      },
      "revId": "93984251c1ef4a163383cb4481afb81a0f665b30",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    }
  ]
}