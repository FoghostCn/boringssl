{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d9b04171_3dd83540",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 9581
      },
      "writtenOn": "2021-03-17T16:17:26Z",
      "side": 1,
      "message": "New patchset, PTAL!",
      "revId": "0c90efcf9c05ca928f6c2af50703122e3bbd958a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11094cd4_5628be4f",
        "filename": "ssl/encrypted_client_hello.cc",
        "patchSetId": 19
      },
      "lineNbr": 22,
      "author": {
        "id": 5415
      },
      "writtenOn": "2021-03-17T23:30:45Z",
      "side": 1,
      "message": "Two blank lines after includes.",
      "revId": "0c90efcf9c05ca928f6c2af50703122e3bbd958a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "18489e66_d386154f",
        "filename": "ssl/encrypted_client_hello.cc",
        "patchSetId": 19
      },
      "lineNbr": 22,
      "author": {
        "id": 9581
      },
      "writtenOn": "2021-03-18T20:56:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "11094cd4_5628be4f",
      "revId": "0c90efcf9c05ca928f6c2af50703122e3bbd958a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e0ef873_71523338",
        "filename": "ssl/encrypted_client_hello.cc",
        "patchSetId": 19
      },
      "lineNbr": 324,
      "author": {
        "id": 5415
      },
      "writtenOn": "2021-03-17T23:30:45Z",
      "side": 1,
      "message": "So the request for a comment here was to discuss the \u0027why\u0027 (catch deployment errors), not \u0027how\u0027 (check we understand every byte). This is still the \u0027how\u0027. Something like:\n\n// Parse the ECHConfig, rejecting all unsupported parameters or extensions. Unlike most server options, ECH\u0027s server configuration is serialized and configured in both the server and DNS. If the caller configures an unsupported parameter, this is a deployment error. We fail early to catch this error.",
      "revId": "0c90efcf9c05ca928f6c2af50703122e3bbd958a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15e5601c_d9ed5221",
        "filename": "ssl/encrypted_client_hello.cc",
        "patchSetId": 19
      },
      "lineNbr": 324,
      "author": {
        "id": 9581
      },
      "writtenOn": "2021-03-18T20:56:12Z",
      "side": 1,
      "message": "Ah, thanks. Ripped your comment mostly word-for-word. The phrasing of \"We fail early to catch this error\" tripped up my English parser, so I inverted it. (At first glance I thought it meant to say \"We fail to catch this error early.\")",
      "parentUuid": "9e0ef873_71523338",
      "revId": "0c90efcf9c05ca928f6c2af50703122e3bbd958a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23bafa77_3545dbb1",
        "filename": "ssl/encrypted_client_hello.cc",
        "patchSetId": 19
      },
      "lineNbr": 342,
      "author": {
        "id": 5415
      },
      "writtenOn": "2021-03-17T23:30:45Z",
      "side": 1,
      "message": "CBS_len(\u0026reader) !\u003d 0\n\n(See comment on header.)",
      "revId": "0c90efcf9c05ca928f6c2af50703122e3bbd958a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "90743926_73ce96f7",
        "filename": "ssl/encrypted_client_hello.cc",
        "patchSetId": 19
      },
      "lineNbr": 342,
      "author": {
        "id": 9581
      },
      "writtenOn": "2021-03-18T20:56:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "23bafa77_3545dbb1",
      "revId": "0c90efcf9c05ca928f6c2af50703122e3bbd958a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ad8e8be_fc474689",
        "filename": "ssl/encrypted_client_hello.cc",
        "patchSetId": 19
      },
      "lineNbr": 353,
      "author": {
        "id": 5415
      },
      "writtenOn": "2021-03-17T23:30:45Z",
      "side": 1,
      "message": "Nit: With the overall explanatory comment above, I think this can simply be:\n\n// We do not support any ECHConfig extensions, so |extensions| must be empty.",
      "revId": "0c90efcf9c05ca928f6c2af50703122e3bbd958a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "39f1a72c_c956cad1",
        "filename": "ssl/encrypted_client_hello.cc",
        "patchSetId": 19
      },
      "lineNbr": 353,
      "author": {
        "id": 9581
      },
      "writtenOn": "2021-03-18T20:56:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8ad8e8be_fc474689",
      "revId": "0c90efcf9c05ca928f6c2af50703122e3bbd958a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b62d82a_67a41386",
        "filename": "ssl/encrypted_client_hello.cc",
        "patchSetId": 19
      },
      "lineNbr": 391,
      "author": {
        "id": 5415
      },
      "writtenOn": "2021-03-17T23:30:45Z",
      "side": 1,
      "message": "This is EVP_sha256(). No point going through this function or checking for null.",
      "range": {
        "startLine": 391,
        "startChar": 16,
        "endLine": 391,
        "endChar": 20
      },
      "revId": "0c90efcf9c05ca928f6c2af50703122e3bbd958a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f97bc3e6_f390d4e3",
        "filename": "ssl/encrypted_client_hello.cc",
        "patchSetId": 19
      },
      "lineNbr": 391,
      "author": {
        "id": 9581
      },
      "writtenOn": "2021-03-18T20:56:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8b62d82a_67a41386",
      "range": {
        "startLine": 391,
        "startChar": 16,
        "endLine": 391,
        "endChar": 20
      },
      "revId": "0c90efcf9c05ca928f6c2af50703122e3bbd958a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca3c6607_c0129706",
        "filename": "ssl/encrypted_client_hello.cc",
        "patchSetId": 19
      },
      "lineNbr": 399,
      "author": {
        "id": 5415
      },
      "writtenOn": "2021-03-17T23:30:45Z",
      "side": 1,
      "message": "Nit: I think we can just remove this. :-)",
      "revId": "0c90efcf9c05ca928f6c2af50703122e3bbd958a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d4515d82_7f5b297b",
        "filename": "ssl/encrypted_client_hello.cc",
        "patchSetId": 19
      },
      "lineNbr": 399,
      "author": {
        "id": 9581
      },
      "writtenOn": "2021-03-18T20:56:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ca3c6607_c0129706",
      "revId": "0c90efcf9c05ca928f6c2af50703122e3bbd958a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba73d314_b3cf0a38",
        "filename": "ssl/handshake_server.cc",
        "patchSetId": 19
      },
      "lineNbr": 617,
      "author": {
        "id": 9581
      },
      "writtenOn": "2021-03-17T16:17:26Z",
      "side": 1,
      "message": "There\u0027s not much point in freeing this early, since the SSL_CTX outlives the handshake, right? I suppose if the SSL_CTX\u0027s configs were replaced and |hs| were the remaining owner, it could save some memory. There\u0027s probably a multiple orders-of-magnitude difference between key rotation frequency and SSL_HANDSHAKE malloc/free frequency, though. WDYT?",
      "range": {
        "startLine": 617,
        "startChar": 6,
        "endLine": 617,
        "endChar": 32
      },
      "revId": "0c90efcf9c05ca928f6c2af50703122e3bbd958a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "712697a2_621b904c",
        "filename": "ssl/handshake_server.cc",
        "patchSetId": 19
      },
      "lineNbr": 617,
      "author": {
        "id": 5415
      },
      "writtenOn": "2021-03-17T23:30:45Z",
      "side": 1,
      "message": "Yeah, I wouldn\u0027t worry about it. Even freeing ech_client_hello_buf isn\u0027t *really* important. It just seemed appropriate given the way the GetClientHello() accessor worked.",
      "parentUuid": "ba73d314_b3cf0a38",
      "range": {
        "startLine": 617,
        "startChar": 6,
        "endLine": 617,
        "endChar": 32
      },
      "revId": "0c90efcf9c05ca928f6c2af50703122e3bbd958a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70219b32_0c5c2721",
        "filename": "ssl/internal.h",
        "patchSetId": 19
      },
      "lineNbr": 1577,
      "author": {
        "id": 5415
      },
      "writtenOn": "2021-03-17T23:30:45Z",
      "side": 1,
      "message": "(I forget C++\u0027s rules. Do you need to list these explicitly? I would think the defaults work out.)",
      "revId": "0c90efcf9c05ca928f6c2af50703122e3bbd958a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fd7961ac_7b21e668",
        "filename": "ssl/internal.h",
        "patchSetId": 19
      },
      "lineNbr": 1577,
      "author": {
        "id": 9581
      },
      "writtenOn": "2021-03-18T20:56:12Z",
      "side": 1,
      "message": "Chatted offline about Google style guide https://engdoc.corp.google.com/eng/doc/devguide/cpp/styleguide.md?cl\u003dhead#Copyable_Movable_Types\n\nDecided to match the style guide here. It\u0027s optional to explicitly delete copy, so I\u0027m omitting the deletion.",
      "parentUuid": "70219b32_0c5c2721",
      "revId": "0c90efcf9c05ca928f6c2af50703122e3bbd958a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6094aa37_004115f5",
        "filename": "ssl/internal.h",
        "patchSetId": 19
      },
      "lineNbr": 1580,
      "author": {
        "id": 5415
      },
      "writtenOn": "2021-03-17T23:30:45Z",
      "side": 1,
      "message": "Are these necessary? bssl::Array already will make it non-copyable.",
      "revId": "0c90efcf9c05ca928f6c2af50703122e3bbd958a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "914de4fc_a76ce2e1",
        "filename": "ssl/internal.h",
        "patchSetId": 19
      },
      "lineNbr": 1580,
      "author": {
        "id": 9581
      },
      "writtenOn": "2021-03-18T20:56:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6094aa37_004115f5",
      "revId": "0c90efcf9c05ca928f6c2af50703122e3bbd958a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3f213b1_0ba24a0b",
        "filename": "ssl/internal.h",
        "patchSetId": 19
      },
      "lineNbr": 1582,
      "author": {
        "id": 5415
      },
      "writtenOn": "2021-03-17T23:30:45Z",
      "side": 1,
      "message": "First, some naming:\n\ns/raw/ech_config/g or something. \"raw\" isn\u0027t really meaningful to the Init function. (It reads like it\u0027s the raw serialization of the whole ECHServerConfig.)\n\nWe also usually say private key, not secret key, for asymmetric algorithms. (Compare git grep private.key and git grep secret.key.)\n\nMore importantly, reading *one* ECHConfig out of |raw| will do the wrong thing and silently ignore bugs. It needs to *parse* |raw| as an ECHConfig. I.e., trailing data is forbidden.\n\n// Init initializes the ECHServerConfig with a serialized ECHConfig from |ech_config|, |private_key| as the private key. It returns true on success and false if the configuration was invalid or unsupported.",
      "range": {
        "startLine": 1582,
        "startChar": 10,
        "endLine": 1582,
        "endChar": 29
      },
      "revId": "0c90efcf9c05ca928f6c2af50703122e3bbd958a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6faed574_2f22d28f",
        "filename": "ssl/internal.h",
        "patchSetId": 19
      },
      "lineNbr": 1582,
      "author": {
        "id": 9581
      },
      "writtenOn": "2021-03-18T20:56:12Z",
      "side": 1,
      "message": "Ah, this function was sort of in flux because I shared it between the server and client. For the client it makes sense to take a CBS* reader and read exactly one ECHConfig, but you\u0027re right that the server wants exactly one with no trailing bytes.",
      "parentUuid": "d3f213b1_0ba24a0b",
      "range": {
        "startLine": 1582,
        "startChar": 10,
        "endLine": 1582,
        "endChar": 29
      },
      "revId": "0c90efcf9c05ca928f6c2af50703122e3bbd958a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60422aaf_8516eaba",
        "filename": "ssl/internal.h",
        "patchSetId": 19
      },
      "lineNbr": 1586,
      "author": {
        "id": 5415
      },
      "writtenOn": "2021-03-17T23:30:45Z",
      "side": 1,
      "message": "This is an implementation detail and I don\u0027t think needs to be here, especially since this is an internal header and far from the code that needs a \u0027how\u0027 comment. \"was invalid or unsupported\" above takes care of this.",
      "range": {
        "startLine": 1583,
        "startChar": 49,
        "endLine": 1586,
        "endChar": 75
      },
      "revId": "0c90efcf9c05ca928f6c2af50703122e3bbd958a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e6c31c32_d1f31ba5",
        "filename": "ssl/internal.h",
        "patchSetId": 19
      },
      "lineNbr": 1586,
      "author": {
        "id": 9581
      },
      "writtenOn": "2021-03-18T20:56:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "60422aaf_8516eaba",
      "range": {
        "startLine": 1583,
        "startChar": 49,
        "endLine": 1586,
        "endChar": 75
      },
      "revId": "0c90efcf9c05ca928f6c2af50703122e3bbd958a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1d936ee_155c68bd",
        "filename": "ssl/internal.h",
        "patchSetId": 19
      },
      "lineNbr": 1591,
      "author": {
        "id": 9581
      },
      "writtenOn": "2021-03-17T16:17:26Z",
      "side": 1,
      "message": "Technically we could drop this accessor, as well as |kem_id| and |max_name_length|. If we did that, there\u0027s no reason to keep the fields around either, I suppose. WDYT?",
      "range": {
        "startLine": 1591,
        "startChar": 22,
        "endLine": 1591,
        "endChar": 33
      },
      "revId": "0c90efcf9c05ca928f6c2af50703122e3bbd958a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f839722a_fce059e8",
        "filename": "ssl/internal.h",
        "patchSetId": 19
      },
      "lineNbr": 1591,
      "author": {
        "id": 5415
      },
      "writtenOn": "2021-03-17T23:30:45Z",
      "side": 1,
      "message": "+1 to dropping the unused stuff.",
      "parentUuid": "e1d936ee_155c68bd",
      "range": {
        "startLine": 1591,
        "startChar": 22,
        "endLine": 1591,
        "endChar": 33
      },
      "revId": "0c90efcf9c05ca928f6c2af50703122e3bbd958a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "39f84bc8_602b985c",
        "filename": "ssl/internal.h",
        "patchSetId": 19
      },
      "lineNbr": 1591,
      "author": {
        "id": 9581
      },
      "writtenOn": "2021-03-18T20:56:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f839722a_fce059e8",
      "range": {
        "startLine": 1591,
        "startChar": 22,
        "endLine": 1591,
        "endChar": 33
      },
      "revId": "0c90efcf9c05ca928f6c2af50703122e3bbd958a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7df64a5f_a70b1e61",
        "filename": "ssl/internal.h",
        "patchSetId": 19
      },
      "lineNbr": 1598,
      "author": {
        "id": 5415
      },
      "writtenOn": "2021-03-17T23:30:45Z",
      "side": 1,
      "message": "No need for sizeof. There\u0027s an array-based overload. (In fact you probably don\u0027t even need MakeConstSpan.)\n\nDitto for config_id_sha256() below.",
      "range": {
        "startLine": 1598,
        "startChar": 36,
        "endLine": 1598,
        "endChar": 57
      },
      "revId": "0c90efcf9c05ca928f6c2af50703122e3bbd958a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0fdc0b70_3f0acc64",
        "filename": "ssl/internal.h",
        "patchSetId": 19
      },
      "lineNbr": 1598,
      "author": {
        "id": 9581
      },
      "writtenOn": "2021-03-18T20:56:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7df64a5f_a70b1e61",
      "range": {
        "startLine": 1598,
        "startChar": 36,
        "endLine": 1598,
        "endChar": 57
      },
      "revId": "0c90efcf9c05ca928f6c2af50703122e3bbd958a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6858f78_a70741c6",
        "filename": "ssl/internal.h",
        "patchSetId": 19
      },
      "lineNbr": 1615,
      "author": {
        "id": 5415
      },
      "writtenOn": "2021-03-17T23:30:45Z",
      "side": 1,
      "message": "Rather than making a copy, I think this can be\n\n  Span\u003cconst uint8_t\u003e cipher_suites_;\n\nAnd then you can replace the cipher_suites() accessor with\n\n  bool ECHServerConfig::SupportsCipherSuite(uint16_t kdf_id, uint16_t aead_id) {\n    CBS cbs \u003d cipher_suites_;\n    while (CBS_len(\u0026cbs) !\u003d 0) {\n      uint16_t supported_kdf_id, supported_aead_id\n      if (!CBS_get_u16(\u0026cbs, \u0026supported_kdf_id) ||\n          !CBS_get_u16(\u0026cbs, \u0026supported_aead_id)) {\n        return false;\n      }\n      if (kdf_id \u003d\u003d supported_kdf_id \u0026\u0026 aead_id \u003d\u003d supported_aead_id) {\n        return true;\n      }\n    }\n    return false;\n  }\n\nI suspect this also means we don\u0027t need an ECHCipherSuite type.",
      "revId": "0c90efcf9c05ca928f6c2af50703122e3bbd958a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec162b39_34c58c08",
        "filename": "ssl/internal.h",
        "patchSetId": 19
      },
      "lineNbr": 1615,
      "author": {
        "id": 9581
      },
      "writtenOn": "2021-03-18T20:56:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f6858f78_a70741c6",
      "revId": "0c90efcf9c05ca928f6c2af50703122e3bbd958a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "925cd306_ed955862",
        "filename": "ssl/internal.h",
        "patchSetId": 19
      },
      "lineNbr": 1628,
      "author": {
        "id": 5415
      },
      "writtenOn": "2021-03-17T23:30:45Z",
      "side": 1,
      "message": "This should be a single initialized_ boolean.\n\nWith a server-specific type, we can capture invariants: every server ECH config has all of these fields. And then we have a bit of silliness due to C++\u0027s infallible constructors, so you have the initialized state and the uninitialized state. Thus, only one boolean.\n\n(This is similar to how the HPKE CL used to have a lot of booleans and now we got rid of them. Option types are handy, but only when they match invariants. In this case, this is really an Option\u003cECHServerConfig\u003e.)",
      "revId": "0c90efcf9c05ca928f6c2af50703122e3bbd958a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "da80a6d5_7f0e2d9d",
        "filename": "ssl/internal.h",
        "patchSetId": 19
      },
      "lineNbr": 1628,
      "author": {
        "id": 9581
      },
      "writtenOn": "2021-03-18T20:56:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "925cd306_ed955862",
      "revId": "0c90efcf9c05ca928f6c2af50703122e3bbd958a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "336c3c01_a51c42e6",
        "filename": "ssl/t1_lib.cc",
        "patchSetId": 19
      },
      "lineNbr": 759,
      "author": {
        "id": 9581
      },
      "writtenOn": "2021-03-17T16:17:26Z",
      "side": 1,
      "message": "I realized that as written, this would serialize an empty ECHConfigs value if there are \u003e0 server configs, but none of them are retry configs. This is not allowed per the type definition `ECHConfig ECHConfigs\u003c1..2^16-1\u003e;`. Do you think it\u0027s worth writing a test?",
      "range": {
        "startLine": 758,
        "startChar": 0,
        "endLine": 759,
        "endChar": 53
      },
      "revId": "0c90efcf9c05ca928f6c2af50703122e3bbd958a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d108cf2_c3508968",
        "filename": "ssl/t1_lib.cc",
        "patchSetId": 19
      },
      "lineNbr": 759,
      "author": {
        "id": 5415
      },
      "writtenOn": "2021-03-17T23:30:45Z",
      "side": 1,
      "message": "Oh, there\u0027s a deeper problem here. Completing the handshake without an extension here means you are telling the client to turn ECH off. So this implementation will look like it works, but as soon as you have any key mismatches, clients start leaking secrets. That\u0027s a problem.\n\nInstead, omitting retry configs should be a configuration error. Unfortunately we can\u0027t do it in add, since maybe retry configs will come later. Maybe set1 should check and return an error? (And yes, as this is security-sensitive, it definitely needs a test. Probably in ssl_test.cc. No need for runner here.)",
      "parentUuid": "336c3c01_a51c42e6",
      "range": {
        "startLine": 758,
        "startChar": 0,
        "endLine": 759,
        "endChar": 53
      },
      "revId": "0c90efcf9c05ca928f6c2af50703122e3bbd958a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ce376569_58ff4daf",
        "filename": "ssl/t1_lib.cc",
        "patchSetId": 19
      },
      "lineNbr": 759,
      "author": {
        "id": 9581
      },
      "writtenOn": "2021-03-18T20:56:12Z",
      "side": 1,
      "message": "Excellent point. I\u0027ve updated |SSL_CTX_set1_ech_server_config_list| and added a note here. I figure that function\u0027s prototype comment is not the place to go into this much detail.",
      "parentUuid": "6d108cf2_c3508968",
      "range": {
        "startLine": 758,
        "startChar": 0,
        "endLine": 759,
        "endChar": 53
      },
      "revId": "0c90efcf9c05ca928f6c2af50703122e3bbd958a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d73b44b3_9e3d8d19",
        "filename": "ssl/t1_lib.cc",
        "patchSetId": 19
      },
      "lineNbr": 763,
      "author": {
        "id": 5415
      },
      "writtenOn": "2021-03-17T23:30:45Z",
      "side": 1,
      "message": "We\u0027re not actually using count here. This can just be bool has_retry_config and a break here. But per comment above, this should be moved elsewhere anyway.",
      "revId": "0c90efcf9c05ca928f6c2af50703122e3bbd958a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c0d4dd4c_6aa63dc8",
        "filename": "ssl/t1_lib.cc",
        "patchSetId": 19
      },
      "lineNbr": 763,
      "author": {
        "id": 9581
      },
      "writtenOn": "2021-03-18T20:56:12Z",
      "side": 1,
      "message": "Moved to |SSL_CTX_set1_ech_server_config_list|.",
      "parentUuid": "d73b44b3_9e3d8d19",
      "revId": "0c90efcf9c05ca928f6c2af50703122e3bbd958a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    }
  ]
}