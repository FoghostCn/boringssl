{
  "comments": [
    {
      "key": {
        "uuid": "f1e5f238_88b0b0a6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 5415
      },
      "writtenOn": "2019-01-30T16:35:01Z",
      "side": 1,
      "message": "Nit: This commit message makes it sound like this is changing the default, which it isn\u0027t yet. Maybe add:\n\nFor now, this is off by default and controlled by SSL_set_enforce_rsa_key_usage. This may be set as late as certificate verification so we may start by enforcing it for known roots.",
      "revId": "509bbcd43780de4503c037c26727a80452733f76",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd53c65b_69f180d4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 13,
      "author": {
        "id": 5415
      },
      "writtenOn": "2019-01-30T16:35:01Z",
      "side": 1,
      "message": "Bare numbers in the BoringSSL repo default to crbug.com/boringssl, so this should be chromium:795089",
      "revId": "509bbcd43780de4503c037c26727a80452733f76",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67c577c9_57e74ae0",
        "filename": "include/openssl/ssl.h",
        "patchSetId": 4
      },
      "lineNbr": 3669,
      "author": {
        "id": 5415
      },
      "writtenOn": "2019-01-30T16:35:01Z",
      "side": 1,
      "message": "Nit: the keyUsage extension of RSA leaf certificates\n\nReasoning:\n\n- X.509 styles its extensions as keyUsage rather than key_usage\n\n- We only look at leaf certificates. Intermediate ones should be enforced by the cert verifier. (The cert verifier is the one using those keys, so it should check that the certs match their use.)\n\n- RSA modifies the certificate, not the extension.",
      "revId": "509bbcd43780de4503c037c26727a80452733f76",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1129c558_0ff318fb",
        "filename": "ssl/handshake_client.cc",
        "patchSetId": 4
      },
      "lineNbr": 922,
      "author": {
        "id": 5415
      },
      "writtenOn": "2019-01-30T16:35:01Z",
      "side": 1,
      "message": "Nit: Stray change?",
      "revId": "509bbcd43780de4503c037c26727a80452733f76",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47c64c0a_ba90dca0",
        "filename": "ssl/handshake_client.cc",
        "patchSetId": 4
      },
      "lineNbr": 1241,
      "author": {
        "id": 5415
      },
      "writtenOn": "2019-01-30T16:35:01Z",
      "side": 1,
      "message": "2 space indent. Also let\u0027s move this to the header file right above where ssl_cert_check_key_usage is declared? Then ssl_cert_check_key_usage can take this enum rather than an int. Also it means the callers in other files can use the key_usage_bit_digital_signature constant rather than 0.\n\nMaybe also drop \"bit\" from the names? Saves 4 characters. :-)",
      "revId": "509bbcd43780de4503c037c26727a80452733f76",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "515c5e72_8afac368",
        "filename": "ssl/handshake_client.cc",
        "patchSetId": 4
      },
      "lineNbr": 1258,
      "author": {
        "id": 5415
      },
      "writtenOn": "2019-01-30T16:35:01Z",
      "side": 1,
      "message": "Nit: clang-format (80 chars, space after \u0027if\u0027).",
      "revId": "509bbcd43780de4503c037c26727a80452733f76",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70489bed_eaf612b3",
        "filename": "ssl/handshake_client.cc",
        "patchSetId": 4
      },
      "lineNbr": 1261,
      "author": {
        "id": 5415
      },
      "writtenOn": "2019-01-30T16:35:01Z",
      "side": 1,
      "message": "This is only used in line 1269, so may as well just inline it in. You might also be able to shorten this by doing:\n\n// Check [...]\nCRYPTO_BUFFER *leaf \u003d ...\nCBS leaf_cbs;\nCBS_init(...);\nssl_key_usage_bit_t intended_use \u003d (alg_k \u0026 SSL_kRSA)\n                                       ? key_usage_bit_encipherment\n                                       : key_usage_bit_digital_signature;\nif (ssl-\u003econfig-\u003eenforce_rsa_key_usage ||\n    EVP_PKEY_id(pkey) !\u003d EVP_PKEY_RSA) {\n  if (!ssl_cert_check_key_usage(\u0026leaf_cbs, intended_use)) {\n    return ssl_hs_error;\n  }\n}",
      "revId": "509bbcd43780de4503c037c26727a80452733f76",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa04c7f4_c42955a1",
        "filename": "ssl/handshake_client.cc",
        "patchSetId": 4
      },
      "lineNbr": 1268,
      "author": {
        "id": 5415
      },
      "writtenOn": "2019-01-30T16:35:01Z",
      "side": 1,
      "message": "This comment\u0027s a little out of date now. Perhaps:\n\nCheck the key usage matches the cipher suite. We do this unconditionally for non-RSA certificates. In particular, it\u0027s needed to distinguish ECDH certificates, which we do not support, from ECDSA certificates. Historically, we have not checked RSA key usages, so it is controlled by a flag for now. See https://crbug.com/795089.",
      "revId": "509bbcd43780de4503c037c26727a80452733f76",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8081726_e4cad815",
        "filename": "ssl/internal.h",
        "patchSetId": 4
      },
      "lineNbr": 1194,
      "author": {
        "id": 5415
      },
      "writtenOn": "2019-01-30T16:35:01Z",
      "side": 1,
      "message": "s/digitalSignature/|bit|/\n\nAlso you can probably hit M-q on this paragraph to reflow it. :-)",
      "range": {
        "startLine": 1194,
        "startChar": 24,
        "endLine": 1194,
        "endChar": 40
      },
      "revId": "509bbcd43780de4503c037c26727a80452733f76",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "042c83d1_cacadabf",
        "filename": "ssl/internal.h",
        "patchSetId": 4
      },
      "lineNbr": 2547,
      "author": {
        "id": 5415
      },
      "writtenOn": "2019-01-30T16:35:01Z",
      "side": 1,
      "message": "Nit: keyUsage or key usage",
      "range": {
        "startLine": 2547,
        "startChar": 5,
        "endLine": 2547,
        "endChar": 14
      },
      "revId": "509bbcd43780de4503c037c26727a80452733f76",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2198725d_a96bb355",
        "filename": "ssl/test/runner/runner.go",
        "patchSetId": 4
      },
      "lineNbr": 14139,
      "author": {
        "id": 5415
      },
      "writtenOn": "2019-01-30T16:35:01Z",
      "side": 1,
      "message": "(Not from your CL, but I wonder what that\u0027s doing there. I suspect it can be removed.)",
      "revId": "509bbcd43780de4503c037c26727a80452733f76",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "070deeb0_aa23c7f0",
        "filename": "ssl/test/runner/runner.go",
        "patchSetId": 4
      },
      "lineNbr": 14210,
      "author": {
        "id": 5415
      },
      "writtenOn": "2019-01-30T16:35:01Z",
      "side": 1,
      "message": "Right now the loop kinda only runs at TLS 1.2, which seems mildly silly. :-)\n\nWe can make this work for TLS 1.2 if you add, say, TLS_RSA_WITH_AES_128_CBC_SHA or TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA (depending on which test it is) to the cipher suites.\n\nFor TLS 1.3, you want to skip the TLS_RSA_WITH_* tests (just wrap them in an if) since those don\u0027t have an analog. Then add TLS_AES_128_GCM_SHA256 to the TLS_ECDHE_RSA_* settings.\n\nIt might be clearer if you set up some variables\n\n  dsSuites :\u003d []uint16{\n    TLS_RSA_WITH_AES_128_GCM_SHA256,\n    TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,\n    TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,\n  }\n  encSuites :\u003d []uint16{\n    TLS_RSA_WITH_AES_128_GCM_SHA256\n    TLS_RSA_WITH_AES_128_CBC_SHA,\n  }\n\nNit: If we add TLS 1.3, RSA and ECDHE_RSA aren\u0027t quite the right naming anymore, what if we called them...\n\nRSAKeyUsage-WantEncipherment-GotEncipherment-{ver.name}\nRSAKeyUsage-WantEncipherment-GotSignature-{ver.name}\netc.\n\nWDYT?",
      "revId": "509bbcd43780de4503c037c26727a80452733f76",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ea992a6_46f5cd71",
        "filename": "ssl/test/runner/runner.go",
        "patchSetId": 4
      },
      "lineNbr": 14272,
      "author": {
        "id": 5415
      },
      "writtenOn": "2019-01-30T16:35:01Z",
      "side": 1,
      "message": "If we make this fully combinatorial with the suggestions above, this might be a bit much, so your call how many tests to add here, but it\u0027s probably worth testing:\n\n- If -enforce-rsa-key-usage is off then, in TLS \u003c\u003d 1.2, we don\u0027t enforce.\n- If -enforce-rsa-key-usage is off then, in TLS 1.3, we *do* enforce",
      "range": {
        "startLine": 14272,
        "startChar": 5,
        "endLine": 14272,
        "endChar": 28
      },
      "revId": "509bbcd43780de4503c037c26727a80452733f76",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bfe59777_c4093052",
        "filename": "ssl/tls13_both.cc",
        "patchSetId": 4
      },
      "lineNbr": 215,
      "author": {
        "id": 5415
      },
      "writtenOn": "2019-01-30T16:35:01Z",
      "side": 1,
      "message": "Nit: clang-format (80 chars)",
      "revId": "509bbcd43780de4503c037c26727a80452733f76",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    }
  ]
}