{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "780952b6_5c6301a3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5415
      },
      "writtenOn": "2024-02-26T16:43:48Z",
      "side": 1,
      "message": "libpki not ready for use in Android yet, I don\u0027t think we want to solve the Cronet problem this way, as it will cause all kinds of problems with version skew.\n\nCan you start an email thread with g/boringssl? Let\u0027s see if we can figure out a better way to solve your problem. I suspect you will need to temporarily import libpki as part of Cronet and not part of BoringSSL, to avoid version skew problems.",
      "revId": "ceab5047f7d3afbbb52aa9db168cd240760124a9",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "929dd89a_09601a0b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 3307170
      },
      "writtenOn": "2024-02-27T10:57:30Z",
      "side": 1,
      "message": "Cronet bundles it\u0027s own BoringSSL and hence pki sources - https://cs.android.com/android/platform/superproject/main/+/main:external/cronet/third_party/boringssl/.\n\nThis is separate from the BoringSSL generally available for Android - https://cs.android.com/android/platform/superproject/main/+/main:external/boringssl\n\nI don\u0027t think we would run into any version skew problems.",
      "parentUuid": "780952b6_5c6301a3",
      "revId": "ceab5047f7d3afbbb52aa9db168cd240760124a9",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40a75d2f_9a25f10d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5415
      },
      "writtenOn": "2024-02-27T19:15:21Z",
      "side": 1,
      "message": "Oh interesting. That\u0027s different from what I remember the conclusion being, but I\u0027m probably misremembering. ðŸ˜Š\n\nIs that *exactly* the same revision as Chromium? I thought there was still to be a little version skew. I remember a long discussion and us concluding that you all were going to live with some version skew. (I\u0027ll follow-up with you out-of-band with a link.) That won\u0027t work well with libpki right now. (Once we\u0027ve gotten a proper API boundary between the two, it\u0027ll be a bit less tight.)",
      "parentUuid": "929dd89a_09601a0b",
      "revId": "ceab5047f7d3afbbb52aa9db168cd240760124a9",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "79250ec5_205bd88a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5415
      },
      "writtenOn": "2024-02-27T21:49:40Z",
      "side": 1,
      "message": "From email, sounds like this is fine.",
      "parentUuid": "40a75d2f_9a25f10d",
      "revId": "ceab5047f7d3afbbb52aa9db168cd240760124a9",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "ceab5047f7d3afbbb52aa9db168cd240760124a9",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforcement-satisfied_gerrit"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "ceab5047f7d3afbbb52aa9db168cd240760124a9",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}