{
  "comments": [
    {
      "key": {
        "uuid": "7d6562c3_5a3d75cb",
        "filename": "ssl/s3_both.c",
        "patchSetId": 1
      },
      "lineNbr": 380,
      "author": {
        "id": 5955
      },
      "writtenOn": "2016-07-07T15:23:51Z",
      "side": 1,
      "message": "Comment needs updating?",
      "range": {
        "startLine": 380,
        "startChar": 7,
        "endLine": 380,
        "endChar": 28
      },
      "revId": "0365097bf2f925579278fa8f02de0141be80c7e8",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd26b29b_06373acf",
        "filename": "ssl/s3_both.c",
        "patchSetId": 1
      },
      "lineNbr": 380,
      "author": {
        "id": 5415
      },
      "writtenOn": "2016-07-07T16:51:03Z",
      "side": 1,
      "message": "Hrm? I think it\u0027s still accurate.",
      "parentUuid": "7d6562c3_5a3d75cb",
      "range": {
        "startLine": 380,
        "startChar": 7,
        "endLine": 380,
        "endChar": 28
      },
      "revId": "0365097bf2f925579278fa8f02de0141be80c7e8",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d6562c3_da750569",
        "filename": "ssl/s3_both.c",
        "patchSetId": 1
      },
      "lineNbr": 380,
      "author": {
        "id": 5955
      },
      "writtenOn": "2016-07-07T16:59:06Z",
      "side": 1,
      "message": "Isn\u0027t the previous call the one that actual does the hash_message, and this one doesn\u0027t change the hash?",
      "parentUuid": "fd26b29b_06373acf",
      "range": {
        "startLine": 380,
        "startChar": 7,
        "endLine": 380,
        "endChar": 28
      },
      "revId": "0365097bf2f925579278fa8f02de0141be80c7e8",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd26b29b_e924b1b6",
        "filename": "ssl/s3_both.c",
        "patchSetId": 1
      },
      "lineNbr": 380,
      "author": {
        "id": 5415
      },
      "writtenOn": "2016-07-07T18:48:20Z",
      "side": 1,
      "message": "Right, but the way reuse_message currently works, the next caller believes it is the one to read it and thus hash it. Passing ssl_dont_hash_message means \"I will hash it myself\" and if you\u0027re reading a reuse_message, you can\u0027t hash it yourself because it\u0027s already been hashed. It\u0027s kind of a mess.\n\nDid I mention I hate optional messages? ;-)",
      "parentUuid": "7d6562c3_da750569",
      "range": {
        "startLine": 380,
        "startChar": 7,
        "endLine": 380,
        "endChar": 28
      },
      "revId": "0365097bf2f925579278fa8f02de0141be80c7e8",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d6562c3_fa19e928",
        "filename": "ssl/s3_both.c",
        "patchSetId": 1
      },
      "lineNbr": 380,
      "author": {
        "id": 5955
      },
      "writtenOn": "2016-07-07T18:50:57Z",
      "side": 1,
      "message": "Ugh, alright. Can we not have optional messages in future TLS.",
      "parentUuid": "fd26b29b_e924b1b6",
      "range": {
        "startLine": 380,
        "startChar": 7,
        "endLine": 380,
        "endChar": 28
      },
      "revId": "0365097bf2f925579278fa8f02de0141be80c7e8",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    }
  ]
}