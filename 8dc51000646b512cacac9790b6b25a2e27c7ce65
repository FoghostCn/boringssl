{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e898109b_f5eec285",
        "filename": "crypto/fipsmodule/rsa/rsa.c",
        "patchSetId": 1
      },
      "lineNbr": 536,
      "author": {
        "id": 5415
      },
      "writtenOn": "2022-09-14T00:04:41Z",
      "side": 1,
      "message": "Changing this type to size_t would break existing uses of RSA_METHOD. Given digests are short, doesn\u0027t seem worth wrestling with it. (That time is probably better spent trying to unwind RSA_METHOD.)",
      "range": {
        "startLine": 536,
        "startChar": 45,
        "endLine": 536,
        "endChar": 64
      },
      "revId": "8dc51000646b512cacac9790b6b25a2e27c7ce65",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "541a22a4_53060267",
        "filename": "crypto/fipsmodule/rsa/rsa.c",
        "patchSetId": 1
      },
      "lineNbr": 536,
      "author": {
        "id": 14196
      },
      "writtenOn": "2022-09-14T16:46:18Z",
      "side": 1,
      "message": "Since this is a digest and this can fail should we test length here before casting? (MAX_MD_SIZE, etc.)",
      "parentUuid": "e898109b_f5eec285",
      "range": {
        "startLine": 536,
        "startChar": 45,
        "endLine": 536,
        "endChar": 64
      },
      "revId": "8dc51000646b512cacac9790b6b25a2e27c7ce65",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "292bf8fd_fbc15745",
        "filename": "crypto/fipsmodule/rsa/rsa.c",
        "patchSetId": 1
      },
      "lineNbr": 536,
      "author": {
        "id": 5415
      },
      "writtenOn": "2022-09-22T22:23:59Z",
      "side": 1,
      "message": "Hmm. I guess the question is which side of the RSA/RSA_METHOD divide you believe is \"responsible\" for checking hash_nid/digest_len consistency.\n\nI pulled the hash_nid/digest_len check out of RSA_add_pkcs1_prefix, but then I felt mildly weird imposing opinions on what hash_nids the RSA_METHOD supported. (Not that there\u0027s really any chance of them supporting ones we don\u0027t.) And just checking EVP_MAX_MD_SIZE feels kinda weird. It actually is also imposing an opinion since that max size is based on our currently supported set... at which point we should just check the length matches.\n\nI dunno, preferences? Just checking UINT_MAX is a bit more \"pure\" in terms of the RSA_METHOD just implementing the RSASSA-PKCS1-v1_5 API, but checking is a bit tighter.\n\nReally RSA_METHOD is just a terrible API, but nevermind that. :-) One of these days, it\u0027d be nice to rework or just remove all that stuff. (Chrome used to use it, but we\u0027ve long since stopped.)",
      "parentUuid": "541a22a4_53060267",
      "range": {
        "startLine": 536,
        "startChar": 45,
        "endLine": 536,
        "endChar": 64
      },
      "revId": "8dc51000646b512cacac9790b6b25a2e27c7ce65",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ccd07d9_69cb4445",
        "filename": "crypto/fipsmodule/rsa/rsa.c",
        "patchSetId": 1
      },
      "lineNbr": 536,
      "author": {
        "id": 14196
      },
      "writtenOn": "2022-09-26T15:58:55Z",
      "side": 1,
      "message": "I\u0027m not too picky as long as it\u0027s checked, which makes it more obviously not dangerous in the context. UINT_MAX is fine if we don\u0027t want to tie it to EVP_MAX_MD_SIZE, but as long as we still have a reason to have EVP_MAX_MD_SIZE, I\u0027m perfectly happy with that too, even if it feels a little \"weird\". I\u0027ve always felt a bit weird checking that, but at least at the moment it\u0027s embedded enough in the library that I think we\u0027re more or less depending on imposing that opinion in a number of places.",
      "parentUuid": "292bf8fd_fbc15745",
      "range": {
        "startLine": 536,
        "startChar": 45,
        "endLine": 536,
        "endChar": 64
      },
      "revId": "8dc51000646b512cacac9790b6b25a2e27c7ce65",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9877d64e_9eddc4a4",
        "filename": "crypto/fipsmodule/rsa/rsa.c",
        "patchSetId": 1
      },
      "lineNbr": 536,
      "author": {
        "id": 5415
      },
      "writtenOn": "2022-10-13T21:55:48Z",
      "side": 1,
      "message": "Did the extra strict version.",
      "parentUuid": "8ccd07d9_69cb4445",
      "range": {
        "startLine": 536,
        "startChar": 45,
        "endLine": 536,
        "endChar": 64
      },
      "revId": "8dc51000646b512cacac9790b6b25a2e27c7ce65",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    }
  ]
}