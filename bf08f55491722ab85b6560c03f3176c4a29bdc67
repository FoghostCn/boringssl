{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "38d46a77_5f7615b8",
        "filename": "rust/bssl-crypto/Cargo.lock",
        "patchSetId": 25
      },
      "lineNbr": 1,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-03-14T17:35:57Z",
      "side": 1,
      "message": "This file should not be included.",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 49
      },
      "revId": "bf08f55491722ab85b6560c03f3176c4a29bdc67",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cecb17a3_b3453705",
        "filename": "rust/bssl-crypto/Cargo.lock",
        "patchSetId": 25
      },
      "lineNbr": 1,
      "author": {
        "id": 15751
      },
      "writtenOn": "2023-03-14T17:40:43Z",
      "side": 1,
      "message": "I think it actually should, its what ensures developers are using the same versions of dependencies",
      "parentUuid": "38d46a77_5f7615b8",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 49
      },
      "revId": "bf08f55491722ab85b6560c03f3176c4a29bdc67",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "584072a7_6ceae933",
        "filename": "rust/bssl-crypto/Cargo.lock",
        "patchSetId": 25
      },
      "lineNbr": 1,
      "author": {
        "id": 15751
      },
      "writtenOn": "2023-03-14T17:41:53Z",
      "side": 1,
      "message": "\"it is recommended that all binaries check in their Cargo.lock\" per the cargo book: https://doc.rust-lang.org/cargo/faq.html#why-do-binaries-have-cargolock-in-version-control-but-not-libraries",
      "parentUuid": "cecb17a3_b3453705",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 49
      },
      "revId": "bf08f55491722ab85b6560c03f3176c4a29bdc67",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67c25c2e_9eb33e58",
        "filename": "rust/bssl-crypto/Cargo.lock",
        "patchSetId": 25
      },
      "lineNbr": 1,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-03-14T17:46:15Z",
      "side": 1,
      "message": "this is a library ;)",
      "parentUuid": "584072a7_6ceae933",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 49
      },
      "revId": "bf08f55491722ab85b6560c03f3176c4a29bdc67",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b72eb0a_8add1886",
        "filename": "rust/bssl-crypto/Cargo.lock",
        "patchSetId": 25
      },
      "lineNbr": 1,
      "author": {
        "id": 15791
      },
      "writtenOn": "2023-03-14T17:50:24Z",
      "side": 1,
      "message": "FWIW the fact that the guidance excludes libraries is ... debatable. IMO, libraries should check in Cargo.lock, because otherwise reproducible builds are essentially impossible. It does no harm to _consuming_ the library because dependencies\u0027 Cargo.lock is ignored by cargo (if cargo is used).",
      "parentUuid": "67c25c2e_9eb33e58",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 49
      },
      "revId": "bf08f55491722ab85b6560c03f3176c4a29bdc67",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01a63e02_f72ab6a8",
        "filename": "rust/bssl-crypto/Cargo.lock",
        "patchSetId": 25
      },
      "lineNbr": 1,
      "author": {
        "id": 15751
      },
      "writtenOn": "2023-03-14T17:50:33Z",
      "side": 1,
      "message": "True, I am still unsure though, what is the reason for not checking it in? In that case I think we would also want to add it to the gitignore otherwise someone else will end up checking it in",
      "parentUuid": "67c25c2e_9eb33e58",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 49
      },
      "revId": "bf08f55491722ab85b6560c03f3176c4a29bdc67",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3673680d_82d2e82d",
        "filename": "rust/bssl-crypto/Cargo.lock",
        "patchSetId": 25
      },
      "lineNbr": 1,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-03-14T17:54:59Z",
      "side": 1,
      "message": "Well, I did add it to the .gitignore in https://boringssl-review.googlesource.com/c/boringssl/+/57985, which you voted for. But if we\u0027re in disagreement I\u0027m certainly open to thinking about it.",
      "parentUuid": "01a63e02_f72ab6a8",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 49
      },
      "revId": "bf08f55491722ab85b6560c03f3176c4a29bdc67",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85a3bad6_7b799ccd",
        "filename": "rust/bssl-crypto/Cargo.lock",
        "patchSetId": 25
      },
      "lineNbr": 1,
      "author": {
        "id": 14726
      },
      "writtenOn": "2023-03-14T18:14:18Z",
      "side": 1,
      "message": "Cargo.lock for a library puts restrictions on on dependencies that should all be chosen in a single place - at the final binary.",
      "parentUuid": "3673680d_82d2e82d",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 49
      },
      "revId": "bf08f55491722ab85b6560c03f3176c4a29bdc67",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3887b625_d13ca638",
        "filename": "rust/bssl-crypto/Cargo.lock",
        "patchSetId": 25
      },
      "lineNbr": 1,
      "author": {
        "id": 15791
      },
      "writtenOn": "2023-03-14T18:18:55Z",
      "side": 1,
      "message": "To be clear, I don\u0027t actually care all that much one way or another since the small dep tree is unlikely to cause many problems.\n\nAnyway, it definitely does happen in practice that different people at the same revision might not have matching compile output (e.g. won\u0027t compile for one of them) because they need to run `cargo update`. I\u0027ve seen this on multiple projects.\n\nSimilarly, if you want to be able to compile an old revision just as it was back in the day, `Cargo.lock` must be version controlled.\n\n@danakj can you be more specific about putting restrictions on dependencies? How does that happen when Cargo.lock for dependencies isn\u0027t incorporated into a final binary\u0027s (Cargo) build? Do other toolchains use Cargo.lock?",
      "parentUuid": "85a3bad6_7b799ccd",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 49
      },
      "revId": "bf08f55491722ab85b6560c03f3176c4a29bdc67",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30184b7a_22ef7023",
        "filename": "rust/bssl-crypto/Cargo.lock",
        "patchSetId": 25
      },
      "lineNbr": 1,
      "author": {
        "id": 14726
      },
      "writtenOn": "2023-03-14T18:22:45Z",
      "side": 1,
      "message": "For Chrome we fix the version of all dependencies. We do it by vendoring them all, which is conceptually like us checking in a Cargo.lock (we actually do have one which is part of the generating BUILD.gn files).\n\nChrome wants to pick those versions, we don\u0027t want bssl to force specific versions.\n\n\u003e it definitely does happen in practice that different people at the same revision might not have matching compile output (e.g. won\u0027t compile for one of them) because they need to run cargo update. I\u0027ve seen this on multiple projects.\n\nMaybe it would make sense to lock the versions for building tests. You def want to lock the versions in production executable crates for the reason you state.\n\nMaybe I am wrong that putting the lock in the library crate also fixes versions for downstream, but if it does then if Chrome picks a different version we will fail to run Cargo against our vendored deps + bssl",
      "parentUuid": "3887b625_d13ca638",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 49
      },
      "revId": "bf08f55491722ab85b6560c03f3176c4a29bdc67",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    }
  ]
}