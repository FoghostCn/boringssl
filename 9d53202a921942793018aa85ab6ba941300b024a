{
  "comments": [
    {
      "key": {
        "uuid": "f316958e_e59b9693",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 5075
      },
      "writtenOn": "2014-08-22T21:11:16Z",
      "side": 1,
      "message": "Nit: e",
      "range": {
        "startLine": 12,
        "startChar": 67,
        "endLine": 12,
        "endChar": 68
      },
      "revId": "9d53202a921942793018aa85ab6ba941300b024a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f316958e_4b49d978",
        "filename": "crypto/bytestring/ber.c",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 5075
      },
      "writtenOn": "2014-08-22T21:11:16Z",
      "side": 1,
      "message": "Nit: CBS_ASN1_CONSTRUCTED",
      "range": {
        "startLine": 53,
        "startChar": 14,
        "endLine": 53,
        "endChar": 36
      },
      "revId": "9d53202a921942793018aa85ab6ba941300b024a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f316958e_8b02b1d9",
        "filename": "crypto/bytestring/ber.c",
        "patchSetId": 1
      },
      "lineNbr": 113,
      "author": {
        "id": 5075
      },
      "writtenOn": "2014-08-22T21:11:16Z",
      "side": 1,
      "message": "Nit: CBS_ASN1_CONSTRUCTED",
      "range": {
        "startLine": 113,
        "startChar": 24,
        "endLine": 113,
        "endChar": 28
      },
      "revId": "9d53202a921942793018aa85ab6ba941300b024a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f316958e_2bbd7dc3",
        "filename": "crypto/bytestring/ber.c",
        "patchSetId": 1
      },
      "lineNbr": 118,
      "author": {
        "id": 5075
      },
      "writtenOn": "2014-08-22T21:11:16Z",
      "side": 1,
      "message": "Nit: It\u0027s odd that this block and the one at line 161 look different. (I found the second one clearer since it\u0027s more obvious there\u0027s an output parameter.)",
      "revId": "9d53202a921942793018aa85ab6ba941300b024a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f316958e_8b3c714b",
        "filename": "crypto/bytestring/ber.c",
        "patchSetId": 1
      },
      "lineNbr": 124,
      "author": {
        "id": 5075
      },
      "writtenOn": "2014-08-22T21:11:16Z",
      "side": 1,
      "message": "(Somewhat unfortunate that bytestring_test.c doesn\u0027t include an example of this. I wonder if it\u0027s worth fabricating one. I had to go to pkcs12_test.c in a later CL to understand what this meant.)",
      "revId": "9d53202a921942793018aa85ab6ba941300b024a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f316958e_eb9405ee",
        "filename": "crypto/bytestring/ber.c",
        "patchSetId": 1
      },
      "lineNbr": 132,
      "author": {
        "id": 5075
      },
      "writtenOn": "2014-08-22T21:11:16Z",
      "side": 1,
      "message": "This part is a little odd. If the check fails for some reason, then cbs_convert_ber gets told to squash tags even through we never wrote in a tag.\n\nDoes this work?\n\n  if (!CBS_get_any_asn1_element(...)) {\n    return 0;\n  }\n  if (is_eoc(\u0026contents)) {\n    /* Empty indefinite TLV. Consume the EOC and continue. */\n    *in \u003d in_copy;\n    continue;\n  }\n  /* Rest of logic. */\n\nThis would make us not tolerant to missing EOCs though; see comment on line 188. (I guess if we wanted to be tolerant, we\u0027d want to check for CBS_len(in) \u003d\u003d 0 or something...)\n\n\nThen again, I think the current logic works, so maybe it\u0027s better to leave it as-is?\n- If CBS_get_any_asn1_element failed because CBS_len(in) is empty, we\u0027ll just return from cbs_convert_ber immediately and squash_header won\u0027t make a difference.\n- Otherwise, cbs_convert_ber will fail from calling CBS_get_any_asn1_element again and there won\u0027t be a difference.\n- Otherwise, if it failed because tag \u003d\u003d 0, we\u0027d detect the EOC and squash_headers still doesn\u0027t make a difference.\n- ...unless they gave us tag \u003d\u003d 0, indefinite length. I think that would do something funny? Meh?",
      "revId": "9d53202a921942793018aa85ab6ba941300b024a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f316958e_0ba9a17f",
        "filename": "crypto/bytestring/ber.c",
        "patchSetId": 1
      },
      "lineNbr": 156,
      "author": {
        "id": 5075
      },
      "writtenOn": "2014-08-22T21:11:16Z",
      "side": 1,
      "message": "Nit: This would accept any TLV with tag \u003d\u003d 0 as the EOC, right? Probably add an additional check for header_len \u003d\u003d 2 \u0026\u0026 the length byte being 0. (Or some kind of is_eoc function like in the comment above.)",
      "revId": "9d53202a921942793018aa85ab6ba941300b024a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f316958e_0b1ec152",
        "filename": "crypto/bytestring/ber.c",
        "patchSetId": 1
      },
      "lineNbr": 171,
      "author": {
        "id": 5075
      },
      "writtenOn": "2014-08-22T21:11:16Z",
      "side": 1,
      "message": "Nit: CBS_ASN1_CONSTRUCTED",
      "range": {
        "startLine": 171,
        "startChar": 14,
        "endLine": 171,
        "endChar": 18
      },
      "revId": "9d53202a921942793018aa85ab6ba941300b024a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f316958e_0b9c0119",
        "filename": "crypto/bytestring/ber.c",
        "patchSetId": 1
      },
      "lineNbr": 188,
      "author": {
        "id": 5075
      },
      "writtenOn": "2014-08-22T21:11:16Z",
      "side": 1,
      "message": "If looking_for_eoc is true, should this be a failure. Or perhaps we should err on looseness since this is the craziness parser anyway...",
      "revId": "9d53202a921942793018aa85ab6ba941300b024a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f316958e_2bd1fd69",
        "filename": "crypto/bytestring/cbs.c",
        "patchSetId": 1
      },
      "lineNbr": 231,
      "author": {
        "id": 5075
      },
      "writtenOn": "2014-08-22T21:11:16Z",
      "side": 1,
      "message": "This check seems correct, but it took took me a couple seconds; a priori the 0x80 may be the last byte of a multibyte length. But there\u0027s a CBS_len(out) \u003d\u003d header_len check which makes it either indefinite or length zero, so it works. Maybe worth a comment or a check that header_len \u003d\u003d 2?\n\nIt\u0027s also duplicated in ber.c it seems.",
      "range": {
        "startLine": 231,
        "startChar": 41,
        "endLine": 231,
        "endChar": 55
      },
      "revId": "9d53202a921942793018aa85ab6ba941300b024a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    }
  ]
}