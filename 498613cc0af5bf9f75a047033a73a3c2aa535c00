{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b35b834d_fbb541b5",
        "filename": "include/openssl/x509.h",
        "patchSetId": 2
      },
      "lineNbr": 2973,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-12-11T17:12:35Z",
      "side": 1,
      "message": "```suggestion\n// X509_check_host checks if a Subject Alternative Name, or the Subject CN of |x509| matches the DNS name |chk|. By default wildcards are supported and match only the left-most label, and may match with an explicit prefix or suffix within that label. By default when |chk| starts with a dot, it will be matched by a certificate valid for any subdomain of |chk|. It returns one on match, zero on mismatch, or a negative number on error. |flags| should be\n// some combination of |X509_CHECK_FLAG_*| which can modify the\nabove matching behaviour. \n// On match,\n// if |out_peername| is non-NULL, it additionally sets |*out_peername| to a\n// newly-allocated, NUL-terminated string containing the DNS name or wildcard in\n// the certificate which matched. The caller must then free |*out_peername| with\n// |OPENSSL_free| when done.\n//\n```",
      "range": {
        "startLine": 2966,
        "startChar": 0,
        "endLine": 2973,
        "endChar": 2
      },
      "revId": "498613cc0af5bf9f75a047033a73a3c2aa535c00",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "088ad481_9d017c14",
        "filename": "include/openssl/x509.h",
        "patchSetId": 2
      },
      "lineNbr": 2973,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-12-11T18:15:21Z",
      "side": 1,
      "message": "I didn\u0027t want to explicitly say CN because ideally we\u0027d make `X509_CHECK_FLAG_NEVER_CHECK_SUBJECT` the default someday. I think also, from the perspective of most callers, they only need to know that this checks if |x509| claims to be valid for the DNS name, and how exactly it\u0027s encoded is the library\u0027s problem.\n\nThe one footnote is the library does not do a good job of it right now (and may be stuck doing so for a while). I\u0027ve added a note to a handful of functions directing callers to set the flag for now. Thoughts?",
      "parentUuid": "b35b834d_fbb541b5",
      "range": {
        "startLine": 2966,
        "startChar": 0,
        "endLine": 2973,
        "endChar": 2
      },
      "revId": "498613cc0af5bf9f75a047033a73a3c2aa535c00",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9873df4d_ebde82ed",
        "filename": "include/openssl/x509.h",
        "patchSetId": 2
      },
      "lineNbr": 2973,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-12-11T20:28:56Z",
      "side": 1,
      "message": "The problem I have with \"making it the library\u0027s problem\" and you shouldn\u0027t care, is historically this has been done in a silly way (i.e. the CN being checked) and so people will *inevitably* want to know what\u0027s happening under the covers and will a CN be accepted if they call this or not. \n\nAnd the problem then becomes once you start talking about the CHECK flags\nwhich they have added as knobs to get around all the strange behaviour, you sort of need to know the default behaviour or it\u0027s all hard to follow. \n\ndoes it make sense to just talk about all the CHECK flags in here? \n\nA-la https://man.openbsd.org/X509_check_host\n\n(especially since all the wildcard options are just goofy)",
      "parentUuid": "088ad481_9d017c14",
      "range": {
        "startLine": 2966,
        "startChar": 0,
        "endLine": 2973,
        "endChar": 2
      },
      "revId": "498613cc0af5bf9f75a047033a73a3c2aa535c00",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b519e36c_bcf1762a",
        "filename": "include/openssl/x509.h",
        "patchSetId": 2
      },
      "lineNbr": 2973,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-12-11T20:45:25Z",
      "side": 1,
      "message": "\u003e The problem I have with \"making it the library\u0027s problem\" and you shouldn\u0027t care, is historically this has been done in a silly way (i.e. the CN being checked) and so people will inevitably want to know what\u0027s happening under the covers and will a CN be accepted if they call this or not.\n\nI mean, it\u0027s not just historically silly but currently silly. That\u0027s why I put the TODO marker everywhere. Do you think that\u0027s insufficient? (Pretend we\u0027re in a future where `X509_CHECK_FLAG_NEVER_CHECK_SUBJECT` is up in a documented section already.)\n\nI think once the default is correct, we can just leave it be and people who want the silly thing can find it themselves. (And if they don\u0027t find it and are unable to do the silly thing, all the better!)\n\n\u003e does it make sense to just talk about all the CHECK flags in here?\n\nI mentioned this in the CL description a bit. These APIs are not really functions we expect people to use. I think `X509_VERIFY_PARAM_set1_host` and friends are more likely. So I would rather we put the flags next to there. I just haven\u0027t done that yet, because I haven\u0027t pulled the actual cert verification APIs in their own section. (That\u0027s the next batch.)\n\nWhen we do that, I\u0027m thinking we\u0027ll just put these flags next to `X509_VERIFY_PARAM_set_hostflags` and have pointers.",
      "parentUuid": "9873df4d_ebde82ed",
      "range": {
        "startLine": 2966,
        "startChar": 0,
        "endLine": 2973,
        "endChar": 2
      },
      "revId": "498613cc0af5bf9f75a047033a73a3c2aa535c00",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2ee6b57_2d2fd866",
        "filename": "include/openssl/x509.h",
        "patchSetId": 2
      },
      "lineNbr": 2973,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-12-11T21:13:08Z",
      "side": 1,
      "message": "|I think once the default is correct, we can just leave it be and people who want |the silly thing can find it themselves. (And if they don\u0027t find it and are unable |to do the silly thing, all the better!)\n\nI think the horse is long out of the barn on this one, and if you want to say the default is correct, you have to call out exactly what it is doing that you are claiming is correct. So I think even in a world where we do the correct thing, I think we still need to say here \"Look, this only checks SAN and does not check CN\"",
      "parentUuid": "b519e36c_bcf1762a",
      "range": {
        "startLine": 2966,
        "startChar": 0,
        "endLine": 2973,
        "endChar": 2
      },
      "revId": "498613cc0af5bf9f75a047033a73a3c2aa535c00",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20d2f192_1b6dd378",
        "filename": "include/openssl/x509.h",
        "patchSetId": 2
      },
      "lineNbr": 2973,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-12-11T21:14:25Z",
      "side": 1,
      "message": "Hence why I think we say right now that it does check CN, and just change it to explicitly say it does not check it when we change that default.",
      "parentUuid": "c2ee6b57_2d2fd866",
      "range": {
        "startLine": 2966,
        "startChar": 0,
        "endLine": 2973,
        "endChar": 2
      },
      "revId": "498613cc0af5bf9f75a047033a73a3c2aa535c00",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be0d8dff_476c0102",
        "filename": "include/openssl/x509.h",
        "patchSetId": 2
      },
      "lineNbr": 2973,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-12-11T22:47:50Z",
      "side": 1,
      "message": "That was my thinking with the TODO. :-P Rephrased it a bit. How\u0027s this?",
      "parentUuid": "20d2f192_1b6dd378",
      "range": {
        "startLine": 2966,
        "startChar": 0,
        "endLine": 2973,
        "endChar": 2
      },
      "revId": "498613cc0af5bf9f75a047033a73a3c2aa535c00",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a6e0563d_feffac7a",
        "filename": "include/openssl/x509.h",
        "patchSetId": 2
      },
      "lineNbr": 2973,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-12-12T00:05:59Z",
      "side": 1,
      "message": "Yeah, much better.",
      "parentUuid": "be0d8dff_476c0102",
      "range": {
        "startLine": 2966,
        "startChar": 0,
        "endLine": 2973,
        "endChar": 2
      },
      "revId": "498613cc0af5bf9f75a047033a73a3c2aa535c00",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ee619a4_10b5ee82",
        "filename": "include/openssl/x509.h",
        "patchSetId": 2
      },
      "lineNbr": 2985,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-12-11T17:12:35Z",
      "side": 1,
      "message": "```suggestion\n// X509_check_email checks if A Subject Alternative Name Email Address, or the Subject Email address of |x509| matches the email address |chk|. It returns\n```",
      "range": {
        "startLine": 2985,
        "startChar": 20,
        "endLine": 2985,
        "endChar": 48
      },
      "revId": "498613cc0af5bf9f75a047033a73a3c2aa535c00",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c4cc94c4_4ed8766f",
        "filename": "include/openssl/x509.h",
        "patchSetId": 2
      },
      "lineNbr": 2985,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-12-12T02:39:24Z",
      "side": 1,
      "message": "Marking resolved.",
      "parentUuid": "0ee619a4_10b5ee82",
      "range": {
        "startLine": 2985,
        "startChar": 20,
        "endLine": 2985,
        "endChar": 48
      },
      "revId": "498613cc0af5bf9f75a047033a73a3c2aa535c00",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e69ac829_aca6cef1",
        "filename": "include/openssl/x509.h",
        "patchSetId": 2
      },
      "lineNbr": 2995,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-12-11T20:33:12Z",
      "side": 1,
      "message": "```suggestion\n// WARNING: This function returns 1 for a successful match 0 for a failed match, and -1 if an error occured. \n```",
      "range": {
        "startLine": 2992,
        "startChar": 12,
        "endLine": 2995,
        "endChar": 56
      },
      "revId": "498613cc0af5bf9f75a047033a73a3c2aa535c00",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "724f686c_73b365e2",
        "filename": "include/openssl/x509.h",
        "patchSetId": 2
      },
      "lineNbr": 2995,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-12-11T20:44:16Z",
      "side": 1,
      "message": "Same, changing my mind on this.",
      "parentUuid": "e69ac829_aca6cef1",
      "range": {
        "startLine": 2992,
        "startChar": 12,
        "endLine": 2995,
        "endChar": 56
      },
      "revId": "498613cc0af5bf9f75a047033a73a3c2aa535c00",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "524acc7a_c32f89c1",
        "filename": "include/openssl/x509.h",
        "patchSetId": 2
      },
      "lineNbr": 2999,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-12-11T17:12:35Z",
      "side": 1,
      "message": "```suggestion\n// X509_check_ip checks if a Subject Alternative Name IP address in |x509| matches the IP address |chk|. The IP address\n```",
      "range": {
        "startLine": 2999,
        "startChar": 5,
        "endLine": 2999,
        "endChar": 34
      },
      "revId": "498613cc0af5bf9f75a047033a73a3c2aa535c00",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c7b949e2_21310bfd",
        "filename": "include/openssl/x509.h",
        "patchSetId": 2
      },
      "lineNbr": 2999,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-12-11T22:47:50Z",
      "side": 1,
      "message": "(I think we don\u0027t need to say anything here because there\u0027s nowhere else to put an IP address anyway.)",
      "parentUuid": "524acc7a_c32f89c1",
      "range": {
        "startLine": 2999,
        "startChar": 5,
        "endLine": 2999,
        "endChar": 34
      },
      "revId": "498613cc0af5bf9f75a047033a73a3c2aa535c00",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3cca2149_2aec61bf",
        "filename": "include/openssl/x509.h",
        "patchSetId": 2
      },
      "lineNbr": 3021,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-12-11T20:33:12Z",
      "side": 1,
      "message": "```suggestion\n// WARNING: This function returns 1 for a successful match, 0 for a failed match, and -1 for an error.",
      "range": {
        "startLine": 3018,
        "startChar": 12,
        "endLine": 3021,
        "endChar": 56
      },
      "revId": "498613cc0af5bf9f75a047033a73a3c2aa535c00",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a6098234_1586c7bb",
        "filename": "include/openssl/x509.h",
        "patchSetId": 2
      },
      "lineNbr": 3021,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-12-11T20:44:16Z",
      "side": 1,
      "message": "Nah, changing my mind, thought I had remembered stuff that actually cared to differentiate between an error and a match failure (as a \u0027success\u0027) but I think it\u0027s either gone or not easily findable.",
      "parentUuid": "3cca2149_2aec61bf",
      "range": {
        "startLine": 3018,
        "startChar": 12,
        "endLine": 3021,
        "endChar": 56
      },
      "revId": "498613cc0af5bf9f75a047033a73a3c2aa535c00",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    }
  ]
}