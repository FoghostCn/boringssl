{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b35b834d_fbb541b5",
        "filename": "include/openssl/x509.h",
        "patchSetId": 2
      },
      "lineNbr": 2973,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-12-11T17:12:35Z",
      "side": 1,
      "message": "```suggestion\n// X509_check_host checks if a Subject Alternative Name, or the Subject CN of |x509| matches the DNS name |chk|. By default wildcards are supported and match only the left-most label, and may match with an explicit prefix or suffix within that label. By default when |chk| starts with a dot, it will be matched by a certificate valid for any subdomain of |chk|. It returns one on match, zero on mismatch, or a negative number on error. |flags| should be\n// some combination of |X509_CHECK_FLAG_*| which can modify the\nabove matching behaviour. \n// On match,\n// if |out_peername| is non-NULL, it additionally sets |*out_peername| to a\n// newly-allocated, NUL-terminated string containing the DNS name or wildcard in\n// the certificate which matched. The caller must then free |*out_peername| with\n// |OPENSSL_free| when done.\n//\n```",
      "range": {
        "startLine": 2966,
        "startChar": 0,
        "endLine": 2973,
        "endChar": 2
      },
      "revId": "498613cc0af5bf9f75a047033a73a3c2aa535c00",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "088ad481_9d017c14",
        "filename": "include/openssl/x509.h",
        "patchSetId": 2
      },
      "lineNbr": 2973,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-12-11T18:15:21Z",
      "side": 1,
      "message": "I didn\u0027t want to explicitly say CN because ideally we\u0027d make `X509_CHECK_FLAG_NEVER_CHECK_SUBJECT` the default someday. I think also, from the perspective of most callers, they only need to know that this checks if |x509| claims to be valid for the DNS name, and how exactly it\u0027s encoded is the library\u0027s problem.\n\nThe one footnote is the library does not do a good job of it right now (and may be stuck doing so for a while). I\u0027ve added a note to a handful of functions directing callers to set the flag for now. Thoughts?",
      "parentUuid": "b35b834d_fbb541b5",
      "range": {
        "startLine": 2966,
        "startChar": 0,
        "endLine": 2973,
        "endChar": 2
      },
      "revId": "498613cc0af5bf9f75a047033a73a3c2aa535c00",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9873df4d_ebde82ed",
        "filename": "include/openssl/x509.h",
        "patchSetId": 2
      },
      "lineNbr": 2973,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-12-11T20:28:56Z",
      "side": 1,
      "message": "The problem I have with \"making it the library\u0027s problem\" and you shouldn\u0027t care, is historically this has been done in a silly way (i.e. the CN being checked) and so people will *inevitably* want to know what\u0027s happening under the covers and will a CN be accepted if they call this or not. \n\nAnd the problem then becomes once you start talking about the CHECK flags\nwhich they have added as knobs to get around all the strange behaviour, you sort of need to know the default behaviour or it\u0027s all hard to follow. \n\ndoes it make sense to just talk about all the CHECK flags in here? \n\nA-la https://man.openbsd.org/X509_check_host\n\n(especially since all the wildcard options are just goofy)",
      "parentUuid": "088ad481_9d017c14",
      "range": {
        "startLine": 2966,
        "startChar": 0,
        "endLine": 2973,
        "endChar": 2
      },
      "revId": "498613cc0af5bf9f75a047033a73a3c2aa535c00",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ee619a4_10b5ee82",
        "filename": "include/openssl/x509.h",
        "patchSetId": 2
      },
      "lineNbr": 2985,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-12-11T17:12:35Z",
      "side": 1,
      "message": "```suggestion\n// X509_check_email checks if A Subject Alternative Name Email Address, or the Subject Email address of |x509| matches the email address |chk|. It returns\n```",
      "range": {
        "startLine": 2985,
        "startChar": 20,
        "endLine": 2985,
        "endChar": 48
      },
      "revId": "498613cc0af5bf9f75a047033a73a3c2aa535c00",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e69ac829_aca6cef1",
        "filename": "include/openssl/x509.h",
        "patchSetId": 2
      },
      "lineNbr": 2995,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-12-11T20:33:12Z",
      "side": 1,
      "message": "```suggestion\n// WARNING: This function returns 1 for a successful match 0 for a failed match, and -1 if an error occured. \n```",
      "range": {
        "startLine": 2992,
        "startChar": 12,
        "endLine": 2995,
        "endChar": 56
      },
      "revId": "498613cc0af5bf9f75a047033a73a3c2aa535c00",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "524acc7a_c32f89c1",
        "filename": "include/openssl/x509.h",
        "patchSetId": 2
      },
      "lineNbr": 2999,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-12-11T17:12:35Z",
      "side": 1,
      "message": "```suggestion\n// X509_check_ip checks if a Subject Alternative Name IP address in |x509| matches the IP address |chk|. The IP address\n```",
      "range": {
        "startLine": 2999,
        "startChar": 5,
        "endLine": 2999,
        "endChar": 34
      },
      "revId": "498613cc0af5bf9f75a047033a73a3c2aa535c00",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3cca2149_2aec61bf",
        "filename": "include/openssl/x509.h",
        "patchSetId": 2
      },
      "lineNbr": 3021,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-12-11T20:33:12Z",
      "side": 1,
      "message": "```suggestion\n// WARNING: This function returns 1 for a successful match, 0 for a failed match, and -1 for an error.",
      "range": {
        "startLine": 3018,
        "startChar": 12,
        "endLine": 3021,
        "endChar": 56
      },
      "revId": "498613cc0af5bf9f75a047033a73a3c2aa535c00",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    }
  ]
}