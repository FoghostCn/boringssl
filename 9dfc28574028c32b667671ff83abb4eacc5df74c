{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "77c73608_2ac88d95",
        "filename": "crypto/bio/printf.c",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 14196
      },
      "writtenOn": "2022-03-22T21:31:57Z",
      "side": 0,
      "message": "The only reason we even need to worry about vsnprintf and the complexity here is the desire to save a malloc and splatter it into a stack buffer. Should we consider not bothering and just always allocating to simplify this? It\u0027s 2022, malloc isn\u0027t slow unless we really want it to be.",
      "revId": "9dfc28574028c32b667671ff83abb4eacc5df74c",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97f3fb94_b6ef2a44",
        "filename": "crypto/bio/printf.c",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 5415
      },
      "writtenOn": "2022-03-23T19:46:51Z",
      "side": 0,
      "message": "We occasionally have folks who seem oddly intent on making malloc slow, but yeah we can assume malloc is fast enough for this function\u0027s purposes. :-)\n\nThough, does libc provide a way to measure the size without just calling vsnprintf? Or were you thinking we vsnprintf(NULL, 0, ...) initially and then just always allocate?",
      "parentUuid": "77c73608_2ac88d95",
      "revId": "9dfc28574028c32b667671ff83abb4eacc5df74c",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e903a782_778f4c01",
        "filename": "crypto/bio/printf.c",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 14196
      },
      "writtenOn": "2022-03-24T16:26:11Z",
      "side": 0,
      "message": "Yeah, other than you don\u0027t really need to vsnprintf(NULL, 0..). I was thinking to dispense with the stack buffer and out_malloced flag dance by just mallocing up front and then vsprintf() aping the usual portable vasprintf() implementations out there.\n\n(I\u0027m resolving so it doesn\u0027t block you, this can be done separately if we want to)",
      "parentUuid": "97f3fb94_b6ef2a44",
      "revId": "9dfc28574028c32b667671ff83abb4eacc5df74c",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e97165f8_583dda0d",
        "filename": "crypto/bio/printf.c",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 5415
      },
      "writtenOn": "2022-03-25T16:07:05Z",
      "side": 0,
      "message": "Ah I see. I guess that would get rid of the out_malloced bit.\n\n*shrug* Yeah, let\u0027s sort this out separately. I noticed ERR_add_error_dataf also has a fixed buffer. If we added a vasprintf-like function, we could use it there, at which point we may as well use it here too.",
      "parentUuid": "e903a782_778f4c01",
      "revId": "9dfc28574028c32b667671ff83abb4eacc5df74c",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "662fafc7_f6ab81e5",
        "filename": "crypto/bio/printf.c",
        "patchSetId": 2
      },
      "lineNbr": 75,
      "author": {
        "id": 5005
      },
      "writtenOn": "2022-03-23T19:32:57Z",
      "side": 0,
      "message": "Do we have a test that hits the truncation case? I.e. if Windows was still broken, would we notice?",
      "revId": "9dfc28574028c32b667671ff83abb4eacc5df74c",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5fd2c0d3_3dc75d10",
        "filename": "crypto/bio/printf.c",
        "patchSetId": 2
      },
      "lineNbr": 75,
      "author": {
        "id": 5415
      },
      "writtenOn": "2022-03-23T19:46:51Z",
      "side": 0,
      "message": "Yup, BIOTest.Printf. (That said, we don\u0027t actually have Windows 7 in CI/CQ, just Windows 10. Chromium hopefully still does?)",
      "parentUuid": "662fafc7_f6ab81e5",
      "revId": "9dfc28574028c32b667671ff83abb4eacc5df74c",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c3395f1b_305e0736",
        "filename": "crypto/bio/printf.c",
        "patchSetId": 2
      },
      "lineNbr": 75,
      "author": {
        "id": 5415
      },
      "writtenOn": "2022-03-25T16:07:05Z",
      "side": 0,
      "message": "(resolving)",
      "parentUuid": "5fd2c0d3_3dc75d10",
      "revId": "9dfc28574028c32b667671ff83abb4eacc5df74c",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    }
  ]
}