{
  "comments": [
    {
      "key": {
        "uuid": "85bbabd0_1f736b41",
        "filename": "include/openssl/base.h",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 7240
      },
      "writtenOn": "2016-09-26T22:38:19Z",
      "side": 1,
      "message": "What if someone build this on a big endian PPC 64?",
      "range": {
        "startLine": 88,
        "startChar": 8,
        "endLine": 88,
        "endChar": 23
      },
      "revId": "a1f609e4ebfef1f2c4227d8c03315787c8d87262",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25ad9fb1_5e84350c",
        "filename": "include/openssl/base.h",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 5415
      },
      "writtenOn": "2016-09-26T22:39:37Z",
      "side": 1,
      "message": "BoringSSL will not work on big endian things at all. Is there perhaps an #ifdef we can add here to kick out the big endian mode?",
      "parentUuid": "85bbabd0_1f736b41",
      "revId": "a1f609e4ebfef1f2c4227d8c03315787c8d87262",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85bbabd0_9fb4dbcd",
        "filename": "include/openssl/base.h",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 5005
      },
      "writtenOn": "2016-09-26T22:41:57Z",
      "side": 1,
      "message": "We don\u0027t support building on big-endian, but is there a #define that we can use to break it cleanly? I see that _LITTLE_ENDIAN, __LITTLE_ENDIAN__ and __BYTE_ORDER__ \u003d\u003d __ORDER_LITTLE_ENDIAN__ are all defined on a ppc64le machine, but I don\u0027t know if any are canonical.",
      "parentUuid": "85bbabd0_1f736b41",
      "range": {
        "startLine": 88,
        "startChar": 8,
        "endLine": 88,
        "endChar": 23
      },
      "revId": "a1f609e4ebfef1f2c4227d8c03315787c8d87262",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5c8439b_33352846",
        "filename": "include/openssl/base.h",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 7240
      },
      "writtenOn": "2016-09-26T22:55:21Z",
      "side": 1,
      "message": "glibc uses __BYTE_ORDER and __LITTLE_ENDIAN.  https://sourceware.org/git/?p\u003dglibc.git;a\u003dblob;f\u003dsysdeps/powerpc/bits/endian.h;h\u003d9adaf0ce5ed5bce094a39d80929dedb097571878;hb\u003dHEAD\n\nIs BoringSSL expected to work on other C libraries?",
      "parentUuid": "85bbabd0_9fb4dbcd",
      "range": {
        "startLine": 88,
        "startChar": 8,
        "endLine": 88,
        "endChar": 23
      },
      "revId": "a1f609e4ebfef1f2c4227d8c03315787c8d87262",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    }
  ]
}