{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "dbe571f3_21214890",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5525
      },
      "writtenOn": "2024-01-18T22:02:00Z",
      "side": 1,
      "message": "https://boringssl-review.googlesource.com/c/boringssl/+/65587 is the follow-up for the squaring case.",
      "revId": "e1bd9b0e86701075ffa3ebb50c85e507e71a392e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "108f990e_f612ab1f",
        "filename": "crypto/fipsmodule/bn/asm/x86_64-mont.pl",
        "patchSetId": 4
      },
      "lineNbr": 1008,
      "author": {
        "id": 5415
      },
      "writtenOn": "2024-01-26T17:03:33Z",
      "side": 1,
      "message": "I think this function also wants a `mov ${num}d,${num}d` to preserve the existing behavior.\n\nAlthough I\u0027m actually not sure it\u0027s necessary. It clears the upper half other register. However, we make the function take a `size_t` in the type signature, which means all bits in the register are well-defined. Of course, it is a little interesting that we say it takes a `size_t` while the function secretly will truncate really giant inputs. But it\u0027s moot because we\u0027d never be able to `alloca` that much and we\u0027ve now defined that `BN_MONTGOMERY_MAX_WORDS` is the largest this function will accept.\n\nIn OpenSSL, `bn_mul_mont` takes an `int`, so clearing the upper half actually matters. Both Windows and SysV x86_64 calling conventions leave the upper half undefined when the parameter is only 32 bits. (The ABI tests cover this. See `ToWord`.)\n\nStill, better to consistently clear it or consistently not clear it.",
      "revId": "e1bd9b0e86701075ffa3ebb50c85e507e71a392e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5cfb75ca_f0f89943",
        "filename": "crypto/fipsmodule/bn/asm/x86_64-mont.pl",
        "patchSetId": 4
      },
      "lineNbr": 1008,
      "author": {
        "id": 5415
      },
      "writtenOn": "2024-01-26T17:04:30Z",
      "side": 1,
      "message": "Oh I guess it\u0027s not needed because the first operation on num is a 32-bit operation.",
      "parentUuid": "108f990e_f612ab1f",
      "revId": "e1bd9b0e86701075ffa3ebb50c85e507e71a392e",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "e1bd9b0e86701075ffa3ebb50c85e507e71a392e",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforcement-satisfied_gerrit"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "e1bd9b0e86701075ffa3ebb50c85e507e71a392e",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}