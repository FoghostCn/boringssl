{
  "comments": [
    {
      "key": {
        "uuid": "e7954654_5f04edaf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 10411
      },
      "writtenOn": "2020-07-08T23:02:06Z",
      "side": 1,
      "message": "I\u0027ve updated some documentation to reflect an implementation detail that I\u0027d like to rely upon in Mundane. Please take a look. Thanks!",
      "revId": "38417f40460442f0cf39775d6079b0995a999f43",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8c440b36_55dd94b3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5005
      },
      "writtenOn": "2020-07-08T23:44:49Z",
      "side": 1,
      "message": "This is implied by the fact that the argument is const and is convention throughout BoringSSL. I don\u0027t think we want to note it in here because then, why not everywhere else too?",
      "revId": "38417f40460442f0cf39775d6079b0995a999f43",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ecc6966_517dccf6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 8959
      },
      "writtenOn": "2020-07-08T23:48:16Z",
      "side": 1,
      "message": "My understanding was that the convention was that, when a function takes a const pointer, it doesn\u0027t take ownership of that object (ie, is not responsible for future resource cleanup), but that it may store the pointer, which would imply that the pointee would need to live as long as the object now storing the pointer. I assume I\u0027m misunderstanding something here?",
      "parentUuid": "8c440b36_55dd94b3",
      "revId": "38417f40460442f0cf39775d6079b0995a999f43",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90fb1c77_8242480a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5005
      },
      "writtenOn": "2020-07-08T23:54:23Z",
      "side": 1,
      "message": "If a BoringSSL function takes a pointer but still needs it to live past the return of the function it\u0027ll highlight that in the comments because that\u0027s really weird. There are vast numbers of functions that take pointer arguments in BoringSSL and I can\u0027t think of any that demand that they stay live past function return.\n\n(There\u0027s probably some OpenSSL function that does? But we tag dangerous behaviour in the comments with \"WARNING: \" and a quick grep doesn\u0027t seem to turn any up. The closest is probably the functions that take ownership of their arguments and they aren\u0027t const, and are documented as such.)",
      "parentUuid": "1ecc6966_517dccf6",
      "revId": "38417f40460442f0cf39775d6079b0995a999f43",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    }
  ]
}