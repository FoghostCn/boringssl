{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "098427fc_167f78bf",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-06-22T22:30:53Z",
      "side": 1,
      "message": "Per the other CL, the syntax for referencing b/123456 is to add a \u0027b:\u0027 prefix.",
      "range": {
        "startLine": 9,
        "startChar": 5,
        "endLine": 9,
        "endChar": 14
      },
      "revId": "e4e956b7b96bea828028d379dcaa141fe20c382d",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7508eb80_e10fc8d7",
        "filename": "CMakeLists.txt",
        "patchSetId": 2
      },
      "lineNbr": 492,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-06-22T22:30:53Z",
      "side": 1,
      "message": "Let\u0027s keep the discussion as to whether the overall direction makes sense to the other CL. But it\u0027s pretty unclear what configurations we\u0027d be signing up to support by taking this change.\n\nThis CMake build enables fairly aggressive set of warnings (unlike the other builds I pointed to in the other CL). We\u0027ve often had to patch GTest, or suppress warnings in it. Passing an arbitrary GTest revision has a good chance of not working. At the least, it\u0027s very unclear what revisions we would and wouldn\u0027t be implicitly promising to support. E.g., what would happen if the external GTest needs some warning disabled? Would we have to take a patch to remove the warning?\n\nThere was even a time when we needed to atomically update GTest and the tests due to some API change.\nhttps://boringssl-review.googlesource.com/c/boringssl/+/35504",
      "revId": "e4e956b7b96bea828028d379dcaa141fe20c382d",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a69b724b_864fc746",
        "filename": "CMakeLists.txt",
        "patchSetId": 2
      },
      "lineNbr": 492,
      "author": {
        "id": 16411
      },
      "writtenOn": "2023-06-22T22:34:23Z",
      "side": 1,
      "message": "Quick comment as I head home from the office: if this is really this much of a problem, why do we strip gtest when importing to AOSP tree?",
      "parentUuid": "7508eb80_e10fc8d7",
      "revId": "e4e956b7b96bea828028d379dcaa141fe20c382d",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c88f56e8_1b632346",
        "filename": "CMakeLists.txt",
        "patchSetId": 2
      },
      "lineNbr": 492,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-06-22T22:57:42Z",
      "side": 1,
      "message": "Android doesn\u0027t build with quite as aggressive of warnings. And, somewhat by construction, Android\u0027s warnings are presumably compatible with Android\u0027s GTest. :-)\n\nThat wouldn\u0027t help with the API change... I actually don\u0027t remember how that ended up working with all the downstream builds. Android, Chromium, and google3 all build our tests and with the external BoringSSL. The difference is we also use their GTest build definitions themselves.\n\nThis is part of why I was asking about why you all want this particular build. Historically, this build has mostly been used by BoringSSL devs, which is why it\u0027s really aggressive about warnings, compiles in debug mode by default, and has Go and Perl build dependencies where downstream builds usually pre-generate some generated files. This build does not know how to consume pre-generated files.\n\nThis split is a huge mess and the product of things evolving over time. We\u0027re trying to clean it up, after which I intend for the generated CMake build and this one to be one and the same. But having yet another configuration (Android BoringSSL + standalone CMake build) will make it harder to clean it up and, in the meantime, this is the split we have. I asked the questions I did on the other CL because it really seems like you all are using the wrong build.",
      "parentUuid": "a69b724b_864fc746",
      "revId": "e4e956b7b96bea828028d379dcaa141fe20c382d",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    }
  ]
}