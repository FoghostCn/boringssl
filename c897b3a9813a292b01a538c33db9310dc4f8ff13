{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "670f1f18_b82a1d0a",
        "filename": "rust/bssl-crypto/src/ed25519.rs",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-05-15T20:43:03Z",
      "side": 1,
      "message": "Nit: RFC 8032 has settled on \"Ed25519\" with a capital E as the preferred capitalization, so let\u0027s use that. Ditto throughout.",
      "range": {
        "startLine": 18,
        "startChar": 30,
        "endLine": 18,
        "endChar": 37
      },
      "revId": "c897b3a9813a292b01a538c33db9310dc4f8ff13",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a4fd5aea_aba7be1e",
        "filename": "rust/bssl-crypto/src/ed25519.rs",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 15751
      },
      "writtenOn": "2023-05-15T21:07:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "670f1f18_b82a1d0a",
      "range": {
        "startLine": 18,
        "startChar": 30,
        "endLine": 18,
        "endChar": 37
      },
      "revId": "c897b3a9813a292b01a538c33db9310dc4f8ff13",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3706ccef_6a6e5c98",
        "filename": "rust/bssl-crypto/src/ed25519.rs",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-05-15T20:43:03Z",
      "side": 1,
      "message": "Not really any point in stashing the public key in there given the keypair already has one. :-)",
      "revId": "c897b3a9813a292b01a538c33db9310dc4f8ff13",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e280c1e5_0371301c",
        "filename": "rust/bssl-crypto/src/ed25519.rs",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 15751
      },
      "writtenOn": "2023-05-15T21:07:05Z",
      "side": 1,
      "message": "Yeah thats fair, the only reason I left it is because the boringssl API looks like: \n`ED25519_keypair(uint8_t out_public_key[32], uint8_t out_private_key[64])` which seemed to be treating them separately anyways",
      "parentUuid": "3706ccef_6a6e5c98",
      "revId": "c897b3a9813a292b01a538c33db9310dc4f8ff13",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bad5f013_84d78827",
        "filename": "rust/bssl-crypto/src/ed25519.rs",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 15751
      },
      "writtenOn": "2023-05-15T22:14:27Z",
      "side": 1,
      "message": "Removed. Now the `out_public_key` passed to boringssl is just thrown away",
      "parentUuid": "e280c1e5_0371301c",
      "revId": "c897b3a9813a292b01a538c33db9310dc4f8ff13",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5157e52_11b37729",
        "filename": "rust/bssl-crypto/src/ed25519.rs",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-05-15T20:43:03Z",
      "side": 1,
      "message": "s/creates/is created/?",
      "range": {
        "startLine": 34,
        "startChar": 25,
        "endLine": 34,
        "endChar": 32
      },
      "revId": "c897b3a9813a292b01a538c33db9310dc4f8ff13",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6b231280_8a8e3942",
        "filename": "rust/bssl-crypto/src/ed25519.rs",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 15751
      },
      "writtenOn": "2023-05-15T21:07:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f5157e52_11b37729",
      "range": {
        "startLine": 34,
        "startChar": 25,
        "endLine": 34,
        "endChar": 32
      },
      "revId": "c897b3a9813a292b01a538c33db9310dc4f8ff13",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac411fce_9cd1ac88",
        "filename": "rust/bssl-crypto/src/ed25519.rs",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-05-15T20:43:03Z",
      "side": 1,
      "message": "Is this type really doing anything, over just returning `[u8; 64]` directly?",
      "range": {
        "startLine": 35,
        "startChar": 11,
        "endLine": 35,
        "endChar": 20
      },
      "revId": "c897b3a9813a292b01a538c33db9310dc4f8ff13",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc8083b2_dc829b43",
        "filename": "rust/bssl-crypto/src/ed25519.rs",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 15751
      },
      "writtenOn": "2023-05-15T21:07:05Z",
      "side": 1,
      "message": "Its mostly just for convenience/clarification to avoid using the wrong byte array somewhere. Personally I like it this way, but don\u0027t feel too strongly. If the preference is to remove it I am fine with that too",
      "parentUuid": "ac411fce_9cd1ac88",
      "range": {
        "startLine": 35,
        "startChar": 11,
        "endLine": 35,
        "endChar": 20
      },
      "revId": "c897b3a9813a292b01a538c33db9310dc4f8ff13",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "377c8d9b_0b12710d",
        "filename": "rust/bssl-crypto/src/ed25519.rs",
        "patchSetId": 3
      },
      "lineNbr": 62,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-05-15T20:43:03Z",
      "side": 1,
      "message": "Oh, this is a bit fun. So what is an Ed25519 private key is... kind of all over the place. It took a while before it got standardized coherently.\nhttps://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n\nNow we do have a \"standard\" opinion, RFC 8032. RFC 8032 has taken the byte representation to be \"seed\". That differs from our \"low-level\" Ed25519 API.\n\nPart of this is because if you\u0027re signing a lot with one key, you want the public half available. It figures into the signing process, and we don\u0027t want to have to compute it repeatedly.\n\nInstead of having separate steps for \"import private key\" and \"sign\", `ED25519_sign` just cheats and says \"eh, a private key is just a 64-byte blob\", whatever.\n\nAnd, honestly, that\u0027s mostly fine. Though this means dumb things can happen if you import a private key where the public key doesn\u0027t match. Actually if you use the correct private key with the wrong public key, your private key is lost. But I think this is a mostly theoretical concern because if you believe the whole 64-byte structure is the private key, obviously you should not let the attacker mutate half of it! :-)\n\nBut, in most languages, including here, we don\u0027t need to be so afraid of types. It\u0027s pretty useful to have kind of of `PrivateKey` or `KeyPair` or `Signer` or whatever type. And, once you have that, you may as well just do the public key computation on import, so a 32-byte format is smaller and avoids thinking about the above.\n\nOn the flip side, it doesn\u0027t give you any way to say \"I already have the public key precomputed and trust it as much as the private key, please don\u0027t waste cycles on the import\". But it\u0027s also not *that* slow (it\u0027s less than the cost of one signature). So I think it\u0027s probably better to just stick to the RFC 8032 spelling on the public API and not think about it too hard. :-) Then we also can cite RFC 8032 when describing the bytes you get out.\n\n(If we were to do that, is `KeyPair` still a better name, or would `PrivateKey` make more sense?)",
      "revId": "c897b3a9813a292b01a538c33db9310dc4f8ff13",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8306e17_8aa5c10f",
        "filename": "rust/bssl-crypto/src/ed25519.rs",
        "patchSetId": 3
      },
      "lineNbr": 62,
      "author": {
        "id": 15751
      },
      "writtenOn": "2023-05-15T21:43:32Z",
      "side": 1,
      "message": "I see, so updating the `from_bytes()` on to only accept a 32 byte private key. Re-naming it to `SecretKey` might make sense, I was loosely trying to follow the Rust implementation API, which implements signing on the KeyPair struct: https://docs.rs/ed25519-dalek/latest/ed25519_dalek/struct.Keypair.html",
      "parentUuid": "377c8d9b_0b12710d",
      "revId": "c897b3a9813a292b01a538c33db9310dc4f8ff13",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d1e2c559_5f2487bd",
        "filename": "rust/bssl-crypto/src/ed25519.rs",
        "patchSetId": 3
      },
      "lineNbr": 62,
      "author": {
        "id": 15751
      },
      "writtenOn": "2023-05-15T22:14:27Z",
      "side": 1,
      "message": "Okay I removed `from_bytes` and replaced it with `new_from_seed`. I decided to leave it as a `KeyPair` because even though its created from a private key (seed), what its really representing is a KeyPair",
      "parentUuid": "a8306e17_8aa5c10f",
      "revId": "c897b3a9813a292b01a538c33db9310dc4f8ff13",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2c6bca4_a99e9de8",
        "filename": "rust/bssl-crypto/src/ed25519.rs",
        "patchSetId": 3
      },
      "lineNbr": 129,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-05-15T20:43:03Z",
      "side": 1,
      "message": "This is a rather involved way to say `if ret \u003d\u003d 1 { Ok(()) } else { Err(SignatureError) }`. :-) Is that the usual style in Rust?",
      "revId": "c897b3a9813a292b01a538c33db9310dc4f8ff13",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eb110a77_50f7518b",
        "filename": "rust/bssl-crypto/src/ed25519.rs",
        "patchSetId": 3
      },
      "lineNbr": 129,
      "author": {
        "id": 15751
      },
      "writtenOn": "2023-05-15T21:07:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f2c6bca4_a99e9de8",
      "revId": "c897b3a9813a292b01a538c33db9310dc4f8ff13",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4a899eec_b3736b0a",
        "filename": "rust/bssl-crypto/src/ed25519.rs",
        "patchSetId": 3
      },
      "lineNbr": 129,
      "author": {
        "id": 15751
      },
      "writtenOn": "2023-05-15T21:07:51Z",
      "side": 1,
      "message": "Honestly not sure what the usual style is, I think your way is clearer so I updated it too that",
      "parentUuid": "eb110a77_50f7518b",
      "revId": "c897b3a9813a292b01a538c33db9310dc4f8ff13",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    }
  ]
}