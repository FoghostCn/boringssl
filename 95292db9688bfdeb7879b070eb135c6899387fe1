{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b90d7abb_4571ff85",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-11-27T17:00:11Z",
      "side": 1,
      "message": "LGTM assuming Matt\u0027s happy with losing these debugs.",
      "revId": "95292db9688bfdeb7879b070eb135c6899387fe1",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2636f3a8_ffc4e0e0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-12-04T19:46:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b90d7abb_4571ff85",
      "revId": "95292db9688bfdeb7879b070eb135c6899387fe1",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0cb481d8_381032e1",
        "filename": "pki/path_builder_pkits_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 245,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-11-27T17:00:11Z",
      "side": 1,
      "message": "This is stuff to be attached to the `ASSERT_EQ` anyway, right? I think we can just build a big `testing::Message()`, which would output more inline with GTest anyway. Haven\u0027t tried this but something like this, perhaps?\n\n\n```suggestion\n    if (info.should_validate !\u003d result.HasValidPath()) {\n      testing::Message msg;\n      for (size_t i \u003d 0; i \u003c result.paths.size(); ++i) {\n        const bssl::CertPathBuilderResultPath *result_path \u003d\n            result.paths[i].get();\n        msg \u003c\u003c \"path \" \u003c\u003c i \u003c\u003c \" errors:\\n\"\n            \u003c\u003c result_path-\u003eerrors.ToDebugString(result_path-\u003ecerts)\n            \u003c\u003c \"\\n\";\n      }\n      ASSERT_EQ(info.should_validate, result.HasValidPath()) \u003c\u003c msg;\n    }\n```",
      "range": {
        "startLine": 236,
        "startChar": 0,
        "endLine": 245,
        "endChar": 59
      },
      "revId": "95292db9688bfdeb7879b070eb135c6899387fe1",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "809b2004_4a71fab6",
        "filename": "pki/path_builder_pkits_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 245,
      "author": {
        "id": 17636
      },
      "writtenOn": "2023-12-01T17:21:44Z",
      "side": 1,
      "message": "Fix applied.",
      "parentUuid": "0cb481d8_381032e1",
      "range": {
        "startLine": 236,
        "startChar": 0,
        "endLine": 245,
        "endChar": 59
      },
      "revId": "95292db9688bfdeb7879b070eb135c6899387fe1",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3e6c5aac_643ce6a6",
        "filename": "pki/path_builder_pkits_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 245,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-12-01T18:03:34Z",
      "side": 1,
      "message": "what is this voodoo (what)?",
      "parentUuid": "809b2004_4a71fab6",
      "range": {
        "startLine": 236,
        "startChar": 0,
        "endLine": 245,
        "endChar": 59
      },
      "revId": "95292db9688bfdeb7879b070eb135c6899387fe1",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "91b46dbf_2bb46c8b",
        "filename": "pki/path_builder_pkits_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 245,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-12-01T18:05:19Z",
      "side": 1,
      "message": "is it just some bot that noticed I applied the fix and didn\u0027t close this out yet?",
      "parentUuid": "3e6c5aac_643ce6a6",
      "range": {
        "startLine": 236,
        "startChar": 0,
        "endLine": 245,
        "endChar": 59
      },
      "revId": "95292db9688bfdeb7879b070eb135c6899387fe1",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1f614a77_91cbdcc8",
        "filename": "pki/path_builder_pkits_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 245,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-12-01T19:34:58Z",
      "side": 1,
      "message": "I think this may be a spammer. We get those on this Gerrit occasionally. Can probably just ignore it.",
      "parentUuid": "91b46dbf_2bb46c8b",
      "range": {
        "startLine": 236,
        "startChar": 0,
        "endLine": 245,
        "endChar": 59
      },
      "revId": "95292db9688bfdeb7879b070eb135c6899387fe1",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "88a08871_73f64f39",
        "filename": "pki/path_builder_pkits_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 245,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-12-04T19:53:31Z",
      "side": 1,
      "message": "Looks like gerrit or git then got confused about the applied fix with me manipulating the patch stack and I had to re-apply it anyway.. shrug.",
      "parentUuid": "1f614a77_91cbdcc8",
      "range": {
        "startLine": 236,
        "startChar": 0,
        "endLine": 245,
        "endChar": 59
      },
      "revId": "95292db9688bfdeb7879b070eb135c6899387fe1",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    }
  ]
}