{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "52d5ffaa_8e037b36",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 16131
      },
      "writtenOn": "2023-04-28T19:56:23Z",
      "side": 1,
      "message": "The way OpenSSL envisioned to handle d2i/i2d is prone to errors, this changeset might be of interest to you.",
      "revId": "db2ff634008a7c243839bc3aac86f6a967b0d481",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e6a7d7d6_d83571df",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 16131
      },
      "writtenOn": "2023-04-28T19:58:54Z",
      "side": 1,
      "message": "If this changeset is considered beneficial, there is some cleanup to do, the following functions and calls to these functions could probably be removed.\n\n* asn1_enc_restore()\n* asn1_enc_save()\n* asn1_encoding_clear()\n* asn1_enc_init()\n* asn1_enc_free",
      "revId": "db2ff634008a7c243839bc3aac86f6a967b0d481",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7f09529c_f10e7af8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 16131
      },
      "writtenOn": "2023-04-28T20:04:07Z",
      "side": 1,
      "message": "A regression test for LibreSSL is available here and could be copied into BoringSSL too: https://github.com/openbsd/src/blob/master/regress/lib/libcrypto/x509/x509_asn1.c",
      "revId": "db2ff634008a7c243839bc3aac86f6a967b0d481",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2a74f09_bd6365b6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-04-28T20:07:34Z",
      "side": 1,
      "message": "I don\u0027t think this is compatible, or at least not obviously so. The cached encodings are indeed a huge mess, and I have a lot of plans to rework things here, but they\u0027re because `d2i_X509` historically accepted BER in addition to DER.\n\nNow, formally, a BER X.509 certificate is supposed to be re-encoded as DER before verifying the signature, but no one does this. Instead, what everyone does is calculate the signature over the bytes you *actually* received. That cached encoding achieves this. It\u0027s also safer to check the signature over the original byte input, rather than re-encoding it, because re-encoding assumes that the encoder doesn\u0027t accidentally drop some significant variation in the parsed structure. That\u0027s why almost every X.509 library holds onto the original parsed representation.\n\nWe have since removed quite a lot of the BER from this parser, but I\u0027m not confident we\u0027ve done so to the point that that `i2d_X509(d2i_X509)` is always the identity function. (In fact, I\u0027m quite sure we haven\u0027t around BOOLEANs.)",
      "revId": "db2ff634008a7c243839bc3aac86f6a967b0d481",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    }
  ]
}