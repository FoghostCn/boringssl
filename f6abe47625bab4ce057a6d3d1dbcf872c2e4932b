{
  "comments": [
    {
      "key": {
        "uuid": "7f5008f0_3107102d",
        "filename": "ssl/test/runner/conn.go",
        "patchSetId": 3
      },
      "lineNbr": 1333,
      "author": {
        "id": 5415
      },
      "writtenOn": "2016-10-11T18:34:58Z",
      "side": 1,
      "message": "These should have some constants defined.",
      "range": {
        "startLine": 1333,
        "startChar": 34,
        "endLine": 1333,
        "endChar": 35
      },
      "revId": "f6abe47625bab4ce057a6d3d1dbcf872c2e4932b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f5008f0_71019814",
        "filename": "ssl/test/runner/handshake_messages.go",
        "patchSetId": 3
      },
      "lineNbr": 2010,
      "author": {
        "id": 5415
      },
      "writtenOn": "2016-10-11T18:34:58Z",
      "side": 1,
      "message": "I\u0027d probably just use int which avoids the cast on the line below.",
      "range": {
        "startLine": 2010,
        "startChar": 11,
        "endLine": 2010,
        "endChar": 17
      },
      "revId": "f6abe47625bab4ce057a6d3d1dbcf872c2e4932b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f5008f0_51049425",
        "filename": "ssl/test/runner/handshake_messages.go",
        "patchSetId": 3
      },
      "lineNbr": 2015,
      "author": {
        "id": 5415
      },
      "writtenOn": "2016-10-11T18:34:58Z",
      "side": 1,
      "message": "Unknown values are illegal here. (This isn\u0027t an extension point.)",
      "revId": "f6abe47625bab4ce057a6d3d1dbcf872c2e4932b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f5008f0_9100bc11",
        "filename": "ssl/test/runner/prf.go",
        "patchSetId": 3
      },
      "lineNbr": 310,
      "author": {
        "id": 5415
      },
      "writtenOn": "2016-10-11T18:34:58Z",
      "side": 1,
      "message": "Client and server Finished derivations are now the same label since the traffic secrets are split.",
      "revId": "f6abe47625bab4ce057a6d3d1dbcf872c2e4932b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f5008f0_b105c020",
        "filename": "ssl/test/runner/prf.go",
        "patchSetId": 3
      },
      "lineNbr": 329,
      "author": {
        "id": 5415
      },
      "writtenOn": "2016-10-11T18:34:58Z",
      "side": 1,
      "message": "Ditto.",
      "revId": "f6abe47625bab4ce057a6d3d1dbcf872c2e4932b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f5008f0_f114a858",
        "filename": "ssl/test/runner/prf.go",
        "patchSetId": 3
      },
      "lineNbr": 420,
      "author": {
        "id": 5415
      },
      "writtenOn": "2016-10-11T18:34:58Z",
      "side": 1,
      "message": "client early traffic secret",
      "revId": "f6abe47625bab4ce057a6d3d1dbcf872c2e4932b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f5008f0_f10f483c",
        "filename": "ssl/tls13_both.c",
        "patchSetId": 3
      },
      "lineNbr": 407,
      "author": {
        "id": 5415
      },
      "writtenOn": "2016-10-11T18:34:58Z",
      "side": 1,
      "message": "Check that key_update_request is either 0 or 1 and add test. (Define constants maybe?)",
      "revId": "f6abe47625bab4ce057a6d3d1dbcf872c2e4932b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f5008f0_d10a442f",
        "filename": "ssl/tls13_enc.c",
        "patchSetId": 3
      },
      "lineNbr": 168,
      "author": {
        "id": 5415
      },
      "writtenOn": "2016-10-11T18:34:58Z",
      "side": 1,
      "message": "Now what we\u0027re not concatenating together three things, you could probably also just do:\n\n  const char *key_label, iv_label;\n  switch (type) {\n    case type_early_handshake:\n      key_label \u003d \"...\";\n      iv_label \u003d \"...\";\n    ...\n  }\n\nand then use key_label and iv_label. Then we can remove that switch-case too once the phase bit is gone.",
      "revId": "f6abe47625bab4ce057a6d3d1dbcf872c2e4932b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f5008f0_510bb4cf",
        "filename": "ssl/tls13_enc.c",
        "patchSetId": 3
      },
      "lineNbr": 261,
      "author": {
        "id": 5415
      },
      "writtenOn": "2016-10-11T18:34:58Z",
      "side": 1,
      "message": "This may or may not work nicely, but I think you can simplify by instead of using this breakdown add a function like tls13_derive_and_use_secret which just takes the label (enum or const char*?) and calls derive_secret, ssl_log_secret, and tls13_set_traffic_key in one go. It means two functions calls in tls13_client.c, but you don\u0027t need this condition or to save server_traffic_secret_0, only the client one. (The client one would have to split up derive_secret + log_secret from set_traffic_key.)\n\nThis version works fine too.",
      "revId": "f6abe47625bab4ce057a6d3d1dbcf872c2e4932b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    }
  ]
}