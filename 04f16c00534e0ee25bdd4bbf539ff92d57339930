{
  "comments": [
    {
      "key": {
        "uuid": "ed5b2756_df58a97a",
        "filename": "crypto/trust_token/trust_token_test.cc",
        "patchSetId": 59
      },
      "lineNbr": 63,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-04-16T21:16:57Z",
      "side": 1,
      "message": "Nit: So we\u0027re not hardcoding 7 everywhere.\n\n  // PublicMetadata (or should it be KeyID?) returns the public metadata value associated with key index |i|.\n  static uint32_t PublicMetadata(size_t i) {\n    // Use a different value from the indices to that we do not mix them up.\n    return 7 + i;\n  }\n\nstatic so you can reuse the abstraction in INSTANTIATE_TEST_SUITE_P.",
      "revId": "04f16c00534e0ee25bdd4bbf539ff92d57339930",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "853dcf22_47a749cf",
        "filename": "crypto/trust_token/trust_token_test.cc",
        "patchSetId": 59
      },
      "lineNbr": 63,
      "author": {
        "id": 5945
      },
      "writtenOn": "2020-04-16T21:51:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ed5b2756_df58a97a",
      "revId": "04f16c00534e0ee25bdd4bbf539ff92d57339930",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b144af5_701154b2",
        "filename": "crypto/trust_token/trust_token_test.cc",
        "patchSetId": 59
      },
      "lineNbr": 271,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-04-16T21:16:57Z",
      "side": 1,
      "message": "BadKeyID maybe? BadKey would suggest the DLEQ proof didn\u0027t check out.",
      "range": {
        "startLine": 271,
        "startChar": 45,
        "endLine": 271,
        "endChar": 48
      },
      "revId": "04f16c00534e0ee25bdd4bbf539ff92d57339930",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4422af46_22938eb1",
        "filename": "crypto/trust_token/trust_token_test.cc",
        "patchSetId": 59
      },
      "lineNbr": 271,
      "author": {
        "id": 5945
      },
      "writtenOn": "2020-04-16T21:51:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6b144af5_701154b2",
      "range": {
        "startLine": 271,
        "startChar": 45,
        "endLine": 271,
        "endChar": 48
      },
      "revId": "04f16c00534e0ee25bdd4bbf539ff92d57339930",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11212d0e_09cf73ed",
        "filename": "crypto/trust_token/trust_token_test.cc",
        "patchSetId": 59
      },
      "lineNbr": 276,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-04-16T21:16:57Z",
      "side": 1,
      "message": "// We configure the client and the issuer with different key IDs and test\n// that the client notices.\nconst uint32_t kClientKeyID \u003d 0;\nconst uint32_t kIssuerKeyID \u003d 42;\n\nThen use the constants in the below.",
      "revId": "04f16c00534e0ee25bdd4bbf539ff92d57339930",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a86d21ec_76ebb2b0",
        "filename": "crypto/trust_token/trust_token_test.cc",
        "patchSetId": 59
      },
      "lineNbr": 276,
      "author": {
        "id": 5945
      },
      "writtenOn": "2020-04-16T21:51:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "11212d0e_09cf73ed",
      "revId": "04f16c00534e0ee25bdd4bbf539ff92d57339930",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2b2ebe4_a15c886a",
        "filename": "crypto/trust_token/trust_token_test.cc",
        "patchSetId": 59
      },
      "lineNbr": 300,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-04-16T21:16:57Z",
      "side": 1,
      "message": "ASSERT_TRUE(priv) and pub.",
      "revId": "04f16c00534e0ee25bdd4bbf539ff92d57339930",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f7343b2_fbd97ef6",
        "filename": "crypto/trust_token/trust_token_test.cc",
        "patchSetId": 59
      },
      "lineNbr": 300,
      "author": {
        "id": 5945
      },
      "writtenOn": "2020-04-16T21:51:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e2b2ebe4_a15c886a",
      "revId": "04f16c00534e0ee25bdd4bbf539ff92d57339930",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c3ce4dc_8c4b9f82",
        "filename": "include/openssl/trust_token.h",
        "patchSetId": 59
      },
      "lineNbr": 229,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-04-16T21:16:57Z",
      "side": 1,
      "message": "Supposing you, timing-aside, agree with the replay callback suggestion mind filing a bug for that and add a TODO?",
      "revId": "04f16c00534e0ee25bdd4bbf539ff92d57339930",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d044ab5a_f76cb081",
        "filename": "include/openssl/trust_token.h",
        "patchSetId": 59
      },
      "lineNbr": 229,
      "author": {
        "id": 5945
      },
      "writtenOn": "2020-04-16T21:51:14Z",
      "side": 1,
      "message": "Threading with a callback is going to be complicated, and I\u0027m not sure its worth the complexity. Replay callback will need to do something async-ish (block up to a timeout), which means either we make a redeem call asynchronous somehow or split it into begin_issue and finish_issue, or forcing replay logic to be weirdly synchronous.",
      "parentUuid": "1c3ce4dc_8c4b9f82",
      "revId": "04f16c00534e0ee25bdd4bbf539ff92d57339930",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65a51500_6a9a2cba",
        "filename": "include/openssl/trust_token.h",
        "patchSetId": 59
      },
      "lineNbr": 229,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-04-16T21:58:48Z",
      "side": 1,
      "message": "Ah, good point. Yeah, I guess the question is whether the caller expects to do an RPC to an external service or simply do an eventually-consistent thing. The latter maybe would be synchronous, but the former wants to be async and that gets hairy. :-/",
      "parentUuid": "d044ab5a_f76cb081",
      "revId": "04f16c00534e0ee25bdd4bbf539ff92d57339930",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    }
  ]
}