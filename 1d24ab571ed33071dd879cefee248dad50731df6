{
  "comments": [
    {
      "key": {
        "uuid": "c4061a7f_97450441",
        "filename": "crypto/fipsmodule/hmac/hmac.c",
        "patchSetId": 1
      },
      "lineNbr": 139,
      "author": {
        "id": 5415
      },
      "writtenOn": "2018-08-13T23:07:53Z",
      "side": 1,
      "message": "Do you need these comments here? I\u0027m not sure they really give much benefit.",
      "revId": "1d24ab571ed33071dd879cefee248dad50731df6",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12f36b0d_9079cb9b",
        "filename": "crypto/fipsmodule/hmac/hmac.c",
        "patchSetId": 1
      },
      "lineNbr": 139,
      "author": {
        "id": 8959
      },
      "writtenOn": "2018-08-13T23:11:05Z",
      "side": 1,
      "message": "I put them here to justify the public-facing doc comment so developers didn\u0027t have to trace through the various subroutines to understand why the doc comment is true. I can remove them if you\u0027d prefer.",
      "parentUuid": "c4061a7f_97450441",
      "revId": "1d24ab571ed33071dd879cefee248dad50731df6",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7b76de9_7da78fe7",
        "filename": "include/openssl/digest.h",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 5415
      },
      "writtenOn": "2018-08-13T23:07:53Z",
      "side": 1,
      "message": "The \"not being initialized\" cases will result in us potentially double-freeing random pointers and such rather than cleanly returning zero. I think that falls more under undefined behavior (\"which must already be initialised\") and isn\u0027t particularly worth mentioning beyond that. In a more sensible language, EVP_MD_CTX_init would just be in the constructor of EVP_MD_CTX and the language would put some effort into not letting you get access to an unconstructed object, at least not easily.\n\nTo the OOM bit, I think in a lot of places we replace \"It returns one on success and zero on error\" with \"It returns one on success and zero on allocation failure.\" What do you think about that pattern?",
      "revId": "1d24ab571ed33071dd879cefee248dad50731df6",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96e276cb_fed2680e",
        "filename": "include/openssl/digest.h",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 8959
      },
      "writtenOn": "2018-08-13T23:11:05Z",
      "side": 1,
      "message": "Noted about the \"not being initialized\" resulting in UB.\n\nI like \"It returns one on success and zero on allocation failure\"! Very concise.",
      "parentUuid": "c7b76de9_7da78fe7",
      "revId": "1d24ab571ed33071dd879cefee248dad50731df6",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    }
  ]
}