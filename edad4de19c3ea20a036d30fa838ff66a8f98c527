{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "dc9add7a_02dc2624",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 5005
      },
      "writtenOn": "2023-03-14T16:53:36Z",
      "side": 1,
      "message": "+David in the attention set because this is plausibly close to ready.",
      "revId": "edad4de19c3ea20a036d30fa838ff66a8f98c527",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14c37c3c_e9ce0319",
        "filename": "crypto/kyber/kyber.c",
        "patchSetId": 15
      },
      "lineNbr": 40,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-03-14T17:35:00Z",
      "side": 1,
      "message": "This is really a nit, and I don\u0027t care that much, but should we #define the values of the constants to use like this instead of using the comment paradigm?",
      "revId": "edad4de19c3ea20a036d30fa838ff66a8f98c527",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b13f21f_370afa84",
        "filename": "crypto/kyber/kyber.c",
        "patchSetId": 15
      },
      "lineNbr": 40,
      "author": {
        "id": 5005
      },
      "writtenOn": "2023-03-15T16:25:33Z",
      "side": 1,
      "message": "It\u0027s a C thing: we\u0027re not on a new enough version of C that `const`s can be used in defining other `const` values yet. Yea, they can be #defines, but they are used elsewhere and I prefer typed values to the preprocessor where possible. For `DEGREE` and `RANK` it\u0027s not possible because they\u0027re used when defining the structs, but for these few I (weakly) feel that this is the lesser evil.",
      "parentUuid": "14c37c3c_e9ce0319",
      "revId": "edad4de19c3ea20a036d30fa838ff66a8f98c527",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "92ff9777_c76613ad",
        "filename": "crypto/kyber/kyber.c",
        "patchSetId": 15
      },
      "lineNbr": 40,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-03-15T16:27:46Z",
      "side": 1,
      "message": "Goot enough for me.. not a strongly held preference on my part.",
      "parentUuid": "0b13f21f_370afa84",
      "revId": "edad4de19c3ea20a036d30fa838ff66a8f98c527",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0796e0d3_147c897d",
        "filename": "crypto/kyber/kyber.c",
        "patchSetId": 15
      },
      "lineNbr": 84,
      "author": {
        "id": 15796
      },
      "writtenOn": "2023-03-14T17:30:13Z",
      "side": 1,
      "message": "-bitreverse(i) (I hope python handles that correctly, otherwise 1175 \u003d 17^-1 mod 3329",
      "range": {
        "startLine": 84,
        "startChar": 31,
        "endLine": 84,
        "endChar": 35
      },
      "revId": "edad4de19c3ea20a036d30fa838ff66a8f98c527",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2d77a0de_b74b9ad5",
        "filename": "crypto/kyber/kyber.c",
        "patchSetId": 15
      },
      "lineNbr": 84,
      "author": {
        "id": 5005
      },
      "writtenOn": "2023-03-15T16:25:33Z",
      "side": 1,
      "message": "Oops, thank you.",
      "parentUuid": "0796e0d3_147c897d",
      "range": {
        "startLine": 84,
        "startChar": 31,
        "endLine": 84,
        "endChar": 35
      },
      "revId": "edad4de19c3ea20a036d30fa838ff66a8f98c527",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5992f03c_de219121",
        "filename": "crypto/kyber/kyber.c",
        "patchSetId": 15
      },
      "lineNbr": 147,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-03-14T17:35:00Z",
      "side": 1,
      "message": "Just a general nit throughout, in new code we\u0027ve been using size_t for array indices in loops.",
      "revId": "edad4de19c3ea20a036d30fa838ff66a8f98c527",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4818fc2_14261bf2",
        "filename": "crypto/kyber/kyber.c",
        "patchSetId": 15
      },
      "lineNbr": 147,
      "author": {
        "id": 5005
      },
      "writtenOn": "2023-03-15T16:25:33Z",
      "side": 1,
      "message": "I prefer unsigned values in general, but using `size_t` for the loops in `scalar_ntt` and `scalar_inverse_ntt` is measurably slower: 16534.3 ops/sec -\u003e 15652.7 ops/sec.",
      "parentUuid": "5992f03c_de219121",
      "revId": "edad4de19c3ea20a036d30fa838ff66a8f98c527",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cec27d14_e9bbb92b",
        "filename": "crypto/kyber/kyber.c",
        "patchSetId": 15
      },
      "lineNbr": 147,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-03-15T16:27:46Z",
      "side": 1,
      "message": "We should chuck a comment in there to this effect so that some well meaning cleanup later on does not undo it then.",
      "parentUuid": "a4818fc2_14261bf2",
      "revId": "edad4de19c3ea20a036d30fa838ff66a8f98c527",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8ec7359_1cd03673",
        "filename": "crypto/kyber/kyber.c",
        "patchSetId": 15
      },
      "lineNbr": 147,
      "author": {
        "id": 5005
      },
      "writtenOn": "2023-03-15T16:58:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cec27d14_e9bbb92b",
      "revId": "edad4de19c3ea20a036d30fa838ff66a8f98c527",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a03454f8_622a3066",
        "filename": "crypto/kyber/kyber.c",
        "patchSetId": 15
      },
      "lineNbr": 215,
      "author": {
        "id": 15796
      },
      "writtenOn": "2023-03-15T16:34:05Z",
      "side": 1,
      "message": "Typo swapping 1 and ).",
      "range": {
        "startLine": 215,
        "startChar": 22,
        "endLine": 215,
        "endChar": 24
      },
      "revId": "edad4de19c3ea20a036d30fa838ff66a8f98c527",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "de37b546_3da81ab5",
        "filename": "crypto/kyber/kyber.c",
        "patchSetId": 15
      },
      "lineNbr": 215,
      "author": {
        "id": 5005
      },
      "writtenOn": "2023-03-15T16:58:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a03454f8_622a3066",
      "range": {
        "startLine": 215,
        "startChar": 22,
        "endLine": 215,
        "endChar": 24
      },
      "revId": "edad4de19c3ea20a036d30fa838ff66a8f98c527",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9553cc71_da2f09ad",
        "filename": "include/openssl/kyber.h",
        "patchSetId": 15
      },
      "lineNbr": 53,
      "author": {
        "id": 15796
      },
      "writtenOn": "2023-03-14T20:20:51Z",
      "side": 1,
      "message": "Should KYBER_generate_key create marshalled keys or unmarshalled keys? If the keys are unmarshalled, generating the key and immediately using it would not require reexpanding of the matrix. Of course there is little that can immediately done with the key until the public key has been marshalled, send out, and someone has encapsulated to it, which can all happen in parallel to the unmarshalling of the private key.",
      "range": {
        "startLine": 53,
        "startChar": 17,
        "endLine": 53,
        "endChar": 39
      },
      "revId": "edad4de19c3ea20a036d30fa838ff66a8f98c527",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26330828_580dbb7d",
        "filename": "include/openssl/kyber.h",
        "patchSetId": 15
      },
      "lineNbr": 132,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-03-14T17:35:00Z",
      "side": 1,
      "message": "This publicly exported API is currently unused. Do we want to encourage this mode of calling, or just say \"set up a CBS to call this\" (in which case we should perhaps not add this and the private key wrapper at this time)",
      "revId": "edad4de19c3ea20a036d30fa838ff66a8f98c527",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3336db0_19100c11",
        "filename": "include/openssl/kyber.h",
        "patchSetId": 15
      },
      "lineNbr": 132,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-03-14T18:02:20Z",
      "side": 1,
      "message": "(alternatively is this the one true way and we should make the CBS version private?)",
      "parentUuid": "26330828_580dbb7d",
      "revId": "edad4de19c3ea20a036d30fa838ff66a8f98c527",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6eebde09_5bf38a20",
        "filename": "include/openssl/kyber.h",
        "patchSetId": 15
      },
      "lineNbr": 132,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-03-15T23:17:12Z",
      "side": 1,
      "message": "No strong feelings. We have both for RSA, but I think that was more an artifact of us figuring it out at the time. The \"parse\" model where we leave trailing data in does seem to result in people forgetting to check for trailing data all the time, so I\u0027m not that satisfied with it. But \"parse_foo\" feels much more natural of a name than \"foo_from_bytes\" to me. Especially since it captures the format better. E.g. if foo has two serializations (FooRed and FooBlue), we can have \"parse_foo_red\" and \"parse_foo_blue\".\n\nSee also go/cbs-api-thoughts :-)\n\n(Though really I suspect we should make an EVP_KEM but that\u0027s definitely not for this CL! 😄)",
      "parentUuid": "a3336db0_19100c11",
      "revId": "edad4de19c3ea20a036d30fa838ff66a8f98c527",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    }
  ]
}