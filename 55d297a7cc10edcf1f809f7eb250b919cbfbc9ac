{
  "comments": [
    {
      "key": {
        "uuid": "788f07ae_5ef735be",
        "filename": "crypto/pkcs8/pkcs12_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 726,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-09-29T18:18:33Z",
      "side": 1,
      "message": "ERR_clear_error() here since you\u0027re expecting this one to fail. (Otherwise a failure in PKCS12_parse will get mixed in with this failure.)",
      "revId": "55d297a7cc10edcf1f809f7eb250b919cbfbc9ac",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e2e2591_7d83f58e",
        "filename": "crypto/pkcs8/pkcs12_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 726,
      "author": {
        "id": 5005
      },
      "writtenOn": "2015-09-29T18:32:48Z",
      "side": 1,
      "message": "There\u0027s an |ERR_clear_error| in |PKCS12_verify_mac| so I don\u0027t think that it\u0027s needed here.",
      "parentUuid": "788f07ae_5ef735be",
      "revId": "55d297a7cc10edcf1f809f7eb250b919cbfbc9ac",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3872ef91_d4b4fc07",
        "filename": "include/openssl/pkcs8.h",
        "patchSetId": 1
      },
      "lineNbr": 173,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-09-29T18:18:33Z",
      "side": 1,
      "message": "[Another option could be to malloc a password_len + 1 buffer if you want to slightly more honor the types and not read password_len + 1 bytes, but the code in question doesn\u0027t care, so this seems fine.]",
      "range": {
        "startLine": 173,
        "startChar": 42,
        "endLine": 173,
        "endChar": 66
      },
      "revId": "55d297a7cc10edcf1f809f7eb250b919cbfbc9ac",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e2e2591_7d39b59f",
        "filename": "include/openssl/pkcs8.h",
        "patchSetId": 1
      },
      "lineNbr": 173,
      "author": {
        "id": 5005
      },
      "writtenOn": "2015-09-29T18:32:48Z",
      "side": 1,
      "message": "I\u0027m not sure what you\u0027re suggesting here. If we want to check that the \"final\" byte is NUL then we have to read off the \"end\" of the given buffer. Basically I wanted the semantics to be that, if this function returns one then PKCS12_parse with the same |password| should work.",
      "parentUuid": "3872ef91_d4b4fc07",
      "range": {
        "startLine": 173,
        "startChar": 42,
        "endLine": 173,
        "endChar": 66
      },
      "revId": "55d297a7cc10edcf1f809f7eb250b919cbfbc9ac",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "783d479e_6ec60f85",
        "filename": "include/openssl/pkcs8.h",
        "patchSetId": 1
      },
      "lineNbr": 173,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-09-29T18:41:11Z",
      "side": 1,
      "message": "I mean that we could do something like:\n\n   if (memchr(password, 0, password_len) !\u003d NULL) {\n     return 0;\n   }\n   char *password_c \u003d OPENSSL_malloc(password_len + 1);\n   memcpy(password_c, password, password_len);\n   password_c[password_len] \u003d \u0027\\0\u0027;\n\n   // Pass password_c into PKCS12_parse.\n   // TODO: malloc failure, NULL password is apparently\n   // distinct from empty password, just to make things\n   // more confusing.\n\nI don\u0027t actually think this is really worth the trouble. :-) This would just be if we want to behave like other ptr/length APIs where you only read length bytes, not length+1.\n\nThat PKCS12_parse can\u0027t take a pointer-length means that the length+1\u0027th byte had to be valid and 0 anyway, unless someone was being ridiculous and passed a different pointer to PKCS12_parse (say, a malloc\u0027d copy with a NUL put on the end).",
      "parentUuid": "2e2e2591_7d39b59f",
      "range": {
        "startLine": 173,
        "startChar": 42,
        "endLine": 173,
        "endChar": 66
      },
      "revId": "55d297a7cc10edcf1f809f7eb250b919cbfbc9ac",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e2e2591_a0bc96a2",
        "filename": "include/openssl/pkcs8.h",
        "patchSetId": 1
      },
      "lineNbr": 173,
      "author": {
        "id": 5005
      },
      "writtenOn": "2015-09-29T20:30:30Z",
      "side": 1,
      "message": "Oh, I see. I\u0027m of the opinion that we should treat the pointer the same as |PKCS12_parse| as much as possible here.",
      "parentUuid": "783d479e_6ec60f85",
      "range": {
        "startLine": 173,
        "startChar": 42,
        "endLine": 173,
        "endChar": 66
      },
      "revId": "55d297a7cc10edcf1f809f7eb250b919cbfbc9ac",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "98611bbe_77c6d084",
        "filename": "include/openssl/pkcs8.h",
        "patchSetId": 1
      },
      "lineNbr": 177,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-09-29T18:18:33Z",
      "side": 1,
      "message": "[FYI, upstream allowed this to be -1. I think we don\u0027t need to care.]",
      "range": {
        "startLine": 177,
        "startChar": 37,
        "endLine": 177,
        "endChar": 43
      },
      "revId": "55d297a7cc10edcf1f809f7eb250b919cbfbc9ac",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e2e2591_5d3ef989",
        "filename": "include/openssl/pkcs8.h",
        "patchSetId": 1
      },
      "lineNbr": 177,
      "author": {
        "id": 5005
      },
      "writtenOn": "2015-09-29T18:32:48Z",
      "side": 1,
      "message": "Ah thanks. Actually that\u0027s easy to cope with and having a size_t argument (and thus crashing in that case) would probably be a bit sharp.",
      "parentUuid": "98611bbe_77c6d084",
      "range": {
        "startLine": 177,
        "startChar": 37,
        "endLine": 177,
        "endChar": 43
      },
      "revId": "55d297a7cc10edcf1f809f7eb250b919cbfbc9ac",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    }
  ]
}