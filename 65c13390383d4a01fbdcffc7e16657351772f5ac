{
  "comments": [
    {
      "key": {
        "uuid": "02a174ea_5c897de3",
        "filename": "include/openssl/ssl.h",
        "patchSetId": 2
      },
      "lineNbr": 3302,
      "author": {
        "id": 5415
      },
      "writtenOn": "2018-04-27T22:50:33Z",
      "side": 1,
      "message": "Maybe also add:\n\n// Additionally, APIs to query handshake configuration options, such as |SSL_get_ciphers|, may not be called after the handshake.",
      "revId": "65c13390383d4a01fbdcffc7e16657351772f5ac",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ccaa465_de2aab57",
        "filename": "include/openssl/ssl.h",
        "patchSetId": 2
      },
      "lineNbr": 3302,
      "author": {
        "id": 5645
      },
      "writtenOn": "2018-05-01T06:45:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "02a174ea_5c897de3",
      "revId": "65c13390383d4a01fbdcffc7e16657351772f5ac",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7dded19e_2a313962",
        "filename": "ssl/handoff.cc",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 5415
      },
      "writtenOn": "2018-04-27T22:50:33Z",
      "side": 1,
      "message": "Probably similarly ought to live on hs directly, but feel free to do this as a follow up.",
      "revId": "65c13390383d4a01fbdcffc7e16657351772f5ac",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2f0f856_841becee",
        "filename": "ssl/handoff.cc",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 5645
      },
      "writtenOn": "2018-05-01T06:45:51Z",
      "side": 1,
      "message": "Why so?  I don\u0027t have a super-principled way of making the distinction, but it seems more like config than state.",
      "parentUuid": "7dded19e_2a313962",
      "revId": "65c13390383d4a01fbdcffc7e16657351772f5ac",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b8a8ce47_c3c7eee4",
        "filename": "ssl/handoff.cc",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 5415
      },
      "writtenOn": "2018-05-01T20:37:57Z",
      "side": 1,
      "message": "Hrm, maybe. I guess I saw it as a property of the connection: for this particular connection, I\u0027ve decided not to bother with this whole handoff thing. But yeah the notion is not very sound for stuff you set on a callback.\n\n*shrug* Whatever.",
      "parentUuid": "a2f0f856_841becee",
      "revId": "65c13390383d4a01fbdcffc7e16657351772f5ac",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f8919f0_007acde8",
        "filename": "ssl/internal.h",
        "patchSetId": 2
      },
      "lineNbr": 3139,
      "author": {
        "id": 5415
      },
      "writtenOn": "2018-04-27T22:50:33Z",
      "side": 1,
      "message": "Okay, I think I understand a bit more why you rather wanted SSL_CTX to be part of the SSL_CONFIG. Ah well. :-/",
      "revId": "65c13390383d4a01fbdcffc7e16657351772f5ac",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ffb63d52_f6b86d02",
        "filename": "ssl/ssl_lib.cc",
        "patchSetId": 2
      },
      "lineNbr": 889,
      "author": {
        "id": 5415
      },
      "writtenOn": "2018-04-27T22:50:33Z",
      "side": 1,
      "message": "It occurs to me that, in order to use it in Chrome, I\u0027m probably going to need to make this implicitly ignore shed_handshake_config if !server + renego is allowed, and then separately, if you take renego away, re-evaluate it. But don\u0027t worry about. We can figure that out on the Chrome side after you land this. It won\u0027t affect servers, just clients.",
      "revId": "65c13390383d4a01fbdcffc7e16657351772f5ac",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c4d095e_6bdf5ef8",
        "filename": "ssl/ssl_lib.cc",
        "patchSetId": 2
      },
      "lineNbr": 889,
      "author": {
        "id": 5645
      },
      "writtenOn": "2018-05-01T06:45:51Z",
      "side": 1,
      "message": "Not sure I follow: is the idea to cover the case where shedding is enabled for a client and SSL_do_handshake runs a second time during renegotiation?",
      "parentUuid": "ffb63d52_f6b86d02",
      "revId": "65c13390383d4a01fbdcffc7e16657351772f5ac",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c8956ddf_cc917e37",
        "filename": "ssl/ssl_lib.cc",
        "patchSetId": 2
      },
      "lineNbr": 889,
      "author": {
        "id": 5415
      },
      "writtenOn": "2018-05-01T20:37:57Z",
      "side": 1,
      "message": "Chrome is stuck supporting renegotiation for HTTP/1.1, but HTTP/2 forbids it. So what we do is:\n\n1. Clear SSL object with renegotiation enabled.\n2. Run the handshake to completion.\n3. If ALPN is h2, turn renegotiation back off. If it\u0027s http/1.1, leave it on.\n\nIf HTTP/1.1, we\u0027re stuck not shedding the handshake config. It\u0027s obnoxious but so it goes. (Although, I could imagine doing some sort of hilarious retry thing...) But for long-lived HTTP/2 connections, it would be nice to shed things. So I was thinking:\n\nvoid ssl_maybe_shed_handshake_config(SSL *ssl) {\n  if (ssl-\u003es3-\u003ehs ||\n      !ssl-\u003econfig ||\n      !ssl-\u003econfig-\u003eshed_handshake_config) {\n    return;\n  }\n  // Clients can\u0027t shed handshake configuration if they allow renego.\n  if (!ssl-\u003eserver \u0026\u0026\n      (ssl-\u003erenegotiate_mode \u003d\u003d ssl_renegotiate_once ||\n       ssl-\u003erenegotiate_mode \u003d\u003d ssl_renegotiate_freely)) {\n    return;\n  }\n  Delete(ssl-\u003econfig);\n  ssl-\u003econfig \u003d nullptr;\n}\n\nHere:\n\nif (!early_return) {\n  ssl-\u003es3-\u003ehs.reset();\n  ssl_maybe_shed_handshake_config(ssl);\n}\n\nAnd when configuring renegotiate mode, call ssl_maybe_shed_handshake_config(ssl) after adjusting ssl-\u003erenegotiate_mode.\n\nBut don\u0027t worry about it. I\u0027ll toy with this separately.",
      "parentUuid": "5c4d095e_6bdf5ef8",
      "revId": "65c13390383d4a01fbdcffc7e16657351772f5ac",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    }
  ]
}