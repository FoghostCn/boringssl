{
  "comments": [
    {
      "key": {
        "uuid": "94d74d7e_9ec9cd17",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 5415
      },
      "writtenOn": "2016-06-16T19:31:33Z",
      "side": 1,
      "message": "Actually, do we require this? The field has to be a prime (EC_POINT_set_affine_coordinates_GFp), but I don\u0027t know if the order ends up being a prime. (Or, if not, maybe we should just declare that it needs to be. The arbitrary curve thing was always kinda crazy.)",
      "range": {
        "startLine": 10,
        "startChar": 6,
        "endLine": 10,
        "endChar": 40
      },
      "revId": "8447067d502b6cd01c110cb5629e29feeb266afb",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d4162500_91bd4bcc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 5005
      },
      "writtenOn": "2016-06-16T20:34:29Z",
      "side": 1,
      "message": "Let\u0027s test that |cofactor\u003d\u003d1| in EC_GROUP_set_generator. (That implies that the order is prime.)\n\nThere are curves with non-unity cofactor (curve25519 for one) but the sorts of curves used with this code really should have unity cofactor. All the NIST curves have it and so does the Bitcoin curve and the Brainpool curves.",
      "parentUuid": "94d74d7e_9ec9cd17",
      "range": {
        "startLine": 10,
        "startChar": 6,
        "endLine": 10,
        "endChar": 40
      },
      "revId": "8447067d502b6cd01c110cb5629e29feeb266afb",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c94ccc8d_c4633e2e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 5415
      },
      "writtenOn": "2016-06-17T00:37:32Z",
      "side": 1,
      "message": "Done. (Probably shouldn\u0027t bother even storing the cofactor in that case...)",
      "parentUuid": "d4162500_91bd4bcc",
      "range": {
        "startLine": 10,
        "startChar": 6,
        "endLine": 10,
        "endChar": 40
      },
      "revId": "8447067d502b6cd01c110cb5629e29feeb266afb",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d4162500_fe8f2e3d",
        "filename": "crypto/ecdsa/ecdsa.c",
        "patchSetId": 1
      },
      "lineNbr": 312,
      "author": {
        "id": 5005
      },
      "writtenOn": "2016-06-16T20:34:29Z",
      "side": 1,
      "message": "can we call it order_minus_2 or something?",
      "range": {
        "startLine": 312,
        "startChar": 19,
        "endLine": 312,
        "endChar": 20
      },
      "revId": "8447067d502b6cd01c110cb5629e29feeb266afb",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c94ccc8d_a47042f0",
        "filename": "crypto/ecdsa/ecdsa.c",
        "patchSetId": 1
      },
      "lineNbr": 312,
      "author": {
        "id": 5415
      },
      "writtenOn": "2016-06-17T00:37:32Z",
      "side": 1,
      "message": "It gets used by something else earlier in the function. (I dunno, I just carried X over here.) What if I rename it to tmp, so it\u0027s clear the value isn\u0027t meaningful outside of nearby lines.\n\n(Or I could make a separate BIGNUM. Whatever. :-) )",
      "parentUuid": "d4162500_fe8f2e3d",
      "range": {
        "startLine": 312,
        "startChar": 19,
        "endLine": 312,
        "endChar": 20
      },
      "revId": "8447067d502b6cd01c110cb5629e29feeb266afb",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    }
  ]
}