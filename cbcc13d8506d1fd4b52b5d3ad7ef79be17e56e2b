{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8933343f_0ebfc2df",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-06-02T14:05:10Z",
      "side": 1,
      "message": "Removing Auto-Submit for now until I\u0027ve had a chance to look at this and whether that changes things:\nhttps://bugs.chromium.org/p/boringssl/issues/detail?id\u003d614#c3",
      "revId": "cbcc13d8506d1fd4b52b5d3ad7ef79be17e56e2b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80bd5d3b_5db855c9",
        "filename": "crypto/chacha/chacha.c",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-06-01T19:04:13Z",
      "side": 1,
      "message": "This is kinda silly, but was easy enough. Other possibilities:\nhttps://bugs.chromium.org/p/boringssl/issues/detail?id\u003d614#c1\n\nThoughts? I don\u0027t have a strong preference and just went with preserving the existing behavior on other platforms.",
      "revId": "cbcc13d8506d1fd4b52b5d3ad7ef79be17e56e2b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5554f9c9_e282804a",
        "filename": "crypto/chacha/chacha.c",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-06-01T19:10:46Z",
      "side": 1,
      "message": "The spec seems to be somewhere in between ambiguous on whether it wraps, or implicitly saying overflow isn\u0027t allowed.\n\n\u003e   ChaCha20 successively calls the ChaCha20 block function, with the\n\u003e   same key and nonce, and with successively increasing block counter\n\u003e   parameters.  ChaCha20 then serializes the resulting state by writing\n\u003e   the numbers in little-endian order, creating a keystream block.\n\nhttps://www.rfc-editor.org/rfc/rfc7539.html#section-2.4\n\nWrapping isn\u0027t \"successively increasing\". But it also doesn\u0027t say what to do if you can\u0027t increase.\n\n\u003e `key_stream \u003d chacha20_block(key, counter+j, nonce)`\n\nUnclear what the normative semantics of that pseudocode is. :-)\n\nhttps://www.rfc-editor.org/rfc/rfc7539.html#section-2.4.1\n\nSo we can also say the assembly is undefined as to which it does and then the C code normalizes and calls `abort()` if you do something ridiculous.",
      "parentUuid": "80bd5d3b_5db855c9",
      "revId": "cbcc13d8506d1fd4b52b5d3ad7ef79be17e56e2b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "cbcc13d8506d1fd4b52b5d3ad7ef79be17e56e2b",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "cbcc13d8506d1fd4b52b5d3ad7ef79be17e56e2b",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}