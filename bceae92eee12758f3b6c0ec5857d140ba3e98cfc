{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d5f6a605_08e96eb2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-01-23T16:45:38Z",
      "side": 1,
      "message": "go links only work for Googlers. Please use https://crrev.com/c/4187222 instead.\n\nThat said, I don\u0027t think this function is the one you want. We use BN_mod_inverse_blinded for RSA things, because the modulus is not a prime.\n\nFor ECC, we\u0027re just inverting modulo a prime and typically use Fermat\u0027s Little Theorem and just raise to the p-2.\n\nI would say we probably should move BN_mod_inverse_blinded to a private header. But I see some other code uses it. That code probably should move to BoringSSL in time, but I suppose that\u0027s a lot more work. (We\u0027re not trying to support general-purpose constant-time BIGNUM operations. Most of the true constant-time stuff is private to the library. There are a lot of subtleties around the widths of your BIGNUMs that, due to API constraints, we have to track implicitly in confusing ways.)",
      "revId": "bceae92eee12758f3b6c0ec5857d140ba3e98cfc",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a5a29008_0d1418aa",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 15646
      },
      "writtenOn": "2023-01-24T12:53:23Z",
      "side": 1,
      "message": "Deleting this change after offline discussion, we will follow the suggestion.",
      "parentUuid": "d5f6a605_08e96eb2",
      "revId": "bceae92eee12758f3b6c0ec5857d140ba3e98cfc",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "bceae92eee12758f3b6c0ec5857d140ba3e98cfc",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "bceae92eee12758f3b6c0ec5857d140ba3e98cfc",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}