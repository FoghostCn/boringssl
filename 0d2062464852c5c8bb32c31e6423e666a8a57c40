{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1daf14ad_2a7f957a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5005
      },
      "writtenOn": "2022-12-20T00:32:01Z",
      "side": 1,
      "message": "David: do you feel confident enough about reviewing Rust changes? If not, do we have anyone?",
      "revId": "0d2062464852c5c8bb32c31e6423e666a8a57c40",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e75ad1cd_0c901998",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5415
      },
      "writtenOn": "2022-12-20T19:11:15Z",
      "side": 1,
      "message": "Not especially... could we find whoever owns this on Android, maybe?",
      "parentUuid": "1daf14ad_2a7f957a",
      "revId": "0d2062464852c5c8bb32c31e6423e666a8a57c40",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ee3b4454_1351ac16",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 15541
      },
      "writtenOn": "2023-01-04T20:04:17Z",
      "side": 1,
      "message": "+1 to adding the `include_directories` line\n\nRest of the stuff is explained long form, but I don\u0027t think we want `cargo` to be the entry-point for the `boringssl` build when using it with Rust.",
      "revId": "0d2062464852c5c8bb32c31e6423e666a8a57c40",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cdd67e54_dbd3a4e5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 15541
      },
      "writtenOn": "2023-01-04T20:04:17Z",
      "side": 1,
      "message": "This seems to invert the structure we were expecting for the build - previously, you built boringssl, and it produced a separate Rust source tree, suitable for use with a Rust project.\n\nNow, using Cargo on the Rust tree will build boringssl, which I don\u0027t think is the intended direction. This makes cargo the entry-point for building boringssl.\n\nThis also makes the resulting library unusable by Cargo without being located next to the boringssl source.\n\nWe could do this, it would just mean we need to:\n1. Update the sed line in Android\n2. Add the ability to pass arguments to camke through Cargo\n3. Update the Rust `openssl` crate upstream to use the new feature to pass arguments through\n\nIf anyone else is using this support with Cargo already and has their own build of `boringssl`, they too might need to be updated (the only possibility I can think of here is CrOS, but I don\u0027t think they have that yet).\n\nI\u0027m not convinced that we should be driving the boringssl build from Rust, rather than doing a boringssl build, then separately using the resulting Rust bindings, whether through Cargo or not.",
      "parentUuid": "e75ad1cd_0c901998",
      "revId": "0d2062464852c5c8bb32c31e6423e666a8a57c40",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f2697ea_292aa97d",
        "filename": "rust/src/lib.rs",
        "patchSetId": 6
      },
      "lineNbr": 5,
      "author": {
        "id": 5415
      },
      "writtenOn": "2022-12-20T19:11:15Z",
      "side": 1,
      "message": "I recall the way this file worked was a bit of a trouble for Android and they ended up manually forking some file. Will this avoid that?",
      "revId": "0d2062464852c5c8bb32c31e6423e666a8a57c40",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "532c860c_cb73e08e",
        "filename": "rust/src/lib.rs",
        "patchSetId": 6
      },
      "lineNbr": 5,
      "author": {
        "id": 15426
      },
      "writtenOn": "2023-01-04T19:39:20Z",
      "side": 1,
      "message": "Our project also needs to build against Android. As I understand, Android doesn\u0027t use build.rs or cmake, and currently has a \"gensrcs\" rule to replace the \"${INCLUDES}\" with \"pub use\" from the code generated by bindgen.\n\nThis change doesn\u0027t really change the structure, but a minor change will be needed in https://cs.android.com/android/platform/superproject/+/master:external/boringssl/Android.bp;l\u003d761;drc\u003de2d6838130f2977a1e7a4f14bc53693103339099 to reflect the new input file",
      "parentUuid": "9f2697ea_292aa97d",
      "revId": "0d2062464852c5c8bb32c31e6423e666a8a57c40",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    }
  ]
}