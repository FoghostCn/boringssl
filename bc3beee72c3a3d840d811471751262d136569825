{
  "comments": [
    {
      "key": {
        "uuid": "53d21de8_b2e66024",
        "filename": "ssl/ssl_lib.c",
        "patchSetId": 1
      },
      "lineNbr": 1275,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-06-26T23:01:29Z",
      "side": 1,
      "message": "SSL3_CK_SCSV?",
      "range": {
        "startLine": 1275,
        "startChar": 16,
        "endLine": 1275,
        "endChar": 25
      },
      "revId": "bc3beee72c3a3d840d811471751262d136569825",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3760d12_89faddb1",
        "filename": "ssl/ssl_lib.c",
        "patchSetId": 1
      },
      "lineNbr": 1275,
      "author": {
        "id": 5005
      },
      "writtenOn": "2015-07-01T19:27:31Z",
      "side": 1,
      "message": "Thank you.",
      "parentUuid": "53d21de8_b2e66024",
      "range": {
        "startLine": 1275,
        "startChar": 16,
        "endLine": 1275,
        "endChar": 25
      },
      "revId": "bc3beee72c3a3d840d811471751262d136569825",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53d21de8_32db505e",
        "filename": "ssl/t1_lib.c",
        "patchSetId": 1
      },
      "lineNbr": 1009,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-06-26T23:01:29Z",
      "side": 1,
      "message": "This doesn\u0027t actually check for the initial handshake. (The code seems to be the same in upstream. I guess they forgot?)\n\nI suppose we can just fix the comment and ignore it. Or we could do\n\n  LEGACY_SERVER_CONNECT \u003d\u003e don\u0027t require it on initial\n  ALLOW_UNSAFE_LEGACY_RENEG \u003d\u003e don\u0027t require it on initial or renego\n\n(Though that would probably mean I\u0027d have to go turn it on the flag in Chrome. Trying to enforce either is probably not worth the effort.)",
      "range": {
        "startLine": 1009,
        "startChar": 34,
        "endLine": 1009,
        "endChar": 56
      },
      "revId": "bc3beee72c3a3d840d811471751262d136569825",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3760d12_495b8555",
        "filename": "ssl/t1_lib.c",
        "patchSetId": 1
      },
      "lineNbr": 1009,
      "author": {
        "id": 5005
      },
      "writtenOn": "2015-07-01T19:27:31Z",
      "side": 1,
      "message": "I think SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION is superfluous now so I\u0027ve removed support and #define\u0027d it to zero.\n\nWe don\u0027t support renegotiation as a server now so it doesn\u0027t do anything that LEGACY_SERVER_CONNECT doesn\u0027t do.",
      "parentUuid": "53d21de8_32db505e",
      "range": {
        "startLine": 1009,
        "startChar": 34,
        "endLine": 1009,
        "endChar": 56
      },
      "revId": "bc3beee72c3a3d840d811471751262d136569825",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53d21de8_f2ece809",
        "filename": "ssl/t1_lib.c",
        "patchSetId": 1
      },
      "lineNbr": 1086,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-06-26T23:01:29Z",
      "side": 1,
      "message": "Can probably just drop this since servers never renegotiate.",
      "revId": "bc3beee72c3a3d840d811471751262d136569825",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3760d12_a9615908",
        "filename": "ssl/t1_lib.c",
        "patchSetId": 1
      },
      "lineNbr": 1086,
      "author": {
        "id": 5005
      },
      "writtenOn": "2015-07-01T19:27:31Z",
      "side": 1,
      "message": "(Done, see above.)",
      "parentUuid": "53d21de8_f2ece809",
      "revId": "bc3beee72c3a3d840d811471751262d136569825",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53d21de8_92e9dcf8",
        "filename": "ssl/t1_lib.c",
        "patchSetId": 1
      },
      "lineNbr": 1741,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-06-26T23:01:29Z",
      "side": 1,
      "message": "What\u0027s this assert for?",
      "revId": "bc3beee72c3a3d840d811471751262d136569825",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3760d12_89649d19",
        "filename": "ssl/t1_lib.c",
        "patchSetId": 1
      },
      "lineNbr": 1741,
      "author": {
        "id": 5005
      },
      "writtenOn": "2015-07-01T19:27:31Z",
      "side": 1,
      "message": "It\u0027s because this extension can be an SCSV, thus several parts of the code need to tweak the |received| and |sent| bitsets. Thus I\u0027m saying that renego is always index zero.",
      "parentUuid": "53d21de8_92e9dcf8",
      "revId": "bc3beee72c3a3d840d811471751262d136569825",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    }
  ]
}