{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b045940e_64ed0edb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-07-18T19:49:27Z",
      "side": 1,
      "message": "To me this really feels like planning for something that should really never happen in practice, I can\u0027t imagine anything supporting sockets that doesn\u0027t support file descriptors, and even if such a thing existed our socket support is so file descriptor dependent it probably wouldn\u0027t work.\n\nYou sure you need this?",
      "range": {
        "startLine": 10,
        "startChar": 17,
        "endLine": 12,
        "endChar": 19
      },
      "revId": "1156649c1543085c15c2b1043e76b5df9d675918",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34f9983d_f6c85362",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-07-18T19:51:09Z",
      "side": 1,
      "message": "I mean I guess windows is *techincally* that?",
      "parentUuid": "b045940e_64ed0edb",
      "range": {
        "startLine": 10,
        "startChar": 17,
        "endLine": 12,
        "endChar": 19
      },
      "revId": "1156649c1543085c15c2b1043e76b5df9d675918",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e91173d_bce17306",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-07-18T20:19:58Z",
      "side": 1,
      "message": "\u003e You sure you need this?\n\nUnclear. This really only came out of https://boringssl-review.googlesource.com/c/boringssl/+/61730/7/ssl/ssl_lib.cc and trying to figure out how to guard `SSL_get_rfd`. `SSL_set_rfd` is `OPENSSL_NO_SOCK` because, despite the name, it makes a socket BIO, not an fd BIO. But then it also calls `BIO_set_fd`. Also that might suggest `SSL_get_rfd` is the same, but that\u0027s weird because it only calls `BIO_get_fd`, which is fd not socket. So that\u0027s all a mess.\n\nReally this means copying OpenSSL\u0027s separate `OPENSSL_NO_POSIX_IO` and `OPENSSL_NO_SOCK` abstractions may have been a mistake, and perhaps we should have just had one for both. But, well, we made both of them so I figured it was easy enough to just make those unconditional and not have to think about it too hard.\n\nArguably an embedded application could also make their own custom `BIO_TYPE_DESCRIPTOR` BIO, but I doubt it. :-)\n\nBut do we need this? Probably not. It just seemed the most self-consistent, even though it\u0027s accounting for cases that will never happen.\n\n\u003e I mean I guess windows is techincally that?\n\nNah, Windows has fds. They\u0027re a fake userland construct, but good enough for us.",
      "parentUuid": "34f9983d_f6c85362",
      "range": {
        "startLine": 10,
        "startChar": 17,
        "endLine": 12,
        "endChar": 19
      },
      "revId": "1156649c1543085c15c2b1043e76b5df9d675918",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ef8ea69_95296f36",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-07-18T20:23:56Z",
      "side": 1,
      "message": "I am thinking more about what the rust people are going to do when respecting the OPENSSL_NO\u0027s. \n\nWhile it\u0027s certainly possible for them to accomodate differences, it would probably be much nicer to the rest of the world if the OPENSSL_NO_ meant something like consisitency as much as possible.",
      "parentUuid": "0e91173d_bce17306",
      "range": {
        "startLine": 10,
        "startChar": 17,
        "endLine": 12,
        "endChar": 19
      },
      "revId": "1156649c1543085c15c2b1043e76b5df9d675918",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de56b5a2_cc28b131",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-07-18T20:31:28Z",
      "side": 1,
      "message": "Hopefully no one ever builds rust-openssl for these platforms. :-/\n\nIf they do, I guess yeah matching OpenSSL\u0027s `OPENSSL_NO_*` names is most convenient there. OpenSSL likewise defines `BIO_set_fd` and `BIO_get_fd` unconditionally.\n\nBut it\u0027s moot because rust-openssl doesn\u0027t bind this part of BIO anyway. They just bind the custom BIO stuff, probably to bridge it into Rust\u0027s socket, etc., stuff.",
      "parentUuid": "8ef8ea69_95296f36",
      "range": {
        "startLine": 10,
        "startChar": 17,
        "endLine": 12,
        "endChar": 19
      },
      "revId": "1156649c1543085c15c2b1043e76b5df9d675918",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "446b95d1_36e68841",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 5415
      },
      "writtenOn": "2023-07-18T20:31:58Z",
      "side": 1,
      "message": "(Actually, I think Trusty does use rust-openssl. At least, they have a build for it that seems to be involved in some headaches.)",
      "parentUuid": "de56b5a2_cc28b131",
      "range": {
        "startLine": 10,
        "startChar": 17,
        "endLine": 12,
        "endChar": 19
      },
      "revId": "1156649c1543085c15c2b1043e76b5df9d675918",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "92269a00_4762d4bf",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 14196
      },
      "writtenOn": "2023-07-18T20:52:42Z",
      "side": 1,
      "message": "I guess if this is being consistent, I\u0027m good with it then.",
      "parentUuid": "446b95d1_36e68841",
      "range": {
        "startLine": 10,
        "startChar": 17,
        "endLine": 12,
        "endChar": 19
      },
      "revId": "1156649c1543085c15c2b1043e76b5df9d675918",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    }
  ]
}