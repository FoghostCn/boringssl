{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "76af5dc6_2ab5238b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 9581
      },
      "writtenOn": "2020-12-10T16:28:49Z",
      "side": 1,
      "message": "Ready to review!",
      "revId": "a80f7297d8e32b029f535f58a302ac8bea0136e8",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45057abe_6c8ada01",
        "filename": "ssl/handshake_server.cc",
        "patchSetId": 8
      },
      "lineNbr": 600,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-12-15T20:15:59Z",
      "side": 1,
      "message": "Rather than write this loop, just call ssl_client_hello_get_extension.\n\nThat said, I think you can just put this in a callback. (But without the TODO since that wouldn\u0027t be done in the callback. And in draft-09, they\u0027ll be separate code points altogether.)\n\nEdit: Oh, another reason to process these in separate places: suppose you see a non-empty ECH extension. You would then decrypt it and *then* look for an empty ECH extension in the resulting ClientHello. So the two operations actually need to happen at different stages.",
      "revId": "a80f7297d8e32b029f535f58a302ac8bea0136e8",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f321ddb6_a0a7b5f7",
        "filename": "ssl/handshake_server.cc",
        "patchSetId": 8
      },
      "lineNbr": 600,
      "author": {
        "id": 9581
      },
      "writtenOn": "2020-12-17T16:33:43Z",
      "side": 1,
      "message": "Done, moved to the callback.",
      "parentUuid": "45057abe_6c8ada01",
      "revId": "a80f7297d8e32b029f535f58a302ac8bea0136e8",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4327eed2_fbee9de6",
        "filename": "ssl/handshake_server.cc",
        "patchSetId": 8
      },
      "lineNbr": 610,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-12-15T20:15:59Z",
      "side": 1,
      "message": "Mind adding one of those? :-)",
      "revId": "a80f7297d8e32b029f535f58a302ac8bea0136e8",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e47d6cd8_eed92df7",
        "filename": "ssl/handshake_server.cc",
        "patchSetId": 8
      },
      "lineNbr": 610,
      "author": {
        "id": 9581
      },
      "writtenOn": "2020-12-17T16:33:43Z",
      "side": 1,
      "message": "Hmm, the next CL adds the BoGo side, which makes it a lot easier to test this (ProtocolBugs.ECHServerMustAcceptInner).\n\nDo you think I should add this test in the next CL? Squash these two CLs?",
      "parentUuid": "4327eed2_fbee9de6",
      "revId": "a80f7297d8e32b029f535f58a302ac8bea0136e8",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ce400b6_811da240",
        "filename": "ssl/handshake_server.cc",
        "patchSetId": 8
      },
      "lineNbr": 610,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-12-17T16:42:36Z",
      "side": 1,
      "message": "We need tests in this CL to land it. But if you squash the whole thing, we\u0027ll be landing a whole lot of ECH support in BoGo without knowing what tests we\u0027re actually trying to write.\n\nRather, forward just the ech_is_inner and acceptance signal bits and test just that? We need to test this separately from ECH anyway because this logic needs to run even if the server didn\u0027t decrypt things or have ECH configured. This is why we split it into a separate extension in draft-09. It\u0027s really the same thing, but makes the relationship clearer. (Same comment as how the original processing order in this CL wasn\u0027t quite right.)\n\nTo that end, now that draft-09 is stamped, let\u0027s start by getting to draft-09 since the acceptance signal has changed non-trivially anyway.",
      "parentUuid": "e47d6cd8_eed92df7",
      "revId": "a80f7297d8e32b029f535f58a302ac8bea0136e8",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e44a78b_6d1e4b90",
        "filename": "ssl/handshake_server.cc",
        "patchSetId": 8
      },
      "lineNbr": 610,
      "author": {
        "id": 9581
      },
      "writtenOn": "2020-12-21T22:40:50Z",
      "side": 1,
      "message": "OK, I\u0027ve added a tiny parent CL to update the GREASE code to draft-09.\n\nThis CL now adds the draft-09 acceptance behavior.\n\nI\u0027ve added two tests for the ech_is_inner behavior. (1) Backend server accepts when client sends empty ech_is_inner, and (2) handshake fails when client sends nonempty ech_is_inner.\n\nI also want to add a third test that the handshake fails when encrypted_client_hello and ech_is_inner are sent simultaneously.",
      "parentUuid": "5ce400b6_811da240",
      "revId": "a80f7297d8e32b029f535f58a302ac8bea0136e8",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b37b3c39_4ced878f",
        "filename": "ssl/internal.h",
        "patchSetId": 8
      },
      "lineNbr": 1657,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-12-15T20:15:59Z",
      "side": 1,
      "message": "With the other booleans and as a bitmask. I\u0027d maybe also call this ech_accept_confirmation or maybe ech_is_inner to match the future draft-09 game. (I worry ech_accept sounds too much like we accepted ECH which isn\u0027t *quite* true.)",
      "revId": "a80f7297d8e32b029f535f58a302ac8bea0136e8",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7c16b4b8_d56d472f",
        "filename": "ssl/internal.h",
        "patchSetId": 8
      },
      "lineNbr": 1657,
      "author": {
        "id": 9581
      },
      "writtenOn": "2020-12-17T16:33:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b37b3c39_4ced878f",
      "revId": "a80f7297d8e32b029f535f58a302ac8bea0136e8",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e4d52a9f_65e0a089",
        "filename": "ssl/tls13_enc.cc",
        "patchSetId": 8
      },
      "lineNbr": 511,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-12-15T20:15:59Z",
      "side": 1,
      "message": "Nit: client_random and server_random is how we usually refer to these and avoids the appreviation.",
      "range": {
        "startLine": 511,
        "startChar": 61,
        "endLine": 511,
        "endChar": 63
      },
      "revId": "a80f7297d8e32b029f535f58a302ac8bea0136e8",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f67d842_9ad5cdff",
        "filename": "ssl/tls13_enc.cc",
        "patchSetId": 8
      },
      "lineNbr": 511,
      "author": {
        "id": 9581
      },
      "writtenOn": "2020-12-17T16:33:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e4d52a9f_65e0a089",
      "range": {
        "startLine": 511,
        "startChar": 61,
        "endLine": 511,
        "endChar": 63
      },
      "revId": "a80f7297d8e32b029f535f58a302ac8bea0136e8",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7eb1cb81_ad5a7ffc",
        "filename": "ssl/tls13_enc.cc",
        "patchSetId": 8
      },
      "lineNbr": 513,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-12-15T20:15:59Z",
      "side": 1,
      "message": "Style nit: outputs before inputs.",
      "revId": "a80f7297d8e32b029f535f58a302ac8bea0136e8",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e3eca7bf_e1b0daf4",
        "filename": "ssl/tls13_enc.cc",
        "patchSetId": 8
      },
      "lineNbr": 513,
      "author": {
        "id": 9581
      },
      "writtenOn": "2020-12-17T16:33:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7eb1cb81_ad5a7ffc",
      "revId": "a80f7297d8e32b029f535f58a302ac8bea0136e8",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    }
  ]
}