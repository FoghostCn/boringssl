{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "32511bc3_a41b3909",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5415
      },
      "writtenOn": "2024-02-26T22:50:37Z",
      "side": 1,
      "message": "Sorry about taking so long to get to this. This looks pretty good!",
      "revId": "6266d6a0920785cdd945f1bcee247dda68492fd7",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41db1042_cc710ed0",
        "filename": "ssl/test/runner/ecdsa_p224_key.pem",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5415
      },
      "writtenOn": "2024-02-26T22:50:37Z",
      "side": 1,
      "message": "I remember, a long long time ago, the NSS folks had a hard time parsing BEGIN EC PRIVATE KEY and needed the PKCS#8 BEGIN PRIVATE KEY form. Any reason for the change? (TBH you can probably just leave the files unmodified.)\n\nEdit: Ah, I guess it was to use Parse{PKCS1,EC}PrivateKey instead of ParsePKCS8PrivateKey?",
      "revId": "6266d6a0920785cdd945f1bcee247dda68492fd7",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a5bc310c_b129c234",
        "filename": "ssl/test/runner/ecdsa_p224_key.pem",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 16056
      },
      "writtenOn": "2024-02-27T02:37:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "41db1042_cc710ed0",
      "revId": "6266d6a0920785cdd945f1bcee247dda68492fd7",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7ad888e_38cd6e6f",
        "filename": "ssl/test/runner/key.pem",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5415
      },
      "writtenOn": "2024-02-26T22:50:37Z",
      "side": 1,
      "message": "If you\u0027re deleting/renaming this one, guessing we also want to delete cert.pem.",
      "revId": "6266d6a0920785cdd945f1bcee247dda68492fd7",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "14b3eed9_33975bb1",
        "filename": "ssl/test/runner/key.pem",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 16056
      },
      "writtenOn": "2024-02-27T02:37:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c7ad888e_38cd6e6f",
      "revId": "6266d6a0920785cdd945f1bcee247dda68492fd7",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fbfd4db4_b6ee0a11",
        "filename": "ssl/test/runner/runner.go",
        "patchSetId": 4
      },
      "lineNbr": 155,
      "author": {
        "id": 5415
      },
      "writtenOn": "2024-02-26T22:52:07Z",
      "side": 1,
      "message": "particularly",
      "range": {
        "startLine": 155,
        "startChar": 32,
        "endLine": 155,
        "endChar": 43
      },
      "revId": "6266d6a0920785cdd945f1bcee247dda68492fd7",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cc885db5_399b511f",
        "filename": "ssl/test/runner/runner.go",
        "patchSetId": 4
      },
      "lineNbr": 155,
      "author": {
        "id": 16056
      },
      "writtenOn": "2024-02-27T02:37:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fbfd4db4_b6ee0a11",
      "range": {
        "startLine": 155,
        "startChar": 32,
        "endLine": 155,
        "endChar": 43
      },
      "revId": "6266d6a0920785cdd945f1bcee247dda68492fd7",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "547bb5e5_c8f66730",
        "filename": "ssl/test/runner/runner.go",
        "patchSetId": 4
      },
      "lineNbr": 158,
      "author": {
        "id": 5415
      },
      "writtenOn": "2024-02-26T22:52:07Z",
      "side": 1,
      "message": "dynamically",
      "range": {
        "startLine": 158,
        "startChar": 26,
        "endLine": 158,
        "endChar": 37
      },
      "revId": "6266d6a0920785cdd945f1bcee247dda68492fd7",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e5f6dee2_b3d661a5",
        "filename": "ssl/test/runner/runner.go",
        "patchSetId": 4
      },
      "lineNbr": 158,
      "author": {
        "id": 16056
      },
      "writtenOn": "2024-02-27T02:37:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "547bb5e5_c8f66730",
      "range": {
        "startLine": 158,
        "startChar": 26,
        "endLine": 158,
        "endChar": 37
      },
      "revId": "6266d6a0920785cdd945f1bcee247dda68492fd7",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c09227dc_4205f491",
        "filename": "ssl/test/runner/runner.go",
        "patchSetId": 4
      },
      "lineNbr": 212,
      "author": {
        "id": 5415
      },
      "writtenOn": "2024-02-26T22:50:37Z",
      "side": 1,
      "message": "Looks like this is no longer populated but still defined. It dates to https://boringssl-review.googlesource.com/12261, in order to test that intermediates get sent. E.g. TLS 1.3 has some fun logic to only include extensions on the leaf.",
      "range": {
        "startLine": 212,
        "startChar": 1,
        "endLine": 212,
        "endChar": 20
      },
      "revId": "6266d6a0920785cdd945f1bcee247dda68492fd7",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb8b8039_2ad38fc1",
        "filename": "ssl/test/runner/runner.go",
        "patchSetId": 4
      },
      "lineNbr": 212,
      "author": {
        "id": 16056
      },
      "writtenOn": "2024-02-27T02:37:48Z",
      "side": 1,
      "message": "I brought back rsaChainCertificate (and put it back in the tests that were assuming an intermediate existed), but it\u0027s not... pretty.\n\nPartially this is because, espite Config.Certificates accepting multiple certificates, which -trust-cert takes advantage of to pass the root to the shim, it\u0027s actually never used, in part because Certificate supports multiple certificates (and also because there are only ~4 tests which use a chain rather than a self-signed root).\n\nBecause we use the same file for -cert-file and -trust-cert we end up needing to put the entire chain in a single PEM file. A chain could plausible be represented with multiple certs in Config.Certificate, we\u0027d need a different way to pass certificates to the shim, since we can\u0027t use multiple -cert-file flags (I don\u0027t think?).\n\nI\u0027m not really sure what the best solution here is. The current state \"works\", but it leaves a lot of holes to fall into. I think we probably should make Config.Certificates a single Certificate field, but I think we should also probably come up with a better way to support chains in the long run (that doesn\u0027t involve needing to bundle chains into a single PEM file).\n\nI think probably the best path forward for now is to just land (mostly) as-is, unblocking work on the Go side to integrate the test suite, and then come up with a better refactor in the future, but ðŸ¤·.",
      "parentUuid": "c09227dc_4205f491",
      "range": {
        "startLine": 212,
        "startChar": 1,
        "endLine": 212,
        "endChar": 20
      },
      "revId": "6266d6a0920785cdd945f1bcee247dda68492fd7",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf396660_0fc0b05a",
        "filename": "ssl/test/runner/runner.go",
        "patchSetId": 4
      },
      "lineNbr": 212,
      "author": {
        "id": 5415
      },
      "writtenOn": "2024-02-27T22:28:30Z",
      "side": 1,
      "message": "From chat, it sounds like we could pretty easily resolve this by just adding a separate RootPath field to the Certificate structure.",
      "parentUuid": "fb8b8039_2ad38fc1",
      "range": {
        "startLine": 212,
        "startChar": 1,
        "endLine": 212,
        "endChar": 20
      },
      "revId": "6266d6a0920785cdd945f1bcee247dda68492fd7",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "58e875b3_1a13e5c1",
        "filename": "ssl/test/runner/runner.go",
        "patchSetId": 4
      },
      "lineNbr": 212,
      "author": {
        "id": 16056
      },
      "writtenOn": "2024-02-28T02:47:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cf396660_0fc0b05a",
      "range": {
        "startLine": 212,
        "startChar": 1,
        "endLine": 212,
        "endChar": 20
      },
      "revId": "6266d6a0920785cdd945f1bcee247dda68492fd7",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3fd14275_32606956",
        "filename": "ssl/test/runner/runner.go",
        "patchSetId": 4
      },
      "lineNbr": 284,
      "author": {
        "id": 5415
      },
      "writtenOn": "2024-02-26T22:50:37Z",
      "side": 1,
      "message": "Nit: I\u0027d probably read \"loadKeyDER\" to mean \"load key from DER\" rather than \"load key from PEM and return the DER\".",
      "range": {
        "startLine": 284,
        "startChar": 5,
        "endLine": 284,
        "endChar": 15
      },
      "revId": "6266d6a0920785cdd945f1bcee247dda68492fd7",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e3ce3c1d_eecfd90c",
        "filename": "ssl/test/runner/runner.go",
        "patchSetId": 4
      },
      "lineNbr": 284,
      "author": {
        "id": 16056
      },
      "writtenOn": "2024-02-27T02:37:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3fd14275_32606956",
      "range": {
        "startLine": 284,
        "startChar": 5,
        "endLine": 284,
        "endChar": 15
      },
      "revId": "6266d6a0920785cdd945f1bcee247dda68492fd7",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a398ea47_977020c6",
        "filename": "ssl/test/runner/runner.go",
        "patchSetId": 4
      },
      "lineNbr": 307,
      "author": {
        "id": 5415
      },
      "writtenOn": "2024-02-26T22:50:37Z",
      "side": 1,
      "message": "Nit: These aren\u0027t PKCS#8 private keys anymore, but per other comment, we probably want to just make it all PKCS#8.\n\nThat, in turn, means loadKeyDER can probably return a crypto.PrivateKey and these type-specific wrappers just do a down-cast. Or maybe we skip the wrappers and do the down-cast at the caller?\n\nAside: it\u0027s an existing issue, but in theory we should be looking at `block.Type` to determine how to parse the contents. Once it\u0027s unified, maybe check that it\u0027s \"PRIVATE KEY\" for good measure?",
      "revId": "6266d6a0920785cdd945f1bcee247dda68492fd7",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9221012b_86d2b070",
        "filename": "ssl/test/runner/runner.go",
        "patchSetId": 4
      },
      "lineNbr": 307,
      "author": {
        "id": 16056
      },
      "writtenOn": "2024-02-27T02:37:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a398ea47_977020c6",
      "revId": "6266d6a0920785cdd945f1bcee247dda68492fd7",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0122c22_91468e4a",
        "filename": "ssl/test/runner/runner.go",
        "patchSetId": 4
      },
      "lineNbr": 726,
      "author": {
        "id": 5415
      },
      "writtenOn": "2024-02-26T22:50:37Z",
      "side": 1,
      "message": "Nit: Perhaps `shimCertificate`. We usually say \"shim\" and \"runner\" rather than \"send\" and \"receive\" because it gets ambiguous otherwise.",
      "range": {
        "startLine": 726,
        "startChar": 1,
        "endLine": 726,
        "endChar": 16
      },
      "revId": "6266d6a0920785cdd945f1bcee247dda68492fd7",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "78adc277_112bd7d4",
        "filename": "ssl/test/runner/runner.go",
        "patchSetId": 4
      },
      "lineNbr": 726,
      "author": {
        "id": 16056
      },
      "writtenOn": "2024-02-27T02:37:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c0122c22_91468e4a",
      "range": {
        "startLine": 726,
        "startChar": 1,
        "endLine": 726,
        "endChar": 16
      },
      "revId": "6266d6a0920785cdd945f1bcee247dda68492fd7",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58f20ad4_37b0fcda",
        "filename": "ssl/test/runner/runner.go",
        "patchSetId": 4
      },
      "lineNbr": 1396,
      "author": {
        "id": 5415
      },
      "writtenOn": "2024-02-26T22:50:37Z",
      "side": 1,
      "message": "Hmm, what\u0027s this change for?",
      "revId": "6266d6a0920785cdd945f1bcee247dda68492fd7",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2b107bc_f0fdbe71",
        "filename": "ssl/test/runner/runner.go",
        "patchSetId": 4
      },
      "lineNbr": 1396,
      "author": {
        "id": 16056
      },
      "writtenOn": "2024-02-27T02:37:48Z",
      "side": 1,
      "message": "This is necessary to replace the condition in doExchange which was triggered when there were no certificates passed in, in which case the rsaCertificate was supplied. Now we always send the correct certificate during resumption.",
      "parentUuid": "58f20ad4_37b0fcda",
      "revId": "6266d6a0920785cdd945f1bcee247dda68492fd7",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "127ba78b_8aa4c5d8",
        "filename": "ssl/test/runner/runner.go",
        "patchSetId": 4
      },
      "lineNbr": 1396,
      "author": {
        "id": 5415
      },
      "writtenOn": "2024-02-28T18:04:28Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "f2b107bc_f0fdbe71",
      "revId": "6266d6a0920785cdd945f1bcee247dda68492fd7",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "86d78892_c9be957b",
        "filename": "ssl/test/runner/runner.go",
        "patchSetId": 4
      },
      "lineNbr": 14879,
      "author": {
        "id": 5415
      },
      "writtenOn": "2024-02-26T22:50:37Z",
      "side": 1,
      "message": "Maybe populate this in initKeys, still as channelIDKeyFile? Still a bad hack, but at least in one place.",
      "range": {
        "startLine": 14879,
        "startChar": 56,
        "endLine": 14879,
        "endChar": 70
      },
      "revId": "6266d6a0920785cdd945f1bcee247dda68492fd7",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "63101dd6_7581ca39",
        "filename": "ssl/test/runner/runner.go",
        "patchSetId": 4
      },
      "lineNbr": 14879,
      "author": {
        "id": 16056
      },
      "writtenOn": "2024-02-27T02:37:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "86d78892_c9be957b",
      "range": {
        "startLine": 14879,
        "startChar": 56,
        "endLine": 14879,
        "endChar": 70
      },
      "revId": "6266d6a0920785cdd945f1bcee247dda68492fd7",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9b41080_0ccb0fbb",
        "filename": "ssl/test/runner/runner.go",
        "patchSetId": 4
      },
      "lineNbr": 15465,
      "author": {
        "id": 5415
      },
      "writtenOn": "2024-02-26T22:50:37Z",
      "side": 1,
      "message": "Seems we\u0027re losing coverage on this test since it\u0027s no longer sending an intermediate.",
      "revId": "6266d6a0920785cdd945f1bcee247dda68492fd7",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5badc89f_93c49daa",
        "filename": "ssl/test/runner/runner.go",
        "patchSetId": 4
      },
      "lineNbr": 15465,
      "author": {
        "id": 16056
      },
      "writtenOn": "2024-02-27T02:37:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c9b41080_0ccb0fbb",
      "revId": "6266d6a0920785cdd945f1bcee247dda68492fd7",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    }
  ]
}