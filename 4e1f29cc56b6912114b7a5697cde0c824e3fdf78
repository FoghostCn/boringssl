{
  "comments": [
    {
      "key": {
        "uuid": "56f3dd1a_9e671db8",
        "filename": "crypto/x509/x509_vfy.c",
        "patchSetId": 2
      },
      "lineNbr": 712,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-02-12T18:39:15Z",
      "side": 1,
      "message": "strlen(id-\u003ehost)",
      "revId": "4e1f29cc56b6912114b7a5697cde0c824e3fdf78",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f6a77121_0b5abd35",
        "filename": "crypto/x509/x509_vpm.c",
        "patchSetId": 2
      },
      "lineNbr": 236,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-02-12T18:39:15Z",
      "side": 1,
      "message": "strlen(id-\u003ehost)\n\nThis is currently supported, but a later patch set unsupports it.",
      "range": {
        "startLine": 236,
        "startChar": 51,
        "endLine": 236,
        "endChar": 52
      },
      "revId": "4e1f29cc56b6912114b7a5697cde0c824e3fdf78",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "76bc6132_2fc86927",
        "filename": "crypto/x509/x509_vpm.c",
        "patchSetId": 2
      },
      "lineNbr": 398,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-02-12T18:39:15Z",
      "side": 1,
      "message": "This function should reject embedded NULs. Really int_x509_param_set1 shouldn\u0027t let you pass NULL to the length in that case + have an embedded NUL. But I see a later patch in this series adds this check, so it\u0027s fine as long as we don\u0027t ship anything between the commits.\n\n(Of course, I also wouldn\u0027t trust callers to consistently check the return value here, since right now it only fails on malloc failure, but nevermind that...)",
      "revId": "4e1f29cc56b6912114b7a5697cde0c824e3fdf78",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6c0ad6a_dae285e0",
        "filename": "crypto/x509v3/v3_utl.c",
        "patchSetId": 2
      },
      "lineNbr": 974,
      "author": {
        "id": 5005
      },
      "writtenOn": "2015-02-12T00:04:02Z",
      "side": 1,
      "message": "Upstream allows chklen to be zero, in which case it\u0027s calculated with strlen, and it also allows the last byte of the string to be NUL, in which case it\u0027s silently ignored.\n\nAfter a brief scream, I removed this throughout the patch series and in X509_check_email, below. Since half the point of this series was to resync us with upstream I\u0027ve stopped looking too hard at these changes for fear that I\u0027ll find something else equally bad and be forced to diverge from upstream again.",
      "revId": "4e1f29cc56b6912114b7a5697cde0c824e3fdf78",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d67b4d5e_0248ea6f",
        "filename": "crypto/x509v3/v3_utl.c",
        "patchSetId": 2
      },
      "lineNbr": 974,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-02-12T18:39:15Z",
      "side": 1,
      "message": "This behavior is super-distressing, but do_x509_check internally does this too. So I think we need to remove it from there too or continue supporting it in the wrapper.\n\nOn the plus side, it looks like nothing outside of OpenSSL ever calls any of these functions! codesearch comes up with nothing for X509_check_(email|host|ip) + OpenSSL exclusions.",
      "parentUuid": "d6c0ad6a_dae285e0",
      "revId": "4e1f29cc56b6912114b7a5697cde0c824e3fdf78",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    }
  ]
}