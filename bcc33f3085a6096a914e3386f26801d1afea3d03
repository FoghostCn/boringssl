{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "77660e0a_4cadb222",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 14196
      },
      "writtenOn": "2024-02-20T18:43:16Z",
      "side": 1,
      "message": "Will we truly want this behaviour change by default? I understand sure we\u0027ll want to support it with SSL_CREDENTIAL, but would that not end up being something configurable, and we would not have it on by default? \n\n(Effectively what I\u0027m asking is do we want to have is to land change but don\u0027t make it accept the RSA key exchange for now)",
      "range": {
        "startLine": 20,
        "startChar": 34,
        "endLine": 23,
        "endChar": 42
      },
      "revId": "bcc33f3085a6096a914e3386f26801d1afea3d03",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c34f4a5f_6f86a055",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 5415
      },
      "writtenOn": "2024-02-20T19:05:48Z",
      "side": 1,
      "message": "I think it makes sense to enable this by default. We already do this when there\u0027s no ECDHE curve in common.\n\nIn the SSL_CREDENTIAL version, I don\u0027t think it would make sense to make it configurable. Checking sigalgs for SSL_CREDENTIAL is integral to being able to decide whether the credential\u0027s key is allowed. This isn\u0027t like the X.509 signatures, or the trust anchor, where the connection will proceed and we\u0027re just not positive what will happen. We know, *for sure*, the connection will *definitely* not work, because we will go to generate a signature and immediately fail to do so.\n\nWe could say that the default credential and other credentials have totally different cipher suite selection rules, but that\u0027s just weird.",
      "parentUuid": "77660e0a_4cadb222",
      "range": {
        "startLine": 20,
        "startChar": 34,
        "endLine": 23,
        "endChar": 42
      },
      "revId": "bcc33f3085a6096a914e3386f26801d1afea3d03",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f307fe8d_0c961b97",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 14196
      },
      "writtenOn": "2024-02-20T21:39:35Z",
      "side": 1,
      "message": "OK, I *guess* this is corner case enough that having it succeed in the case of\nanything set up in a way that allows it isn\u0027t the end of the world.",
      "parentUuid": "c34f4a5f_6f86a055",
      "range": {
        "startLine": 20,
        "startChar": 34,
        "endLine": 23,
        "endChar": 42
      },
      "revId": "bcc33f3085a6096a914e3386f26801d1afea3d03",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4b3529ed_245f5a11",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5415
      },
      "writtenOn": "2024-02-16T22:38:44Z",
      "side": 1,
      "message": "Having both of you look at this one because it does actually change server behavior.",
      "revId": "bcc33f3085a6096a914e3386f26801d1afea3d03",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b3450034_bcc0fec9",
        "filename": "ssl/internal.h",
        "patchSetId": 2
      },
      "lineNbr": 552,
      "author": {
        "id": 5415
      },
      "writtenOn": "2024-02-16T22:38:44Z",
      "side": 1,
      "message": "These bitmasks are questionably useful at this point, TBH, but I\u0027ve left them alone for now.",
      "revId": "bcc33f3085a6096a914e3386f26801d1afea3d03",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "bcc33f3085a6096a914e3386f26801d1afea3d03",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforcement-satisfied_gerrit"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "bcc33f3085a6096a914e3386f26801d1afea3d03",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}