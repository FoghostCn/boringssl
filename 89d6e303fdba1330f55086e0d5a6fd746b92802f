{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e495f16e_4d90d40f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 16171
      },
      "writtenOn": "2024-01-09T23:35:05Z",
      "side": 1,
      "message": "\u003e CV cannot start a Run because this CL is not satisfying the Review-Enforcement submit requirement. Please hover over the corresponding entry in the Submit Requirements section to check what is missing.\n\nI just tried linking my @google.com account, but maybe that\u0027s not enough...",
      "revId": "89d6e303fdba1330f55086e0d5a6fd746b92802f",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "103a9745_4166b7c0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5415
      },
      "writtenOn": "2024-01-10T20:57:24Z",
      "side": 1,
      "message": "Weird. Well, rslgtm.",
      "parentUuid": "e495f16e_4d90d40f",
      "revId": "89d6e303fdba1330f55086e0d5a6fd746b92802f",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a46b798_c24762ea",
        "filename": "include/openssl/target.h",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 14196
      },
      "writtenOn": "2024-01-09T17:53:25Z",
      "side": 1,
      "message": "This workaround is specifically for something that we expect the platforms in question to hopefully eventually \"clean up\" the fact that they are defining __linux__ and hope for them not to do so eventually because they shouldn\u0027t be. \n\nYou seem to want this for when running as an \"emulation\" target. and you specifically want to compile under _linux_ but have not behave as such, in other words, you\u0027re never going to \"fix\" this, it\u0027s by design. Is that correct?  \n\nI\u0027m only asking because we might restructure this slightly do ensure the fact that you are doing this always remains here.",
      "revId": "89d6e303fdba1330f55086e0d5a6fd746b92802f",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "feacd377_d7e3ffdf",
        "filename": "include/openssl/target.h",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 16171
      },
      "writtenOn": "2024-01-09T21:34:28Z",
      "side": 1,
      "message": "\u003e You seem to want this for when running as an \"emulation\" target. and you specifically want to compile under linux but have not behave as such, in other words, you\u0027re never going to \"fix\" this, it\u0027s by design. Is that correct?\n\nCorrect. I interpreted the current comment about `nanolibc` meaning the same thing:\n\n\u003e nanolibc\n// sometimes build for a non-Linux target (which should not define __linux__),\n// but also sometimes build for Linux. Although technically running in Linux\n// userspace, this lacks all the libc APIs we\u0027d normally expect on Linux, so we\n// treat it as a non-Linux target.\n\nversus the `__TRUSTY__` and `ANDROID_BAREMETAL` which are doing the wrong thing and should be fixed:\n\n\u003e // Trusty and Android baremetal aren\u0027t Linux but currently define __linux__.\n// As a workaround, we exclude them here.",
      "parentUuid": "4a46b798_c24762ea",
      "revId": "89d6e303fdba1330f55086e0d5a6fd746b92802f",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ee89cd99_78ec2a12",
        "filename": "include/openssl/target.h",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 14196
      },
      "writtenOn": "2024-01-09T21:56:20Z",
      "side": 1,
      "message": "ok, sgtm.",
      "parentUuid": "feacd377_d7e3ffdf",
      "revId": "89d6e303fdba1330f55086e0d5a6fd746b92802f",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "89d6e303fdba1330f55086e0d5a6fd746b92802f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforcement-satisfied_gerrit"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "89d6e303fdba1330f55086e0d5a6fd746b92802f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}