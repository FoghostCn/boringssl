{
  "comments": [
    {
      "key": {
        "uuid": "8c07be72_1791a432",
        "filename": "include/openssl/ssl.h",
        "patchSetId": 2
      },
      "lineNbr": 1499,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-20T22:15:30Z",
      "side": 1,
      "message": "nit: superfluous blank line.",
      "revId": "483f9ea114deba0e3e5c73aea2feed07060e43ff",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00728cc8_e366d15f",
        "filename": "include/openssl/ssl.h",
        "patchSetId": 2
      },
      "lineNbr": 3056,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-20T22:15:30Z",
      "side": 1,
      "message": "nit: missing blank line for new section",
      "revId": "483f9ea114deba0e3e5c73aea2feed07060e43ff",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74124907_dc58efc0",
        "filename": "include/openssl/ssl.h",
        "patchSetId": 2
      },
      "lineNbr": 3063,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-20T22:15:30Z",
      "side": 1,
      "message": "(I think this is a full-stop rather than a semi-colon.)",
      "range": {
        "startLine": 3063,
        "startChar": 10,
        "endLine": 3063,
        "endChar": 11
      },
      "revId": "483f9ea114deba0e3e5c73aea2feed07060e43ff",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ce87820_62a60fd2",
        "filename": "include/openssl/ssl.h",
        "patchSetId": 2
      },
      "lineNbr": 3067,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-20T22:15:30Z",
      "side": 1,
      "message": "nit: hex values are generally lower-case in BoringSSL.",
      "range": {
        "startLine": 3067,
        "startChar": 57,
        "endLine": 3067,
        "endChar": 59
      },
      "revId": "483f9ea114deba0e3e5c73aea2feed07060e43ff",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e319871_4dae153b",
        "filename": "include/openssl/ssl.h",
        "patchSetId": 2
      },
      "lineNbr": 3070,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-20T22:15:30Z",
      "side": 1,
      "message": "(nit: the term is plural everywhere else.)",
      "range": {
        "startLine": 3070,
        "startChar": 69,
        "endLine": 3070,
        "endChar": 70
      },
      "revId": "483f9ea114deba0e3e5c73aea2feed07060e43ff",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b8b1033_62fae6d5",
        "filename": "include/openssl/ssl.h",
        "patchSetId": 2
      },
      "lineNbr": 3072,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-20T22:15:30Z",
      "side": 1,
      "message": "I think this comment needs to explain why an application would care about the delegated credential. Generally OpenSSL/BoringSSL checks that the leaf certificate has signed the handshake and the application takes care of validating the certificate chain. (Or configures X509_STORE stuff to have it done automatically.)\n\nDoes this code verify that the delegated credential signed the handshake? And that the leaf certificate signed the delegated credential? What requirements are there on the application?\n\n(I\u0027m sure I\u0027ll find the answer to those questions later in this change, but it should be specified in this comment.)",
      "revId": "483f9ea114deba0e3e5c73aea2feed07060e43ff",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5c05d40_c5879082",
        "filename": "include/openssl/ssl.h",
        "patchSetId": 2
      },
      "lineNbr": 3086,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-20T22:15:30Z",
      "side": 1,
      "message": "s/CTX_//",
      "range": {
        "startLine": 3086,
        "startChar": 7,
        "endLine": 3086,
        "endChar": 11
      },
      "revId": "483f9ea114deba0e3e5c73aea2feed07060e43ff",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c00bbf6_81b8abd6",
        "filename": "include/openssl/ssl.h",
        "patchSetId": 2
      },
      "lineNbr": 3087,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-20T22:15:30Z",
      "side": 1,
      "message": "\"session\" has a precise meaning in TLS. This probably enables for a connection?",
      "range": {
        "startLine": 3087,
        "startChar": 41,
        "endLine": 3087,
        "endChar": 48
      },
      "revId": "483f9ea114deba0e3e5c73aea2feed07060e43ff",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "087a3d95_0bdfd06d",
        "filename": "include/openssl/ssl.h",
        "patchSetId": 2
      },
      "lineNbr": 3093,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-20T22:15:30Z",
      "side": 1,
      "message": "(nit: argument is called |key_method|—note missing \"p\".)",
      "range": {
        "startLine": 3093,
        "startChar": 41,
        "endLine": 3093,
        "endChar": 42
      },
      "revId": "483f9ea114deba0e3e5c73aea2feed07060e43ff",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de89c60e_155a1499",
        "filename": "include/openssl/ssl.h",
        "patchSetId": 2
      },
      "lineNbr": 3107,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-20T22:15:30Z",
      "side": 1,
      "message": "(ditto.)",
      "range": {
        "startLine": 3107,
        "startChar": 26,
        "endLine": 3107,
        "endChar": 27
      },
      "revId": "483f9ea114deba0e3e5c73aea2feed07060e43ff",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8adb6741_86f64aee",
        "filename": "ssl/internal.h",
        "patchSetId": 2
      },
      "lineNbr": 1397,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-20T22:15:30Z",
      "side": 1,
      "message": "nit: BoringSSL comments are of the form\n\n// thing is …\nint thing;\n\ni.e. they always start with the name of the field/function/whatever.",
      "revId": "483f9ea114deba0e3e5c73aea2feed07060e43ff",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a1fbb78_fc201e9b",
        "filename": "ssl/internal.h",
        "patchSetId": 2
      },
      "lineNbr": 1398,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-20T22:15:30Z",
      "side": 1,
      "message": "no need to initialise |UniquePtr|. (Here and below.)",
      "range": {
        "startLine": 1398,
        "startChar": 33,
        "endLine": 1398,
        "endChar": 40
      },
      "revId": "483f9ea114deba0e3e5c73aea2feed07060e43ff",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "197d5cd5_2a51d7bb",
        "filename": "ssl/internal.h",
        "patchSetId": 2
      },
      "lineNbr": 1426,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-20T22:15:30Z",
      "side": 1,
      "message": "This seems like it could be a method on |DC|?",
      "revId": "483f9ea114deba0e3e5c73aea2feed07060e43ff",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af897bae_1a1a7757",
        "filename": "ssl/internal.h",
        "patchSetId": 2
      },
      "lineNbr": 1431,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-20T22:15:30Z",
      "side": 1,
      "message": "also seems like it could be a static method of |DC|?",
      "revId": "483f9ea114deba0e3e5c73aea2feed07060e43ff",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65344a80_c1b03f97",
        "filename": "ssl/internal.h",
        "patchSetId": 2
      },
      "lineNbr": 1870,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-20T22:15:30Z",
      "side": 1,
      "message": "nit: typo.",
      "range": {
        "startLine": 1870,
        "startChar": 50,
        "endLine": 1870,
        "endChar": 53
      },
      "revId": "483f9ea114deba0e3e5c73aea2feed07060e43ff",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f22baaa0_8103b27b",
        "filename": "ssl/internal.h",
        "patchSetId": 2
      },
      "lineNbr": 1871,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-20T22:15:30Z",
      "side": 1,
      "message": ",",
      "range": {
        "startLine": 1871,
        "startChar": 35,
        "endLine": 1871,
        "endChar": 36
      },
      "revId": "483f9ea114deba0e3e5c73aea2feed07060e43ff",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aff35a37_97aa635f",
        "filename": "ssl/ssl_cert.cc",
        "patchSetId": 2
      },
      "lineNbr": 655,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-20T22:15:30Z",
      "side": 1,
      "message": "nit: type",
      "range": {
        "startLine": 655,
        "startChar": 2,
        "endLine": 655,
        "endChar": 5
      },
      "revId": "483f9ea114deba0e3e5c73aea2feed07060e43ff",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99680167_31e3bbd4",
        "filename": "ssl/ssl_cert.cc",
        "patchSetId": 2
      },
      "lineNbr": 813,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-20T22:15:30Z",
      "side": 1,
      "message": "|UniquePtr| doesn\u0027t need to be manually reset. (But having an empty destructor is good because it prevents it being emitted in multiple translation units.)",
      "revId": "483f9ea114deba0e3e5c73aea2feed07060e43ff",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3754b4b_a9358d51",
        "filename": "ssl/ssl_cert.cc",
        "patchSetId": 2
      },
      "lineNbr": 837,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-20T22:15:30Z",
      "side": 1,
      "message": "INTERNAL_ERROR",
      "range": {
        "startLine": 837,
        "startChar": 17,
        "endLine": 837,
        "endChar": 36
      },
      "revId": "483f9ea114deba0e3e5c73aea2feed07060e43ff",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3c043ca_de65f039",
        "filename": "ssl/ssl_cert.cc",
        "patchSetId": 2
      },
      "lineNbr": 854,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-20T22:15:30Z",
      "side": 1,
      "message": "probably want to plumb in the |CRYPTO_BUFFER_POOL| from the SSL_CTX if using buffers. (And below.)",
      "range": {
        "startLine": 854,
        "startChar": 61,
        "endLine": 854,
        "endChar": 65
      },
      "revId": "483f9ea114deba0e3e5c73aea2feed07060e43ff",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a33bd692_c9d2f79c",
        "filename": "ssl/ssl_cert.cc",
        "patchSetId": 2
      },
      "lineNbr": 875,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-20T22:15:30Z",
      "side": 1,
      "message": "function comment.",
      "revId": "483f9ea114deba0e3e5c73aea2feed07060e43ff",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7cbb19c4_e71797c5",
        "filename": "ssl/ssl_cert.cc",
        "patchSetId": 2
      },
      "lineNbr": 878,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-20T22:15:30Z",
      "side": 1,
      "message": "functions shouldn\u0027t init a CBB passed from above. Also, 0 is a bad constant here. I think it should be a few hundred at least.",
      "revId": "483f9ea114deba0e3e5c73aea2feed07060e43ff",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a171e4e1_60af2ae7",
        "filename": "ssl/ssl_cert.cc",
        "patchSetId": 2
      },
      "lineNbr": 881,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-20T22:15:30Z",
      "side": 1,
      "message": "uint8_t buf[64];\nOPENSSL_memset(buf, 0, sizeof(buf));\nif (!CBB_add_bytes(message, buf, sizeof(buf))) {\n  …\n}",
      "revId": "483f9ea114deba0e3e5c73aea2feed07060e43ff",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bbce21e1_4bc90959",
        "filename": "ssl/ssl_cert.cc",
        "patchSetId": 2
      },
      "lineNbr": 896,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-20T22:15:30Z",
      "side": 1,
      "message": "minor: use sizeof(kServerContext), which includes the trailing NUL byte, and drop the following |CBB_add_u8|.",
      "revId": "483f9ea114deba0e3e5c73aea2feed07060e43ff",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dfa8d781_9b2d3e2e",
        "filename": "ssl/ssl_cert.cc",
        "patchSetId": 2
      },
      "lineNbr": 901,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-20T22:15:30Z",
      "side": 1,
      "message": "Doesn\u0027t |dc| store the raw message",
      "revId": "483f9ea114deba0e3e5c73aea2feed07060e43ff",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e49ccc7_125eb8a0",
        "filename": "ssl/ssl_cert.cc",
        "patchSetId": 2
      },
      "lineNbr": 921,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-20T22:15:30Z",
      "side": 1,
      "message": "What if X509 compatibility isn\u0027t enabled? (There\u0027s a \"buffers mode\" that disables all crypto/x509 code.)",
      "revId": "483f9ea114deba0e3e5c73aea2feed07060e43ff",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9110079d_6a535757",
        "filename": "ssl/ssl_cert.cc",
        "patchSetId": 2
      },
      "lineNbr": 925,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-20T22:15:30Z",
      "side": 1,
      "message": "Probably this design isn\u0027t going to work. We would need to think about how it would work with certificate verification, but it\u0027s likely that things like time need to be handled outside of BoringSSL.",
      "revId": "483f9ea114deba0e3e5c73aea2feed07060e43ff",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf7d1229_89716cb7",
        "filename": "ssl/ssl_cert.cc",
        "patchSetId": 2
      },
      "lineNbr": 1041,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-20T22:15:30Z",
      "side": 1,
      "message": "doesn\u0027t need to be constant time: loop can break once found.",
      "revId": "483f9ea114deba0e3e5c73aea2feed07060e43ff",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be8a2381_c9244c4c",
        "filename": "ssl/ssl_privkey.cc",
        "patchSetId": 2
      },
      "lineNbr": 144,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-20T22:15:30Z",
      "side": 1,
      "message": "I think these checks are redundant with |ssl_signing_with_dc|?",
      "range": {
        "startLine": 143,
        "startChar": 7,
        "endLine": 144,
        "endChar": 50
      },
      "revId": "483f9ea114deba0e3e5c73aea2feed07060e43ff",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9307eab7_54a8c3d9",
        "filename": "ssl/t1_lib.cc",
        "patchSetId": 2
      },
      "lineNbr": 2881,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-20T22:15:30Z",
      "side": 1,
      "message": "(nit: stray change.)",
      "revId": "483f9ea114deba0e3e5c73aea2feed07060e43ff",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a892a81b_c65d12df",
        "filename": "ssl/tls13_both.cc",
        "patchSetId": 2
      },
      "lineNbr": 324,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-20T22:15:30Z",
      "side": 1,
      "message": "Is it not an error to have a DC extension on a non-leaf certificate?",
      "revId": "483f9ea114deba0e3e5c73aea2feed07060e43ff",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd41d96f_2eb250a5",
        "filename": "tool/client.cc",
        "patchSetId": 2
      },
      "lineNbr": 144,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-12-20T22:15:30Z",
      "side": 1,
      "message": "(This is not used in this change.)",
      "revId": "483f9ea114deba0e3e5c73aea2feed07060e43ff",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    }
  ]
}