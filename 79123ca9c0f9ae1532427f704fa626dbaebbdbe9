{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4b0fb2a6_78bfab3a",
        "filename": "crypto/asn1/posix_time.c",
        "patchSetId": 3
      },
      "lineNbr": 147,
      "author": {
        "id": 5415
      },
      "writtenOn": "2024-02-04T14:34:41Z",
      "side": 1,
      "message": "I mean, this does the job, but perhaps this would be a little less confusing. :-)\n\n```\n  if (tm-\u003etm_year \u003e 9999 - 1900 || tm-\u003etm_mon \u003e 12 - 1) {\n```\n\nOr\n\n```\n  if (tm-\u003etm_year \u003e INT_MAX - 1900 || tm-\u003etm_mon \u003e INT_MAX - 1) {\n```\n\nThe former to actually bound against year 9999 and December. Or the latter to say \"that\u0027s `posix_time_from_utc`\u0027s job, we\u0027re just going to guard for overflow right now\". Right now we kinda do neither. :-)",
      "revId": "79123ca9c0f9ae1532427f704fa626dbaebbdbe9",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b643a7ee_8baf654d",
        "filename": "crypto/asn1/posix_time.c",
        "patchSetId": 3
      },
      "lineNbr": 147,
      "author": {
        "id": 14196
      },
      "writtenOn": "2024-02-05T22:54:21Z",
      "side": 1,
      "message": "Well, we also sorta kinda do, since if that addition overflows by those amounts, the values will be negative and we\u0027ll toss them out and return 0 anyway as soon as we check for is_valid_time.  So effectively, this is really just for making it obvious ahead of time.. so what\u0027s your preference? (or not have the check at all)",
      "parentUuid": "4b0fb2a6_78bfab3a",
      "revId": "79123ca9c0f9ae1532427f704fa626dbaebbdbe9",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e689c6a6_b757a543",
        "filename": "crypto/asn1/posix_time.c",
        "patchSetId": 3
      },
      "lineNbr": 147,
      "author": {
        "id": 5415
      },
      "writtenOn": "2024-02-05T23:46:13Z",
      "side": 1,
      "message": "Oh, if it overflows, it\u0027ll be UB not negative, so definitely good that we put the check in! ðŸ˜Š I\u0027m just quibbling over the exact spelling of the check. No particular preference between the two.",
      "parentUuid": "b643a7ee_8baf654d",
      "revId": "79123ca9c0f9ae1532427f704fa626dbaebbdbe9",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48803549_d14e8fb0",
        "filename": "crypto/asn1/posix_time.c",
        "patchSetId": 3
      },
      "lineNbr": 147,
      "author": {
        "id": 15776
      },
      "writtenOn": "2024-02-06T00:06:38Z",
      "side": 1,
      "message": "When comparing this file with its version in LibreSSL I was confused about these checks since in our code they\u0027re done here, in `OPENSSL_gmtime_adj()`, but not in `OPENSSL_gmtime_diff()`. `posix_time_from_utc()` has `valid_date()`, which bounds year and month to be in the appropriate ranges already.\n\nIf this is a check against undefined signed integer overflow, as the comment indicates, then I would suggest using davidben\u0027s second variant, but please do it in all functions that do this kind of addition.",
      "parentUuid": "e689c6a6_b757a543",
      "revId": "79123ca9c0f9ae1532427f704fa626dbaebbdbe9",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "214e4e56_b26a174f",
        "filename": "crypto/asn1/posix_time.c",
        "patchSetId": 3
      },
      "lineNbr": 147,
      "author": {
        "id": 5415
      },
      "writtenOn": "2024-02-06T18:48:56Z",
      "side": 1,
      "message": "Oh yeah, this impacts quite a lot of them, doesn\u0027t it. I think we fix this by replacing most of the `utc_from_posix_time`. with the `tm`-based versions. I\u0027ll take a stab at that...",
      "parentUuid": "48803549_d14e8fb0",
      "revId": "79123ca9c0f9ae1532427f704fa626dbaebbdbe9",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed46a157_b0d051c6",
        "filename": "crypto/asn1/posix_time.c",
        "patchSetId": 3
      },
      "lineNbr": 147,
      "author": {
        "id": 14196
      },
      "writtenOn": "2024-02-06T19:00:27Z",
      "side": 1,
      "message": "Don\u0027t bother, I\u0027m already on that.",
      "parentUuid": "214e4e56_b26a174f",
      "revId": "79123ca9c0f9ae1532427f704fa626dbaebbdbe9",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "997468e6_c52175a7",
        "filename": "crypto/asn1/posix_time.c",
        "patchSetId": 3
      },
      "lineNbr": 147,
      "author": {
        "id": 5415
      },
      "writtenOn": "2024-02-06T20:01:17Z",
      "side": 1,
      "message": "Oops, I didn\u0027t see this until I finished writing https://boringssl-review.googlesource.com/c/boringssl/+/66027\n\nI guess take whatever from there seems good to you. :-)",
      "parentUuid": "ed46a157_b0d051c6",
      "revId": "79123ca9c0f9ae1532427f704fa626dbaebbdbe9",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9371c9b_a5ebd9a1",
        "filename": "crypto/asn1/posix_time.c",
        "patchSetId": 3
      },
      "lineNbr": 147,
      "author": {
        "id": 14196
      },
      "writtenOn": "2024-02-06T21:47:41Z",
      "side": 1,
      "message": "Lol I did it differentely\n\nhttps://boringssl-review.googlesource.com/c/boringssl/+/66047",
      "parentUuid": "997468e6_c52175a7",
      "revId": "79123ca9c0f9ae1532427f704fa626dbaebbdbe9",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    }
  ]
}