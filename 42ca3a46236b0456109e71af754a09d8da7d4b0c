{
  "comments": [
    {
      "key": {
        "uuid": "518da743_4e6b93db",
        "filename": "crypto/rsa/rsa.c",
        "patchSetId": 2
      },
      "lineNbr": 385,
      "author": {
        "id": 5075
      },
      "writtenOn": "2015-02-09T22:04:44Z",
      "side": 0,
      "message": "I\u0027m kind of confused why MSVC didn\u0027t like the old version of this code. First looking up the single matching prefix and then checking it seems a more natural way to express it than the loop. (The loop doesn\u0027t make it obvious that at most one prefix is valid.)\n\nWas it not able to learn that the NULL prefix check in 387 guarded you from using an invalid prefix_len? Just initializing it to 0 in this case seems not wrong. Or perhaps we lift sig_prefix up to the top and replace prefix + prefix_len with accesses through sig_prefix.",
      "revId": "42ca3a46236b0456109e71af754a09d8da7d4b0c",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e67fc8e4_90de7ae0",
        "filename": "crypto/rsa/rsa.c",
        "patchSetId": 2
      },
      "lineNbr": 385,
      "author": {
        "id": 5525
      },
      "writtenOn": "2015-03-18T01:04:54Z",
      "side": 0,
      "message": "Yes, MSVC\u0027s control flow analysis is complete and it often warns when the use of a conditionally-initialization variable is guarded on the same predicate that the initialization was guarded on.\n\nI can see the merits of looking up the single matching prefix and then checking it. However, usually when I\u0027m reading such code I\u0027m looking for bugs like use of uninitialized values and for that I find the new styles (preferably patchset 1, but otherwise patchset 2) to be superior.\n\nIt is best to avoid unnecessarily initializing a variable to avoid this kind of warning, because that anti-pattern prevents these static analysis from doing their job of finding real bugs.\n\nAnyway, there are lots of potential ways to deal with issue. I am going to submit a new patchset today, where this code is the same as patchset 2 except for the added curly braces. Let me know if you think it needs to be changed.",
      "parentUuid": "518da743_4e6b93db",
      "revId": "42ca3a46236b0456109e71af754a09d8da7d4b0c",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    }
  ]
}