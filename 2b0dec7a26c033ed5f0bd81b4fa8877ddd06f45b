{
  "comments": [
    {
      "key": {
        "uuid": "447b7b7d_b8178cb8",
        "filename": "crypto/ec_extra/hash_to_curve.c",
        "patchSetId": 2
      },
      "lineNbr": 330,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-04-27T16:17:43Z",
      "side": 1,
      "message": "Sorry, I should have included this the first round:\n\n  // kSqrt1728 was computed as follows in python3:\n  //\n  // \u003e\u003e\u003e p \u003d 2**384 - 2**128 - 2**96 + 2**32 - 1\n  // \u003e\u003e\u003e z3 \u003d 12**3\n  // \u003e\u003e\u003e c2 \u003d pow(z3, (p+1)//4, p)\n  // \u003e\u003e\u003e assert z3 \u003d\u003d pow(c2, 2, p)\n  // \u003e\u003e\u003e \", \".join(\"0x%02x\" % b for b in c2.to_bytes(384//8, \u0027big\u0027)\n\n(Dunno if this is how you computed it, but it gives the same answer. :-) )",
      "revId": "2b0dec7a26c033ed5f0bd81b4fa8877ddd06f45b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dbff882e_2a9519b1",
        "filename": "crypto/fipsmodule/ec/ec_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 1175,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-04-27T16:17:43Z",
      "side": 1,
      "message": "test_s_ us_e_\n\n(I think I was using \u0027test\u0027 as a verb in the original text, but I\u0027m good with either version.)",
      "range": {
        "startLine": 1174,
        "startChar": 74,
        "endLine": 1175,
        "endChar": 11
      },
      "revId": "2b0dec7a26c033ed5f0bd81b4fa8877ddd06f45b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    }
  ]
}