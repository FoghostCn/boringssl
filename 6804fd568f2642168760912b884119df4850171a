{
  "comments": [
    {
      "key": {
        "uuid": "68f31cf7_56e8319b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-08-08T17:14:21Z",
      "side": 1,
      "message": "How is this to be tested? I.e. when we break this, how will we find out? Is Android running builders that exercise this? If we need to run builders is it just a question of passing -fsanitize\u003dhwaddress to Clang \u003e\u003d 10 and running on aarch64?",
      "range": {
        "startLine": 7,
        "startChar": 25,
        "endLine": 7,
        "endChar": 45
      },
      "revId": "6804fd568f2642168760912b884119df4850171a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cdcc90d1_1c204156",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-08-08T17:14:21Z",
      "side": 1,
      "message": "Out of curiosity, what form does this take? Does the linker try to rewrite the assembly code to implement this?",
      "range": {
        "startLine": 15,
        "startChar": 34,
        "endLine": 15,
        "endChar": 49
      },
      "revId": "6804fd568f2642168760912b884119df4850171a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3383c21_eef2cf4b",
        "filename": "crypto/chacha/asm/chacha-armv8.pl",
        "patchSetId": 2
      },
      "lineNbr": 143,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-08-08T17:14:21Z",
      "side": 1,
      "message": "If the concern is that __has_feature might not be defined, wouldn\u0027t this clause need to be first?\n\nIf you\u0027re adding this clause for other reasons, I thought that __has_feature was supposed to be the way to test these things? Is |hwaddress_sanitizer| defined in previous versions of Clang but not sufficiently for this to work? (If so, that suggests that Clang is missing a feature for these relocations.)",
      "range": {
        "startLine": 143,
        "startChar": 42,
        "endLine": 143,
        "endChar": 63
      },
      "revId": "6804fd568f2642168760912b884119df4850171a",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    }
  ]
}