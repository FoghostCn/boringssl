{
  "comments": [
    {
      "key": {
        "uuid": "2e8505c5_b2eedfdb",
        "filename": "ssl/handshake_client.cc",
        "patchSetId": 3
      },
      "lineNbr": 419,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-05-07T16:10:58Z",
      "side": 1,
      "message": "This is a little interesting since it\u0027s both disabling compatibility mode and advertising of any TLS 1.2 ID-based sessions. This is fine because QUIC never uses TLS 1.2, and the corresponding server enforcement otherwise doesn\u0027t work. But maybe worth a quick comment like:\n\n// Never send a session ID in QUIC. QUIC doesn\u0027t use TLS 1.2 and disables the TLS 1.3 middlebox compatibility mode.",
      "revId": "5c6ad6c7d51dd839e0f75adc06420eb2824a3359",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e23b14ec_22a798b3",
        "filename": "ssl/handshake_client.cc",
        "patchSetId": 3
      },
      "lineNbr": 419,
      "author": {
        "id": 5440
      },
      "writtenOn": "2020-05-07T19:13:10Z",
      "side": 1,
      "message": "I originally put this check in the \"else if (version \u003e 1.3)\" check, but discovered that we were still sending a session ID.\n\nI added a comment.",
      "parentUuid": "2e8505c5_b2eedfdb",
      "revId": "5c6ad6c7d51dd839e0f75adc06420eb2824a3359",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "996744c2_a00fd86d",
        "filename": "ssl/test/runner/common.go",
        "patchSetId": 3
      },
      "lineNbr": 1674,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-05-07T16:10:58Z",
      "side": 1,
      "message": "if",
      "range": {
        "startLine": 1674,
        "startChar": 24,
        "endLine": 1674,
        "endChar": 26
      },
      "revId": "5c6ad6c7d51dd839e0f75adc06420eb2824a3359",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cef09439_0f377d4d",
        "filename": "ssl/test/runner/common.go",
        "patchSetId": 3
      },
      "lineNbr": 1674,
      "author": {
        "id": 5440
      },
      "writtenOn": "2020-05-07T19:13:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "996744c2_a00fd86d",
      "range": {
        "startLine": 1674,
        "startChar": 24,
        "endLine": 1674,
        "endChar": 26
      },
      "revId": "5c6ad6c7d51dd839e0f75adc06420eb2824a3359",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1e8e00eb_a03627d5",
        "filename": "ssl/test/runner/handshake_client.go",
        "patchSetId": 3
      },
      "lineNbr": 393,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-05-07T16:10:58Z",
      "side": 1,
      "message": "Should we check in handshake_server.go that QUIC ClientHellos never have session IDs?",
      "revId": "5c6ad6c7d51dd839e0f75adc06420eb2824a3359",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2aa1cac7_79762404",
        "filename": "ssl/test/runner/handshake_client.go",
        "patchSetId": 3
      },
      "lineNbr": 393,
      "author": {
        "id": 5440
      },
      "writtenOn": "2020-05-07T19:13:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1e8e00eb_a03627d5",
      "revId": "5c6ad6c7d51dd839e0f75adc06420eb2824a3359",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf588b1e_7f0df340",
        "filename": "ssl/tls13_server.cc",
        "patchSetId": 3
      },
      "lineNbr": 196,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-05-07T16:10:58Z",
      "side": 1,
      "message": "To confirm: this\u0027ll cause any updated experimental IETF-QUIC servers based on BoringSSL to fail to interop with any existing experimental IETF-QUIC clients based on BoringSSL (or anyone else not turning off compatibility mode). Is this what you want?",
      "revId": "5c6ad6c7d51dd839e0f75adc06420eb2824a3359",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27890a27_1785ec0f",
        "filename": "ssl/tls13_server.cc",
        "patchSetId": 3
      },
      "lineNbr": 196,
      "author": {
        "id": 5440
      },
      "writtenOn": "2020-05-07T19:13:10Z",
      "side": 1,
      "message": "This is what we want (because it will be a requirement in the next QUIC draft), but we don\u0027t want it now. Should I split this CL in half to do the server side enforcement later?",
      "parentUuid": "cf588b1e_7f0df340",
      "revId": "5c6ad6c7d51dd839e0f75adc06420eb2824a3359",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f93147ec_fa1750f4",
        "filename": "ssl/tls13_server.cc",
        "patchSetId": 3
      },
      "lineNbr": 196,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-05-07T20:23:55Z",
      "side": 1,
      "message": "My inclination is to split the CL in half, but do whatever strategy works best for you all.\n\nIf it\u0027ll be a requirement in the next QUIC draft and is compatible with the current one, it seems we\u0027d rather get the client half in sooner than later. But it sounds like we want the server half later.\n\nWe could also check the server half in now with a runtime knob which you\u0027d configure based on the QUIC draft (and then retire the runtime knob later). If you all need that, we can do that, though my inclination is it\u0027s probably more fuss than is necessary. :-)\n\n(A runtime knob would be useful if, say, QUICHE supports both QUIC drafts concurrently and you\u0027d like to make sure you never enable the check on an older QUIC draft to avoid breaking clients that don\u0027t upgrade. But my understanding is that there isn\u0027t any actual IETF-QUIC deployment beyond about:flags yet, so I\u0027m guessing you don\u0027t care about that?)",
      "parentUuid": "27890a27_1785ec0f",
      "revId": "5c6ad6c7d51dd839e0f75adc06420eb2824a3359",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc9dfd70_dee88d47",
        "filename": "ssl/tls13_server.cc",
        "patchSetId": 3
      },
      "lineNbr": 198,
      "author": {
        "id": 5415
      },
      "writtenOn": "2020-05-07T16:10:58Z",
      "side": 1,
      "message": "decode_error or illegal_parameter is probably better. No one actually sticks to this but, in theory, handshake_failure is about failure to negotiate common parameters, whereas this would be a protocol error on the other side.",
      "range": {
        "startLine": 198,
        "startChar": 39,
        "endLine": 198,
        "endChar": 63
      },
      "revId": "5c6ad6c7d51dd839e0f75adc06420eb2824a3359",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85a85777_f0eef98c",
        "filename": "ssl/tls13_server.cc",
        "patchSetId": 3
      },
      "lineNbr": 198,
      "author": {
        "id": 5440
      },
      "writtenOn": "2020-05-07T19:13:10Z",
      "side": 1,
      "message": "Changed to illegal_parameter.",
      "parentUuid": "dc9dfd70_dee88d47",
      "range": {
        "startLine": 198,
        "startChar": 39,
        "endLine": 198,
        "endChar": 63
      },
      "revId": "5c6ad6c7d51dd839e0f75adc06420eb2824a3359",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    }
  ]
}