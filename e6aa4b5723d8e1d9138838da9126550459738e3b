{
  "comments": [
    {
      "key": {
        "uuid": "719ee47d_cc4ed733",
        "filename": "crypto/cipher_extra/asm/chacha20_poly1305_x86_64.pl",
        "patchSetId": 1
      },
      "lineNbr": 1125,
      "author": {
        "id": 5415
      },
      "writtenOn": "2017-07-12T01:12:40Z",
      "side": 1,
      "message": "Is this label ever used?",
      "revId": "e6aa4b5723d8e1d9138838da9126550459738e3b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86f6e8dd_a32f1066",
        "filename": "crypto/cipher_extra/asm/chacha20_poly1305_x86_64.pl",
        "patchSetId": 1
      },
      "lineNbr": 1125,
      "author": {
        "id": 5070
      },
      "writtenOn": "2017-07-13T19:05:53Z",
      "side": 1,
      "message": "No. Have renumbered to remove it.",
      "parentUuid": "719ee47d_cc4ed733",
      "revId": "e6aa4b5723d8e1d9138838da9126550459738e3b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5239c44f_01eaf489",
        "filename": "crypto/cipher_extra/asm/chacha20_poly1305_x86_64.pl",
        "patchSetId": 1
      },
      "lineNbr": 1142,
      "author": {
        "id": 5415
      },
      "writtenOn": "2017-07-12T01:12:40Z",
      "side": 1,
      "message": "reverses",
      "range": {
        "startLine": 1142,
        "startChar": 45,
        "endLine": 1142,
        "endChar": 53
      },
      "revId": "e6aa4b5723d8e1d9138838da9126550459738e3b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e12d08bf_4d7a2923",
        "filename": "crypto/cipher_extra/asm/chacha20_poly1305_x86_64.pl",
        "patchSetId": 1
      },
      "lineNbr": 1142,
      "author": {
        "id": 5070
      },
      "writtenOn": "2017-07-13T19:05:53Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "5239c44f_01eaf489",
      "range": {
        "startLine": 1142,
        "startChar": 45,
        "endLine": 1142,
        "endChar": 53
      },
      "revId": "e6aa4b5723d8e1d9138838da9126550459738e3b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2fad7a80_3b43931d",
        "filename": "crypto/cipher_extra/asm/chacha20_poly1305_x86_64.pl",
        "patchSetId": 1
      },
      "lineNbr": 1144,
      "author": {
        "id": 5415
      },
      "writtenOn": "2017-07-12T01:12:40Z",
      "side": 1,
      "message": "(You could also replace these two lines with cmovl $t1, $t2. Dunno if that\u0027s generally better or not.)",
      "revId": "e6aa4b5723d8e1d9138838da9126550459738e3b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bae70840_9f7fd216",
        "filename": "crypto/cipher_extra/asm/chacha20_poly1305_x86_64.pl",
        "patchSetId": 1
      },
      "lineNbr": 1144,
      "author": {
        "id": 5070
      },
      "writtenOn": "2017-07-13T19:05:53Z",
      "side": 1,
      "message": "I think cmov bypasses the branch predictor and is only recommended when you know that the branch predictor would be useless.",
      "parentUuid": "2fad7a80_3b43931d",
      "revId": "e6aa4b5723d8e1d9138838da9126550459738e3b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "38508ed3_def566a3",
        "filename": "crypto/cipher_extra/asm/chacha20_poly1305_x86_64.pl",
        "patchSetId": 1
      },
      "lineNbr": 1163,
      "author": {
        "id": 5415
      },
      "writtenOn": "2017-07-12T01:12:40Z",
      "side": 1,
      "message": "Is it possible for this to be zero? I suppose this way we don\u0027t have to think about it, but if the only way for $t2 to be size is I think if $inl \u003d 16 up in line 1140. The comment says $T3 contains a \"(partial, perhaps empty)\" block, which suggests $inl cannot be 16 but it can be 0.",
      "revId": "e6aa4b5723d8e1d9138838da9126550459738e3b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7aeab1a_6a405a36",
        "filename": "crypto/cipher_extra/asm/chacha20_poly1305_x86_64.pl",
        "patchSetId": 1
      },
      "lineNbr": 1163,
      "author": {
        "id": 5070
      },
      "writtenOn": "2017-07-13T19:05:53Z",
      "side": 1,
      "message": "I think you\u0027re correct. The initial $inl cannot be zero /or/ 16. If it were zero, this whole section of code would be skipped by L1099. If it were 16, it would have been processed as a block first and turned into zero.\n\nHave changed the loop accordingly.",
      "parentUuid": "38508ed3_def566a3",
      "revId": "e6aa4b5723d8e1d9138838da9126550459738e3b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8cb2d511_20f379df",
        "filename": "crypto/cipher_extra/asm/chacha20_poly1305_x86_64.pl",
        "patchSetId": 1
      },
      "lineNbr": 1169,
      "author": {
        "id": 5415
      },
      "writtenOn": "2017-07-12T01:12:40Z",
      "side": 1,
      "message": "Amusingly, the two other such loops in this file use lea/dec, and sub/sub. I have no clue when you\u0027d want which.",
      "revId": "e6aa4b5723d8e1d9138838da9126550459738e3b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df3b05b4_7b4f9d25",
        "filename": "crypto/cipher_extra/asm/chacha20_poly1305_x86_64.pl",
        "patchSetId": 1
      },
      "lineNbr": 1169,
      "author": {
        "id": 5070
      },
      "writtenOn": "2017-07-13T19:05:53Z",
      "side": 1,
      "message": "I don\u0027t think one should use dec on modern chips. Otherwise I think sub vs lea is basically the same for -1. If I\u0027m thinking about a pointer, I\u0027ll probably update it with lea. If a counter, sub.",
      "parentUuid": "8cb2d511_20f379df",
      "revId": "e6aa4b5723d8e1d9138838da9126550459738e3b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c8d81e6_1efadef2",
        "filename": "crypto/cipher_extra/asm/chacha20_poly1305_x86_64.pl",
        "patchSetId": 1
      },
      "lineNbr": 1174,
      "author": {
        "id": 5415
      },
      "writtenOn": "2017-07-12T01:12:40Z",
      "side": 1,
      "message": "(Looks like AVX2 has an instruction, but I guess this code has much weaker requirements.)",
      "revId": "e6aa4b5723d8e1d9138838da9126550459738e3b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5dcca618_939ff752",
        "filename": "crypto/cipher_extra/asm/chacha20_poly1305_x86_64.pl",
        "patchSetId": 1
      },
      "lineNbr": 1174,
      "author": {
        "id": 5070
      },
      "writtenOn": "2017-07-13T19:05:53Z",
      "side": 1,
      "message": "Indeed, this is just SSE code.",
      "parentUuid": "7c8d81e6_1efadef2",
      "revId": "e6aa4b5723d8e1d9138838da9126550459738e3b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "493a9a4f_c0a3f1fc",
        "filename": "crypto/cipher_extra/asm/chacha20_poly1305_x86_64.pl",
        "patchSetId": 1
      },
      "lineNbr": 1216,
      "author": {
        "id": 5415
      },
      "writtenOn": "2017-07-12T01:12:40Z",
      "side": 1,
      "message": "(Do you know when to prefer this over leaq 16($inp), $inp?)",
      "revId": "e6aa4b5723d8e1d9138838da9126550459738e3b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "679a0d82_142223b2",
        "filename": "crypto/cipher_extra/asm/chacha20_poly1305_x86_64.pl",
        "patchSetId": 1
      },
      "lineNbr": 1216,
      "author": {
        "id": 5070
      },
      "writtenOn": "2017-07-13T19:05:53Z",
      "side": 1,
      "message": "No idea. Since this is a pointer I\u0027ve changed it to be lea, which feels more pointerish to me.",
      "parentUuid": "493a9a4f_c0a3f1fc",
      "revId": "e6aa4b5723d8e1d9138838da9126550459738e3b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ba8b5da_929657a4",
        "filename": "crypto/cipher_extra/asm/chacha20_poly1305_x86_64.pl",
        "patchSetId": 1
      },
      "lineNbr": 1222,
      "author": {
        "id": 5415
      },
      "writtenOn": "2017-07-12T01:12:40Z",
      "side": 1,
      "message": "Why do this before the jump? It doesn\u0027t seem to be read anywhere.",
      "revId": "e6aa4b5723d8e1d9138838da9126550459738e3b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96230756_d78812a4",
        "filename": "crypto/cipher_extra/asm/chacha20_poly1305_x86_64.pl",
        "patchSetId": 1
      },
      "lineNbr": 1222,
      "author": {
        "id": 5070
      },
      "writtenOn": "2017-07-13T19:05:53Z",
      "side": 1,
      "message": "$inl is used if the jump is not taken (L1235). (13 can also be reached from a way above so the obvious local tweak doesn\u0027t work.)",
      "parentUuid": "2ba8b5da_929657a4",
      "revId": "e6aa4b5723d8e1d9138838da9126550459738e3b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01d5b4d8_83cc6d23",
        "filename": "crypto/cipher_extra/asm/chacha20_poly1305_x86_64.pl",
        "patchSetId": 1
      },
      "lineNbr": 1222,
      "author": {
        "id": 5415
      },
      "writtenOn": "2017-07-14T19:02:13Z",
      "side": 1,
      "message": "Oh, er, yeah, sorry I was just confused. :-)",
      "parentUuid": "96230756_d78812a4",
      "revId": "e6aa4b5723d8e1d9138838da9126550459738e3b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a21618ea_824991b0",
        "filename": "crypto/cipher_extra/asm/chacha20_poly1305_x86_64.pl",
        "patchSetId": 1
      },
      "lineNbr": 1236,
      "author": {
        "id": 5415
      },
      "writtenOn": "2017-07-12T01:12:40Z",
      "side": 1,
      "message": "Didn\u0027t this already get checked at line 1223?",
      "revId": "e6aa4b5723d8e1d9138838da9126550459738e3b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28b9f3b9_aed1ae68",
        "filename": "crypto/cipher_extra/asm/chacha20_poly1305_x86_64.pl",
        "patchSetId": 1
      },
      "lineNbr": 1236,
      "author": {
        "id": 5070
      },
      "writtenOn": "2017-07-13T19:05:53Z",
      "side": 1,
      "message": "13 has additional predecessors (L1137), so needs to be established again.",
      "parentUuid": "a21618ea_824991b0",
      "revId": "e6aa4b5723d8e1d9138838da9126550459738e3b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f791c3b9_48e1c56b",
        "filename": "crypto/cipher_extra/asm/chacha20_poly1305_x86_64.pl",
        "patchSetId": 1
      },
      "lineNbr": 1236,
      "author": {
        "id": 5415
      },
      "writtenOn": "2017-07-14T19:02:13Z",
      "side": 1,
      "message": "But if we took that jump, then the jump at line at top of seal_sse_tail_16, L1099, didn\u0027t run.\n\nI found the invariants a bit easier to follow if some of the numbered labels were given proper names. Using patch set 3\u0027s numbers, the structure of this code appears to be:\n\nseal_sse_tail_16:\n     if $inl \u003d\u003d 0 {\n       goto seal_extra_in (8)\n     }\n\n1-2: encrypt $inp[:$inl], load into $T3.\n     if extra_in_len \u003d\u003d 0 {\n       goto seal_last_block (12)\n     }\n\n3-7: load as much of extra_in[:extra_in_len] as will fit into $T3.\n     Process $T3 and update extra_in / extra_in_len.\n\nseal_extra_in (8):\n     load extra_in\n 9:  seal extra_in block-by-block\n10:  load the remaining block of extra_in into $T3[:$inl].\n     if $inl \u003d\u003d 0 {\n       goto seal_finish_poly1305 (13)\n     }\n\nseal_last_input_block (12):\n     Pad and process $T3[:$inl].\n\nseal_finish_poly1305 (13):\n     Process length block, finish everything up.",
      "parentUuid": "28b9f3b9_aed1ae68",
      "revId": "e6aa4b5723d8e1d9138838da9126550459738e3b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb8f8a8e_c9a1ee03",
        "filename": "crypto/cipher_extra/asm/chacha20_poly1305_x86_64.pl",
        "patchSetId": 1
      },
      "lineNbr": 1236,
      "author": {
        "id": 5005
      },
      "writtenOn": "2017-07-14T21:01:14Z",
      "side": 1,
      "message": "You\u0027re correct, $inl !\u003d zero here. Removed test.",
      "parentUuid": "f791c3b9_48e1c56b",
      "revId": "e6aa4b5723d8e1d9138838da9126550459738e3b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7d5b629_37c2e8a2",
        "filename": "crypto/cipher_extra/asm/chacha20_poly1305_x86_64.pl",
        "patchSetId": 1
      },
      "lineNbr": 1238,
      "author": {
        "id": 5415
      },
      "writtenOn": "2017-07-12T01:12:40Z",
      "side": 1,
      "message": "Why not pxor $T3, $T3 just before label 12 and then avoid this masking bit?",
      "revId": "e6aa4b5723d8e1d9138838da9126550459738e3b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3fcf618b_4727aa64",
        "filename": "crypto/cipher_extra/asm/chacha20_poly1305_x86_64.pl",
        "patchSetId": 1
      },
      "lineNbr": 1238,
      "author": {
        "id": 5070
      },
      "writtenOn": "2017-07-13T19:05:53Z",
      "side": 1,
      "message": "(ditto: can\u0027t depend on 12 having run prior to this.)",
      "parentUuid": "d7d5b629_37c2e8a2",
      "revId": "e6aa4b5723d8e1d9138838da9126550459738e3b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "875a53e9_3b79a51c",
        "filename": "crypto/cipher_extra/asm/chacha20_poly1305_x86_64.pl",
        "patchSetId": 1
      },
      "lineNbr": 1238,
      "author": {
        "id": 5415
      },
      "writtenOn": "2017-07-14T19:02:13Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "3fcf618b_4727aa64",
      "revId": "e6aa4b5723d8e1d9138838da9126550459738e3b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa63a16e_aba99203",
        "filename": "crypto/cipher_extra/e_chacha20poly1305.c",
        "patchSetId": 1
      },
      "lineNbr": 220,
      "author": {
        "id": 5415
      },
      "writtenOn": "2017-07-12T01:12:40Z",
      "side": 1,
      "message": "/me makes a face. :-P\n\nI guess we\u0027re at six arguments and extracting arguments from the stack is annoying?",
      "revId": "e6aa4b5723d8e1d9138838da9126550459738e3b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb216bf2_f5e774dc",
        "filename": "crypto/cipher_extra/e_chacha20poly1305.c",
        "patchSetId": 1
      },
      "lineNbr": 220,
      "author": {
        "id": 5070
      },
      "writtenOn": "2017-07-13T19:05:53Z",
      "side": 1,
      "message": "rejuggling the registers is too much of a pain.",
      "parentUuid": "aa63a16e_aba99203",
      "revId": "e6aa4b5723d8e1d9138838da9126550459738e3b",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212",
      "unresolved": false
    }
  ]
}