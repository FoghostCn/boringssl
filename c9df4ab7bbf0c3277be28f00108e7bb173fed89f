{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2ad3220c_7d9da2b2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5440
      },
      "writtenOn": "2024-08-05T22:25:48Z",
      "side": 1,
      "message": "I have some FIPS questions:\n\n1. Does it make sense to be sharing the HKDF-Expand-Label implementation between TLS 1.3 and DTLS 1.3? (A no answer means the HKDF-Expand-Label implementation needs to be copied for DTLS 1.3 instead of reusing code, but a no answer also means I don\u0027t touch the FIPS module, apart from copying some code from it to use outside of it.)\n\nThe rest of the questions are predicated on a \"yes\" to question 1.\n\n2. Is `CRYPTO_tls13_hkdf_expand_label_with_prefix` the right API to add to the fipsmodule, or should it be tailored to dtls, e.g. `CRYPTO_dtls13_hkdf_expand_label`?\n\n3. Assuming version skew between libssl and the fipsmodule is a thing, is a `#define` and `#ifdef` the right way to detect whether there\u0027s version skew (I think that\u0027s what agl was suggesting in https://chat.google.com/room/AAAAqqOAXCA/sR0paSW6Dpw/sR0paSW6Dpw?cls\u003d10,)? Are there better ways of handling the version skew than temporarily having a copy of the new fipsmodule code in libssl?\n\n4. There are various other tests and tools that `CRYPTO_tls13_hkdf_expand_label` is called in (self_check.c, service_indicator_test.cc, modulewrapper.cc, test_fips.c). Do similar tests need to be written for the new function?",
      "revId": "c9df4ab7bbf0c3277be28f00108e7bb173fed89f",
      "serverId": "66b711a4-aa9b-3dac-9062-916540830212"
    }
  ]
}